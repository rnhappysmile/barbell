01:33:49.628 [main] INFO  P.M.MorphemeAnalysisApplication - Starting MorphemeAnalysisApplication using Java 11.0.10 on DESKTOP-OB9UN6A with PID 10148 (C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main started by RNHappySmile in C:\Playground\barbell\MorphemeAnalysis)
01:33:49.632 [main] INFO  P.M.MorphemeAnalysisApplication - No active profile set, falling back to default profiles: default
01:33:51.362 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
01:33:51.375 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
01:33:51.375 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
01:33:51.376 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.45]
01:33:51.499 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
01:33:51.499 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1816 ms
01:33:52.016 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
01:33:52.245 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
01:33:52.267 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
01:33:52.276 [main] INFO  P.M.MorphemeAnalysisApplication - Started MorphemeAnalysisApplication in 3.079 seconds (JVM running for 3.666)
01:33:52.277 [main] INFO  P.M.MorphemeAnalysisApplication - start MorphemeAnalysisApplication
01:33:52.298 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
01:33:54.512 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
01:33:58.143 [main] INFO  P.M.MorphemeAnalysisApplication - end MorphemeAnalysisApplication
01:35:15.313 [main] INFO  P.M.MorphemeAnalysisApplication - Starting MorphemeAnalysisApplication using Java 11.0.10 on DESKTOP-OB9UN6A with PID 21996 (C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main started by RNHappySmile in C:\Playground\barbell\MorphemeAnalysis)
01:35:15.317 [main] INFO  P.M.MorphemeAnalysisApplication - No active profile set, falling back to default profiles: default
01:35:17.214 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
01:35:17.262 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
01:35:17.263 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
01:35:17.264 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.45]
01:35:17.506 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
01:35:17.507 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2084 ms
01:35:18.152 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
01:35:18.382 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
01:35:18.404 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
01:35:18.413 [main] INFO  P.M.MorphemeAnalysisApplication - Started MorphemeAnalysisApplication in 3.565 seconds (JVM running for 4.14)
01:35:18.415 [main] INFO  P.M.MorphemeAnalysisApplication - start MorphemeAnalysisApplication
01:35:18.435 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
01:35:20.522 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
01:35:24.022 [main] INFO  P.M.MorphemeAnalysisApplication - end MorphemeAnalysisApplication
01:45:42.175 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.logging.LoggingSystemFactory] names: [org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory, org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory, org.springframework.boot.logging.java.JavaLoggingSystem.Factory]
01:45:42.476 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'configurationProperties'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'servletConfigInitParams'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'servletContextInitParams'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'systemProperties'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'systemEnvironment'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'random'
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'logging.register-shutdown-hook' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.477 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'logging.register-shutdown-hook' in any property source
01:45:42.478 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'configurationProperties'
01:45:42.478 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'servletConfigInitParams'
01:45:42.479 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'servletContextInitParams'
01:45:42.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'systemProperties'
01:45:42.481 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'systemEnvironment'
01:45:42.481 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'random'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.listener.classes' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'context.listener.classes' in any property source
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'configurationProperties'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'servletConfigInitParams'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'servletContextInitParams'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'systemProperties'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'systemEnvironment'
01:45:42.482 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'random'
01:45:42.483 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.mandatory-file-encoding' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.483 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.mandatory-file-encoding' in any property source
01:45:42.485 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'configurationProperties'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'servletConfigInitParams'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'servletContextInitParams'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'systemProperties'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'systemEnvironment'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'random'
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.beaninfo.ignore' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.487 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.beaninfo.ignore' in any property source
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'configurationProperties'
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'servletConfigInitParams'
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'servletContextInitParams'
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'systemProperties'
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'systemEnvironment'
01:45:42.489 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'random'
01:45:42.490 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.image.location' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.490 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.banner.image.location' in any property source
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'configurationProperties'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'servletConfigInitParams'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'servletContextInitParams'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'systemProperties'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'systemEnvironment'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'random'
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.banner.location' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.494 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.banner.location' in any property source
01:45:42.588 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'configurationProperties'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'servletConfigInitParams'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'servletContextInitParams'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'systemProperties'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'systemEnvironment'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'random'
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'context.initializer.classes' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.593 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'context.initializer.classes' in any property source
01:45:42.594 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'configurationProperties'
01:45:42.594 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'servletConfigInitParams'
01:45:42.594 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'servletContextInitParams'
01:45:42.595 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'systemProperties'
01:45:42.595 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'systemEnvironment'
01:45:42.595 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'random'
01:45:42.595 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.application.name' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.595 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.application.name' in any property source
01:45:42.612 [main] INFO  P.M.MorphemeAnalysisApplication - Starting MorphemeAnalysisApplication using Java 11.0.10 on DESKTOP-OB9UN6A with PID 6108 (C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main started by RNHappySmile in C:\Playground\barbell\MorphemeAnalysis)
01:45:42.612 [main] DEBUG P.M.MorphemeAnalysisApplication - Running with Spring Boot v2.4.5, Spring v5.3.6
01:45:42.612 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'configurationProperties'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'servletConfigInitParams'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'servletContextInitParams'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'systemProperties'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'systemEnvironment'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'random'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.active' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.profiles.active' in any property source
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'configurationProperties'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'servletConfigInitParams'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'servletContextInitParams'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'systemProperties'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'systemEnvironment'
01:45:42.613 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'random'
01:45:42.614 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.profiles.default' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.614 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.profiles.default' in any property source
01:45:42.614 [main] INFO  P.M.MorphemeAnalysisApplication - No active profile set, falling back to default profiles: default
01:45:42.614 [main] DEBUG o.s.boot.SpringApplication - Loading source class Parser.MorphemeAnalysis.MorphemeAnalysisApplication
01:45:42.626 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
01:45:42.677 [main] TRACE o.s.b.env.EnvironmentPostProcessor - RandomValuePropertySource add to Environment
01:45:42.677 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentPostProcessor - Post-processing environment to add config data
01:45:42.677 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Building config data environment contributors
01:45:42.677 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'configurationProperties'
01:45:42.677 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'servletConfigInitParams'
01:45:42.677 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'servletContextInitParams'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'systemProperties'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'systemEnvironment'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating wrapped config data contributor for 'random'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding initial config data import from location 'optional:file:./config/*/'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding initial config data import from location 'optional:file:./config/'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding initial config data import from location 'optional:file:./'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding initial config data import from location 'optional:classpath:/config/'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding initial config data import from location 'optional:classpath:/'
01:45:42.678 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Processing initial config data environment contributors without activation context
01:45:42.678 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports for phase BEFORE_PROFILE_ACTIVATION. no activation context
01:45:42.678 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./config/*/]
01:45:42.678 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.yaml
01:45:42.678 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.yml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.xml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.properties
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./config/]
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.yaml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.yml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.xml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.properties
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./]
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.yaml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.yml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.xml
01:45:42.679 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.properties
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:classpath:/config/]
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.yaml
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.yml
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.xml
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.properties
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:classpath:/]
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.yaml
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.yml
01:45:42.680 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.xml
01:45:42.680 [main] TRACE o.s.b.c.config.ConfigDataLoaders - Loading class path resource [application.properties] using loader org.springframework.boot.context.config.StandardConfigDataLoader
01:45:42.681 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Imported 1 resource [class path resource [application.properties]]
01:45:42.681 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processed imports for of 5 contributors
01:45:42.681 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Creating config data activation context from initial contributions
01:45:42.681 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Processing config data environment contributors with initial activation context
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports for phase BEFORE_PROFILE_ACTIVATION. [ConfigDataActivationContext@5316e95f cloudPlatform = [null], profiles = [null]]
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processed imports for of 0 contributors
01:45:42.683 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Deducing profiles from current config data environment contributors
01:45:42.683 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Processing config data environment contributors with profile activation context
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports for phase AFTER_PROFILE_ACTIVATION. [ConfigDataActivationContext@3f053c80 cloudPlatform = [null], profiles = [Profiles@6c6c5427 active = '[]', default = '[default]', accepted = '[default]']]
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./config/*/]
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.yaml
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.yml
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.xml
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application.properties
01:45:42.683 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application-default.yaml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application-default.yml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application-default.xml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/*/application-default.properties
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./config/]
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.yaml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.yml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.xml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application.properties
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application-default.yaml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application-default.yml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application-default.xml
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./config/application-default.properties
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.684 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:file:./]
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.yaml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.yml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.xml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application.properties
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application-default.yaml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application-default.yml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application-default.xml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource file:./application-default.properties
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:classpath:/config/]
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.yaml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.yml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.xml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application.properties
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application-default.yaml
01:45:42.685 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application-default.yml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application-default.xml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/config/application-default.properties
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processing imports [optional:classpath:/]
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.yaml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.yml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application.xml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application-default.yaml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application-default.yml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application-default.xml
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataLocationResolver - Skipping missing resource classpath:/application-default.properties
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Nothing imported
01:45:42.686 [main] TRACE o.s.b.c.c.ConfigDataEnvironmentContributors - Processed imports for of 5 contributors
01:45:42.686 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Applying config data environment contributions
01:45:42.686 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Adding imported property source 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.687 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Setting default profiles: [default]
01:45:42.687 [main] TRACE o.s.b.c.config.ConfigDataEnvironment - Setting active profiles: []
01:45:42.688 [main] TRACE o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c, started on Tue Jun 22 01:45:42 KST 2021
01:45:42.701 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Registering scope 'request' with implementation [org.springframework.web.context.request.RequestScope@366ef90e]
01:45:42.702 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Registering scope 'session' with implementation [org.springframework.web.context.request.SessionScope@4b3c354a]
01:45:42.718 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
01:45:42.719 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
01:45:42.728 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
01:45:42.738 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:42.738 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:42.738 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' to allow for resolving potential circular references
01:45:42.739 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:42.742 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]
01:45:42.743 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.context.annotation.ConfigurationClassPostProcessor]
01:45:42.751 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.context.annotation.ConfigurationClassPostProcessor]
01:45:42.751 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'applicationStartup' of type [org.springframework.core.metrics.ApplicationStartup]
01:45:42.752 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
01:45:42.752 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'beanNameGenerator' of type [org.springframework.beans.factory.support.BeanNameGenerator]
01:45:42.752 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'environment' of type [org.springframework.core.env.Environment]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'metadataReaderFactory' of type [org.springframework.core.type.classreading.MetadataReaderFactory]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'problemReporter' of type [org.springframework.beans.factory.parsing.ProblemReporter]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'resourceLoader' of type [org.springframework.core.io.ResourceLoader]
01:45:42.753 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sourceExtractor' of type [org.springframework.beans.factory.parsing.SourceExtractor]
01:45:42.762 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
01:45:42.774 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
01:45:42.777 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved classpath location [Parser/MorphemeAnalysis/] to resources [URL [file:/C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/], URL [file:/C:/Playground/barbell/MorphemeAnalysis/build/resources/main/Parser/MorphemeAnalysis/]]
01:45:42.778 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis]
01:45:42.778 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.780 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\Service] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.781 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.782 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.783 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [C:\Playground\barbell\MorphemeAnalysis\build\resources\main\Parser\MorphemeAnalysis]
01:45:42.783 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\resources\main\Parser\MorphemeAnalysis] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/resources/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.784 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\resources\main\Parser\MorphemeAnalysis\mapper] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/resources/main/Parser/MorphemeAnalysis/**/*.class]
01:45:42.784 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:Parser/MorphemeAnalysis/**/*.class] to resources [file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\MorphemeAnalysisApplication.class], file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\Service\Analysis.class], file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbFeed.class], file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbSite.class], file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]]
01:45:42.784 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\MorphemeAnalysisApplication.class]
01:45:42.801 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Ignored because not matching any filter: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\MorphemeAnalysisApplication.class]
01:45:42.801 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\Service\Analysis.class]
01:45:42.803 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Ignored because not matching any filter: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\Service\Analysis.class]
01:45:42.803 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbFeed.class]
01:45:42.803 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Ignored because not matching any filter: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbFeed.class]
01:45:42.803 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbSite.class]
01:45:42.804 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Ignored because not matching any filter: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\domain\DbSite.class]
01:45:42.804 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]
01:45:42.808 [main] TRACE o.s.c.a.ClassPathBeanDefinitionScanner - Ignored because not matching any filter: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'configurationProperties'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'servletConfigInitParams'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'servletContextInitParams'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'systemProperties'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'systemEnvironment'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'random'
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.boot.enableautoconfiguration' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.813 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.boot.enableautoconfiguration' in any property source
01:45:42.815 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.AutoConfigurationImportFilter] names: [org.springframework.boot.autoconfigure.condition.OnBeanCondition, org.springframework.boot.autoconfigure.condition.OnClassCondition, org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition]
01:45:42.827 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.858 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel'
01:45:42.859 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher'
01:45:42.859 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'
01:45:42.859 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'
01:45:42.859 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'
01:45:42.860 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'freemarker.template.Configuration'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.google.gson.Gson'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'
01:45:42.861 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.jms.Message'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.jooq.DSLContext'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.activation.MimeType'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache'
01:45:42.862 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.persistence.EntityManager'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.quartz.Scheduler'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.rsocket.RSocket'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.rsocket.RSocket'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.session.SessionAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.session.Session'
01:45:42.863 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.transaction.Transaction'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet'
01:45:42.864 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller'
01:45:42.864 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.865 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration did not match due to @ConditionalOnWebApplication did not find reactive web application classes
01:45:42.866 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration did not match due to @ConditionalOnWebApplication did not find reactive web application classes
01:45:42.866 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.867 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration did not match due to @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl'
01:45:42.868 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 99 auto configuration class in 40 ms
01:45:42.868 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.AutoConfigurationImportListener] names: [org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener]
01:45:42.869 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.874 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.889 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.896 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'configurationProperties'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'servletConfigInitParams'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'servletContextInitParams'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'systemProperties'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'systemEnvironment'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'random'
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.messages.basename' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.897 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.messages.basename' in any property source
01:45:42.897 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved classpath location [messages.properties] to resources []
01:45:42.897 [main] TRACE o.s.b.a.c.MessageSourceAutoConfiguration$ResourceBundleCondition - Condition MessageSourceAutoConfiguration.ResourceBundleCondition on org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration did not match due to ResourceBundle did not find bundle with basename messages
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.897 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.898 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.898 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.898 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.898 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.901 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.903 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer'
01:45:42.903 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.904 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration matched due to found 'session' scope
01:45:42.904 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.904 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.904 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.904 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.906 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration did not match due to @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap'
01:45:42.906 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.907 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$JettyWebSocketConfiguration did not match due to @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer'
01:45:42.907 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.908 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci'
01:45:42.909 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.909 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.909 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.909 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.911 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.916 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRequest'
01:45:42.916 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.916 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration matched due to found 'session' scope
01:45:42.916 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.916 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.916 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.916 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.923 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'
01:45:42.923 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.923 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.923 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.923 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.925 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty did not match due to @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext'
01:45:42.925 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow did not match due to @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.926 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.927 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'
01:45:42.927 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.927 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration matched due to found 'session' scope
01:45:42.927 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.928 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.928 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.928 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.931 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRegistration'
01:45:42.932 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.932 [main] TRACE o.s.b.a.w.s.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition - Condition DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration matched due to DispatcherServlet Registration did not find servlet registration bean
01:45:42.932 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.932 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.932 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.932 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.933 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRegistration'
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.934 [main] TRACE o.s.b.a.w.s.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition - Condition DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to Default DispatcherServlet did not find dispatcher servlet beans
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.934 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRegistration'
01:45:42.934 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.935 [main] TRACE o.s.b.a.w.s.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition - Condition DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to Default DispatcherServlet did not find dispatcher servlet beans
01:45:42.935 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.935 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.935 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.936 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.936 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.936 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.936 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.937 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.938 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet'
01:45:42.938 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.939 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration matched due to found 'session' scope
01:45:42.939 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.939 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.939 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.939 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.943 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration matched due to @ConditionalOnProperty (server.error.whitelabel.enabled) matched
01:45:42.943 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.945 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider] names: [org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider]
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletConfigInitParams'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletContextInitParams'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'random'
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.948 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.template.provider.cache' in any property source
01:45:42.949 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'configurationProperties'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletConfigInitParams'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletContextInitParams'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemProperties'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemEnvironment'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'random'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.prefix' in any property source
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'configurationProperties'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletConfigInitParams'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletContextInitParams'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemProperties'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemEnvironment'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'random'
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.950 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.suffix' in any property source
01:45:42.951 [main] TRACE o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition - Condition ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration matched due to ErrorTemplate Missing did not find error template view
01:45:42.951 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.951 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.951 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.951 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.952 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.952 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.952 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.953 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.954 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer'
01:45:42.955 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.955 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration matched due to found 'session' scope
01:45:42.955 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.955 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.955 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.955 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.959 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.959 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.959 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.965 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.965 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.965 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.975 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'configurationProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'servletConfigInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'servletContextInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'systemProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'systemEnvironment'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'random'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.strategy.fixed.enabled' in any property source
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'configurationProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'servletConfigInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'servletContextInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'systemProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'systemEnvironment'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'random'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.strategy.content.enabled' in any property source
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'configurationProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'servletConfigInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'servletContextInitParams'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'systemProperties'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'systemEnvironment'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'random'
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:42.976 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.enabled' in any property source
01:45:42.977 [main] TRACE o.s.b.a.w.OnEnabledResourceChainCondition - Condition OnEnabledResourceChainCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration did not match due to @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator
01:45:42.977 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.978 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.979 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'
01:45:42.979 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration did not match due to @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.981 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'
01:45:42.981 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.981 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.981 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:42.981 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.002 [main] TRACE o.s.b.a.j.DataSourceAutoConfiguration$PooledDataSourceCondition - Condition DataSourceAutoConfiguration.PooledDataSourceCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration matched due to AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type'
01:45:43.002 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.002 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.002 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.002 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.006 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.006 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari matched due to @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched
01:45:43.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.007 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat did not match due to @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource'
01:45:43.007 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.008 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2 did not match due to @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource'
01:45:43.008 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.009 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp did not match due to @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection'
01:45:43.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.009 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic did not match due to @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type'
01:45:43.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.009 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration matched due to @ConditionalOnProperty (spring.jmx.enabled=true) matched
01:45:43.010 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.010 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.010 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.010 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.012 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$TomcatDataSourceJmxConfiguration did not match due to @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy'
01:45:43.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.012 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.015 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.datasource.url' in PropertySource 'configurationProperties'
01:45:43.015 [main] DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.datasource.url' in PropertySource 'configurationProperties' with value of type String
01:45:43.015 [main] TRACE o.s.b.a.j.DataSourceAutoConfiguration$EmbeddedDatabaseCondition - Condition DataSourceAutoConfiguration.EmbeddedDatabaseCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration did not match due to EmbeddedDataSource spring.datasource.url is set
01:45:43.015 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.017 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.017 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.017 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.020 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$OracleUcpPoolDataSourceMetadataProviderConfiguration did not match due to @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection'
01:45:43.020 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.020 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$CommonsDbcp2PoolDataSourceMetadataProviderConfiguration did not match due to @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource'
01:45:43.021 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.021 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.021 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.021 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.021 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.021 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.022 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$TomcatDataSourcePoolMetadataProviderConfiguration did not match due to @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource'
01:45:43.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.024 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.024 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.024 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.025 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.026 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration matched due to @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver'
01:45:43.027 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.027 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.027 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.027 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.038 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$ThymeleafConfiguration did not match due to @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver'
01:45:43.039 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.040 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$VelocityConfiguration did not match due to @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig'
01:45:43.041 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.041 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$LegacyVelocityConfiguration did not match due to @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver'
01:45:43.042 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.043 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$FreeMarkerConfiguration did not match due to @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig'
01:45:43.043 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.044 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$LegacyFreeMarkerConfiguration did not match due to @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver'
01:45:43.044 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.046 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.046 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.046 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.047 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.048 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.048 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.050 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'
01:45:43.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.052 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.052 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.052 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.053 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.053 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.053 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.054 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.054 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.054 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.055 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter'
01:45:43.055 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.055 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration did not match due to @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled'
01:45:43.055 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.055 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.055 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.056 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.056 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.056 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.056 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration did not match due to @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration matched due to @ConditionalOnProperty (spring.aop.auto=true) matched
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.058 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.059 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration matched due to @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice'
01:45:43.059 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.060 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration matched due to @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched
01:45:43.060 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.060 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.060 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.060 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration did not match due to @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.061 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.062 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.062 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.cache.CacheManager'
01:45:43.062 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.062 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.062 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.062 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.069 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.069 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.069 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.070 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.070 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.cache.Caching'
01:45:43.070 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.070 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.070 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.070 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache'
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.HazelcastCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.071 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.071 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.InfinispanCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.CouchbaseCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.072 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.072 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration did not match due to @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.a.AutoConfigurationImportSelector - Filtered 1 auto configuration class in 0 ms
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.073 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.a.cache.CacheCondition - Condition CacheCondition on org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration matched due to Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.a.cache.CacheCondition - Condition CacheCondition on org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration matched due to Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.075 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.a.cache.CacheCondition - Condition CacheCondition on org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration matched due to Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.078 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor did not match due to @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean'
01:45:43.078 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.078 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.078 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.079 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.080 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.082 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration matched due to @ConditionalOnClass found required class 'org.h2.server.web.WebServlet'
01:45:43.082 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.082 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration matched due to found 'session' scope
01:45:43.082 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.083 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration did not match due to @ConditionalOnProperty (spring.h2.console.enabled=true) did not find property 'enabled'
01:45:43.083 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.083 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.083 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.083 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.083 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.084 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.084 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.085 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'
01:45:43.085 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.085 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.085 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.085 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.087 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.087 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.089 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.092 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter'
01:45:43.093 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.094 [main] TRACE o.s.b.a.h.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition - Condition HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration matched due to NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes
01:45:43.094 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.094 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.094 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.094 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.096 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter'
01:45:43.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.099 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration did not match due to @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper'
01:45:43.099 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.100 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'
01:45:43.100 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.100 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration matched due to @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched
01:45:43.100 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.100 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.100 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.100 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.102 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration did not match due to @ConditionalOnClass did not find required class 'com.google.gson.Gson'
01:45:43.102 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration did not match due to @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.105 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate'
01:45:43.105 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.105 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.105 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.105 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.107 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.107 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.107 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.107 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.108 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.109 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.110 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine'
01:45:43.110 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.110 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.110 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.110 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.116 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect matched due to @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect'
01:45:43.116 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.116 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.116 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.116 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.116 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration did not match due to @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect'
01:45:43.116 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.117 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DataAttributeDialectConfiguration did not match due to @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect'
01:45:43.117 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.117 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration did not match due to @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect'
01:45:43.117 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.118 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration did not match due to did not find reactive web application classes
01:45:43.118 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.118 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration did not match due to did not find reactive web application classes
01:45:43.118 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.118 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration matched due to found 'session' scope
01:45:43.118 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.119 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration matched due to @ConditionalOnProperty (spring.thymeleaf.enabled) matched
01:45:43.119 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.119 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.119 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.119 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.119 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.120 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.121 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.122 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager'
01:45:43.122 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.122 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.122 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.122 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.123 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.123 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.124 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.125 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager'
01:45:43.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.126 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.126 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.126 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.129 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration matched due to @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched
01:45:43.130 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.130 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.130 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.130 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.134 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.134 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.134 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.136 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration did not match due to @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.137 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.138 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'
01:45:43.139 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.140 [main] TRACE o.s.b.a.w.c.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition - Condition RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition on org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration matched due to NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes
01:45:43.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.141 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.142 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration matched due to @ConditionalOnWebApplication (required) found 'session' scope
01:45:43.142 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.142 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.142 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.142 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.145 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration did not match due to @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer'
01:45:43.145 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.147 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration did not match due to @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode'
01:45:43.147 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.147 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration did not match due to @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext'
01:45:43.147 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.148 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.149 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter'
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.150 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to found 'session' scope
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.150 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to @ConditionalOnProperty (server.servlet.encoding.enabled) matched
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.150 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.151 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement'
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to found 'session' scope
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to @ConditionalOnProperty (spring.servlet.multipart.enabled) matched
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.152 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.159 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
01:45:43.163 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched due to @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans
01:45:43.163 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.166 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration.propertySourcesPlaceholderConfigurer()
01:45:43.166 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer'
01:45:43.166 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.166 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration matched due to found 'session' scope
01:45:43.166 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.167 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci'
01:45:43.167 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.167 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:45:43.167 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched due to @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans
01:45:43.167 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.167 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.websocketServletWebServerCustomizer()
01:45:43.168 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
01:45:43.168 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRequest'
01:45:43.168 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.168 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration matched due to found 'session' scope
01:45:43.168 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.169 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'
01:45:43.169 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.173 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat matched due to @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans
01:45:43.173 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.174 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:45:43.174 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat.tomcatServletWebServerFactory()
01:45:43.175 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:43.175 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration.servletWebServerFactoryCustomizer()
01:45:43.176 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched due to @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat'
01:45:43.176 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.176 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration.tomcatServletWebServerFactoryCustomizer()
01:45:43.176 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter did not match due to @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy'
01:45:43.176 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.190 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'
01:45:43.190 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.190 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration matched due to found 'session' scope
01:45:43.190 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.190 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRegistration'
01:45:43.190 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.190 [main] TRACE o.s.b.a.w.s.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition - Condition DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration matched due to DispatcherServlet Registration did not find servlet registration bean
01:45:43.190 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.190 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to @ConditionalOnClass found required class 'javax.servlet.ServletRegistration'
01:45:43.191 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.191 [main] TRACE o.s.b.a.w.s.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition - Condition DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration matched due to Default DispatcherServlet did not find dispatcher servlet beans
01:45:43.191 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.191 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:45:43.192 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration.dispatcherServlet()
01:45:43.193 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration#multipartResolver did not match due to @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver
01:45:43.193 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.194 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:45:43.195 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched due to @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'
01:45:43.195 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.195 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.dispatcherServletRegistration()
01:45:43.196 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
01:45:43.196 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor'
01:45:43.196 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.196 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:43.200 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration#taskExecutorBuilder matched due to @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans
01:45:43.200 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.200 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.taskExecutorBuilder()
01:45:43.201 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration#applicationTaskExecutor matched due to @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans
01:45:43.201 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.201 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Alias definition 'taskExecutor' registered for name 'applicationTaskExecutor'
01:45:43.201 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.applicationTaskExecutor()
01:45:43.201 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet'
01:45:43.202 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.202 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration matched due to found 'session' scope
01:45:43.202 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.202 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration matched due to @ConditionalOnProperty (server.error.whitelabel.enabled) matched
01:45:43.202 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.202 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider] names: [org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider]
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletConfigInitParams'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletContextInitParams'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'random'
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.202 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.template.provider.cache' in any property source
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'configurationProperties'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletConfigInitParams'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletContextInitParams'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemProperties'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemEnvironment'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'random'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.prefix' in any property source
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'configurationProperties'
01:45:43.203 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletConfigInitParams'
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletContextInitParams'
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemProperties'
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemEnvironment'
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'random'
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.204 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.suffix' in any property source
01:45:43.204 [main] TRACE o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition - Condition ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration matched due to ErrorTemplate Missing did not find error template view
01:45:43.204 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.204 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:43.205 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration#defaultErrorView matched due to @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans
01:45:43.205 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.205 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.error()
01:45:43.208 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration#beanNameViewResolver matched due to @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans
01:45:43.208 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.208 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.beanNameViewResolver()
01:45:43.208 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:45:43.210 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched due to @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans
01:45:43.210 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.210 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched due to @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans
01:45:43.210 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.210 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.conventionErrorViewResolver()
01:45:43.211 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:43.213 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration#errorAttributes matched due to @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans
01:45:43.213 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.213 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.errorAttributes()
01:45:43.216 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration#basicErrorController matched due to @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans
01:45:43.216 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.216 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.basicErrorController()
01:45:43.216 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.errorPageCustomizer()
01:45:43.216 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.preserveErrorControllerTargetClassPostProcessor()
01:45:43.217 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer'
01:45:43.217 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.217 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration matched due to found 'session' scope
01:45:43.217 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.219 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration matched due to @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans
01:45:43.219 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.220 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:43.220 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.requestMappingHandlerAdapter()
01:45:43.220 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.requestMappingHandlerMapping()
01:45:43.220 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.welcomePageHandlerMapping()
01:45:43.220 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration#localeResolver matched due to @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans
01:45:43.220 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.220 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.localeResolver()
01:45:43.221 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration#themeResolver matched due to @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans
01:45:43.221 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.221 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.themeResolver()
01:45:43.221 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration#flashMapManager matched due to @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans
01:45:43.221 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.221 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.flashMapManager()
01:45:43.221 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcConversionService()
01:45:43.221 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcValidator()
01:45:43.221 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcContentNegotiationManager()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcPatternParser()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcUrlPathHelper()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcPathMatcher()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.viewControllerHandlerMapping()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.beanNameHandlerMapping()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.routerFunctionMapping()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.resourceHandlerMapping()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcResourceUrlProvider()
01:45:43.222 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.defaultServletHandlerMapping()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.handlerFunctionAdapter()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcUriComponentsContributor()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.httpRequestHandlerAdapter()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.simpleControllerHandlerAdapter()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.handlerExceptionResolver()
01:45:43.223 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcViewResolver()
01:45:43.224 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.mvcHandlerMappingIntrospector()
01:45:43.224 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration.viewNameTranslator()
01:45:43.225 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:43.250 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#defaultViewResolver matched due to @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans
01:45:43.250 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.250 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.defaultViewResolver()
01:45:43.254 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#beanNameViewResolver did not match due to @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver
01:45:43.254 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.254 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#viewResolver matched due to @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans
01:45:43.254 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.254 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#viewResolver matched due to @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans
01:45:43.255 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.255 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.viewResolver()
01:45:43.257 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#requestContextFilter matched due to @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans
01:45:43.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.258 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter#requestContextFilter matched due to @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans
01:45:43.258 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.258 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.requestContextFilter()
01:45:43.259 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:45:43.259 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration#hiddenHttpMethodFilter did not match due to @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled'
01:45:43.260 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.260 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration#formContentFilter matched due to @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched
01:45:43.260 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.262 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration#formContentFilter matched due to @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans
01:45:43.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.262 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter()
01:45:43.262 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'
01:45:43.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.263 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration matched due to @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans
01:45:43.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.265 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration matched due to @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans
01:45:43.265 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.265 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.265 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.266 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari matched due to @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched
01:45:43.266 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.266 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari matched due to @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans
01:45:43.266 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.266 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:45:43.266 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource()
01:45:43.266 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration matched due to @ConditionalOnProperty (spring.jmx.enabled=true) matched
01:45:43.266 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.267 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.267 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.268 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari matched due to @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'
01:45:43.268 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.269 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
01:45:43.269 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
01:45:43.270 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
01:45:43.270 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration matched due to @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'
01:45:43.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.270 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:45:43.271 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration.hikariPoolDataSourceMetadataProvider()
01:45:43.271 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
01:45:43.271 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:43.271 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
01:45:43.272 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
01:45:43.273 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration matched due to @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver'
01:45:43.273 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.273 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
01:45:43.273 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'
01:45:43.273 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.276 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration matched due to @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'
01:45:43.276 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.277 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration did not match due to @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0
01:45:43.277 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.277 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:43.283 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration#sqlSessionFactory matched due to @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans
01:45:43.283 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.286 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory()
01:45:43.288 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration#sqlSessionTemplate matched due to @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans
01:45:43.288 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.289 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionTemplate()
01:45:43.289 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration matched due to @ConditionalOnProperty (spring.aop.auto=true) matched
01:45:43.289 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.290 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration matched due to @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice'
01:45:43.290 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.291 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration matched due to @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched
01:45:43.291 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.291 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
01:45:43.291 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
01:45:43.291 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:45:43.291 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration.applicationAvailability()
01:45:43.291 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.cache.CacheManager'
01:45:43.292 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.294 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match due to @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport
01:45:43.294 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.294 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
01:45:43.294 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:45:43.294 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration#defaultLifecycleProcessor matched due to @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans
01:45:43.294 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.295 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration.lifecycleProcessor()
01:45:43.295 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor'
01:45:43.295 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.295 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
01:45:43.295 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched due to @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched
01:45:43.295 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.297 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched due to @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans
01:45:43.297 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.297 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration.persistenceExceptionTranslationPostProcessor()
01:45:43.298 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'
01:45:43.298 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.298 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.298 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.298 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:45:43.298 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.standardJacksonObjectMapperBuilderCustomizer()
01:45:43.299 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.299 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.299 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:45:43.301 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched due to @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans
01:45:43.301 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.301 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.jacksonObjectMapperBuilder()
01:45:43.301 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule'
01:45:43.301 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.301 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:45:43.303 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration#parameterNamesModule matched due to @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans
01:45:43.303 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.303 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration.parameterNamesModule()
01:45:43.303 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'
01:45:43.303 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.303 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:45:43.304 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration#jacksonObjectMapper matched due to @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans
01:45:43.304 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.305 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration.jacksonObjectMapper()
01:45:43.305 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:45:43.305 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.jsonComponentModule()
01:45:43.305 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter'
01:45:43.305 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.305 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter'
01:45:43.305 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.305 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:45:43.307 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched due to @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans
01:45:43.307 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.308 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.stringHttpMessageConverter()
01:45:43.308 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration matched due to @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'
01:45:43.308 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.308 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration matched due to @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched
01:45:43.308 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.309 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration matched due to @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper'
01:45:43.309 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.309 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:45:43.310 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched due to @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans
01:45:43.311 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.311 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.mappingJackson2HttpMessageConverter()
01:45:43.311 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
01:45:43.315 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:45:43.316 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration#messageConverters matched due to @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans
01:45:43.316 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.316 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration.messageConverters()
01:45:43.317 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'configurationProperties'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'servletConfigInitParams'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'servletContextInitParams'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'systemProperties'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'systemEnvironment'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'random'
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.git.location' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.317 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.info.git.location' in any property source
01:45:43.318 [main] TRACE o.s.b.a.i.ProjectInfoAutoConfiguration$GitResourceAvailableCondition - Condition ProjectInfoAutoConfiguration.GitResourceAvailableCondition on org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration#gitProperties did not match due to GitResource did not find git info at classpath:git.properties
01:45:43.318 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'configurationProperties'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'servletConfigInitParams'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'servletContextInitParams'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'systemProperties'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'systemEnvironment'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'random'
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location:classpath:META-INF/build-info.properties' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.info.build.location:classpath:META-INF/build-info.properties' in any property source
01:45:43.318 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'configurationProperties'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'servletConfigInitParams'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'servletContextInitParams'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'systemProperties'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'systemEnvironment'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'random'
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.info.build.location' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.319 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.info.build.location' in any property source
01:45:43.319 [main] TRACE o.s.util.PropertyPlaceholderHelper - Resolved placeholder 'spring.info.build.location:classpath:META-INF/build-info.properties'
01:45:43.319 [main] TRACE o.s.b.a.c.OnResourceCondition - Condition OnResourceCondition on org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration#buildProperties did not match due to @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}'
01:45:43.319 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.319 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate'
01:45:43.319 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.320 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration matched due to @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'
01:45:43.320 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.321 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration matched due to @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans
01:45:43.321 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.321 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:45:43.321 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration.jdbcTemplate()
01:45:43.323 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration matched due to @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans
01:45:43.323 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.323 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration matched due to @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans
01:45:43.323 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.323 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:45:43.324 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration.namedParameterJdbcTemplate()
01:45:43.324 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
01:45:43.324 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler'
01:45:43.325 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.325 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:45:43.325 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration#taskScheduler did not match due to @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor
01:45:43.325 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.327 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched due to @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans
01:45:43.327 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.327 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration.taskSchedulerBuilder()
01:45:43.328 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine'
01:45:43.328 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.328 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect matched due to @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect'
01:45:43.328 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.328 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:45:43.329 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect#java8TimeDialect matched due to @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans
01:45:43.329 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.329 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect.java8TimeDialect()
01:45:43.329 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration matched due to found 'session' scope
01:45:43.329 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.329 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration matched due to @ConditionalOnProperty (spring.thymeleaf.enabled) matched
01:45:43.329 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.329 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:45:43.330 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration#thymeleafViewResolver matched due to @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans
01:45:43.330 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.330 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration.thymeleafViewResolver()
01:45:43.330 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
01:45:43.330 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'configurationProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'servletConfigInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'servletContextInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'systemProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'systemEnvironment'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'random'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.fixed.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.strategy.fixed.enabled' in any property source
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'configurationProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'servletConfigInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'servletContextInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'systemProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'systemEnvironment'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'random'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.strategy.content.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.strategy.content.enabled' in any property source
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'configurationProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'servletConfigInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'servletContextInitParams'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'systemProperties'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'systemEnvironment'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'random'
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.web.resources.chain.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.331 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.web.resources.chain.enabled' in any property source
01:45:43.331 [main] TRACE o.s.b.a.w.OnEnabledResourceChainCondition - Condition OnEnabledResourceChainCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter did not match due to @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator
01:45:43.332 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.332 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:45:43.334 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration#templateEngine matched due to @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans
01:45:43.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.335 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration.templateEngine()
01:45:43.335 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration matched due to @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans
01:45:43.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.335 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:45:43.335 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.defaultTemplateResolver()
01:45:43.336 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
01:45:43.336 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration matched due to @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager'
01:45:43.336 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.339 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration matched due to @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'
01:45:43.339 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.339 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:45:43.340 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration#transactionManager matched due to @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans
01:45:43.340 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.340 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration.transactionManager()
01:45:43.341 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
01:45:43.341 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager'
01:45:43.341 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.344 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration matched due to @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans
01:45:43.344 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.345 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration matched due to @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans
01:45:43.345 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.345 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration matched due to @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched
01:45:43.345 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.345 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.345 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
01:45:43.345 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
01:45:43.345 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
01:45:43.346 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
01:45:43.346 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
01:45:43.348 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
01:45:43.354 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration matched due to @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager'
01:45:43.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.355 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:45:43.356 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration#transactionTemplate matched due to @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans
01:45:43.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.356 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration.transactionTemplate()
01:45:43.358 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:45:43.361 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration#platformTransactionManagerCustomizers matched due to @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans
01:45:43.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.362 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration.platformTransactionManagerCustomizers()
01:45:43.363 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration#transactionalOperator did not match due to @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans
01:45:43.363 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.364 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'
01:45:43.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.364 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
01:45:43.365 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched due to @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans
01:45:43.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.365 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration.restTemplateBuilderConfigurer()
01:45:43.367 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration#restTemplateBuilder matched due to @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans
01:45:43.367 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.367 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration.restTemplateBuilder()
01:45:43.367 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration matched due to @ConditionalOnWebApplication (required) found 'session' scope
01:45:43.367 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.367 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration matched due to @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'
01:45:43.367 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.367 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:45:43.367 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.tomcatWebServerFactoryCustomizer()
01:45:43.368 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
01:45:43.368 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter'
01:45:43.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.368 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to found 'session' scope
01:45:43.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.368 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration matched due to @ConditionalOnProperty (server.servlet.encoding.enabled) matched
01:45:43.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.368 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:43.371 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration#characterEncodingFilter matched due to @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans
01:45:43.371 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.371 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration.characterEncodingFilter()
01:45:43.371 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration.localeCharsetMappingsCustomizer()
01:45:43.371 [main] TRACE o.s.b.a.condition.OnClassCondition - Condition OnClassCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement'
01:45:43.372 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.372 [main] TRACE o.s.b.a.c.OnWebApplicationCondition - Condition OnWebApplicationCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to found 'session' scope
01:45:43.372 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.372 [main] TRACE o.s.b.a.c.OnPropertyCondition - Condition OnPropertyCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration matched due to @ConditionalOnProperty (spring.servlet.multipart.enabled) matched
01:45:43.372 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.372 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:43.375 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration#multipartConfigElement matched due to @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans
01:45:43.375 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.375 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration.multipartConfigElement()
01:45:43.376 [main] TRACE o.s.b.a.condition.OnBeanCondition - Condition OnBeanCondition on org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration#multipartResolver matched due to @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans
01:45:43.376 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'autoConfigurationReport'
01:45:43.376 [main] TRACE o.s.c.a.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration.multipartResolver()
01:45:43.392 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:45:43.392 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:45:43.392 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0' to allow for resolving potential circular references
01:45:43.395 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.mybatis.spring.mapper.MapperScannerConfigurer]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.mybatis.spring.mapper.MapperScannerConfigurer]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'addToConfig' of type [boolean]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'annotationClass' of type [java.lang.Class]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'applicationContext' of type [org.springframework.context.ApplicationContext]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'basePackage' of type [java.lang.String]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'beanName' of type [java.lang.String]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'defaultScope' of type [java.lang.String]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'lazyInitialization' of type [java.lang.String]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'mapperFactoryBeanClass' of type [java.lang.Class]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'markerInterface' of type [java.lang.Class]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'nameGenerator' of type [org.springframework.beans.factory.support.BeanNameGenerator]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'processPropertyPlaceHolders' of type [boolean]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionFactory' of type [org.apache.ibatis.session.SqlSessionFactory]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionFactoryBeanName' of type [java.lang.String]
01:45:43.397 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate]
01:45:43.398 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionTemplateBeanName' of type [java.lang.String]
01:45:43.401 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:45:43.401 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:45:43.401 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
01:45:43.401 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'propertySourcesPlaceholderConfigurer'
01:45:43.405 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'propertySourcesPlaceholderConfigurer' to allow for resolving potential circular references
01:45:43.405 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'propertySourcesPlaceholderConfigurer'
01:45:43.414 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
01:45:43.416 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved classpath location [Parser/MorphemeAnalysis/mapper/] to resources [URL [file:/C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/mapper/], URL [file:/C:/Playground/barbell/MorphemeAnalysis/build/resources/main/Parser/MorphemeAnalysis/mapper/]]
01:45:43.416 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper]
01:45:43.417 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/classes/java/main/Parser/MorphemeAnalysis/mapper/**/*.class]
01:45:43.417 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [C:\Playground\barbell\MorphemeAnalysis\build\resources\main\Parser\MorphemeAnalysis\mapper]
01:45:43.417 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Searching directory [C:\Playground\barbell\MorphemeAnalysis\build\resources\main\Parser\MorphemeAnalysis\mapper] for files matching pattern [C:/Playground/barbell/MorphemeAnalysis/build/resources/main/Parser/MorphemeAnalysis/mapper/**/*.class]
01:45:43.418 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:Parser/MorphemeAnalysis/mapper/**/*.class] to resources [file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]]
01:45:43.418 [main] TRACE o.m.s.mapper.ClassPathMapperScanner - Scanning file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]
01:45:43.418 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]
01:45:43.419 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'feedMapper' and 'Parser.MorphemeAnalysis.mapper.FeedMapper' mapperInterface
01:45:43.420 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'feedMapper'.
01:45:43.486 [main] TRACE o.s.c.a.ConfigurationClassEnhancer - Successfully enhanced Parser.MorphemeAnalysis.MorphemeAnalysisApplication; enhanced class name is: Parser.MorphemeAnalysis.MorphemeAnalysisApplication$$EnhancerBySpringCGLIB$$54d5ecbd
01:45:43.486 [main] TRACE o.s.c.a.ConfigurationClassPostProcessor - Replacing bean definition 'morphemeAnalysisApplication' existing class 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication' with enhanced class 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication$$EnhancerBySpringCGLIB$$54d5ecbd'
01:45:43.487 [main] TRACE o.s.c.a.ConfigurationClassEnhancer - Successfully enhanced org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration; enhanced class name is: org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$$EnhancerBySpringCGLIB$$59305f37
01:45:43.487 [main] TRACE o.s.c.a.ConfigurationClassPostProcessor - Replacing bean definition 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration' existing class 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration' with enhanced class 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$$EnhancerBySpringCGLIB$$59305f37'
01:45:43.489 [main] TRACE o.s.c.a.ConfigurationClassEnhancer - Successfully enhanced org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration; enhanced class name is: org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ae8c57f7
01:45:43.489 [main] TRACE o.s.c.a.ConfigurationClassPostProcessor - Replacing bean definition 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' existing class 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' with enhanced class 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ae8c57f7'
01:45:43.490 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'propertySourcesPlaceholderConfigurer'
01:45:43.491 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
01:45:43.491 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
01:45:43.492 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
01:45:43.492 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
01:45:43.492 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
01:45:43.492 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'preserveErrorControllerTargetClassPostProcessor'
01:45:43.492 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'preserveErrorControllerTargetClassPostProcessor' to allow for resolving potential circular references
01:45:43.492 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'preserveErrorControllerTargetClassPostProcessor'
01:45:43.493 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
01:45:43.493 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
01:45:43.493 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
01:45:43.495 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
01:45:43.495 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
01:45:43.497 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
01:45:43.497 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
01:45:43.497 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
01:45:43.497 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
01:45:43.500 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' to allow for resolving potential circular references
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:45:43.500 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
01:45:43.500 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
01:45:43.500 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
01:45:43.501 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory' to allow for resolving potential circular references
01:45:43.501 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
01:45:43.501 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'propertySourcesPlaceholderConfigurer'
01:45:43.502 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder' to allow for resolving potential circular references
01:45:43.502 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
01:45:43.502 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:45:43.502 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
01:45:43.502 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSourceInitializerPostProcessor'
01:45:43.505 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSourceInitializerPostProcessor' to allow for resolving potential circular references
01:45:43.505 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSourceInitializerPostProcessor'
01:45:43.505 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
01:45:43.505 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'persistenceExceptionTranslationPostProcessor'
01:45:43.513 [main] TRACE o.s.beans.TypeConverterDelegate - Converting String to [class java.lang.Class] using property editor [org.springframework.beans.propertyeditors.ClassEditor@1ffcf674]
01:45:43.515 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'environment'
01:45:43.515 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'configurationProperties'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'servletConfigInitParams'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'servletContextInitParams'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'systemProperties'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'systemEnvironment'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'random'
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.aop.proxy-target-class' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.516 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.aop.proxy-target-class' in any property source
01:45:43.518 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'persistenceExceptionTranslationPostProcessor' to allow for resolving potential circular references
01:45:43.522 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'persistenceExceptionTranslationPostProcessor'
01:45:43.522 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
01:45:43.522 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
01:45:43.526 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
01:45:43.526 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'advisorAdapterRegistry' of type [org.springframework.aop.framework.adapter.AdvisorAdapterRegistry]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'applyCommonInterceptorsFirst' of type [boolean]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'customTargetSourceCreators' of type [[Lorg.springframework.aop.framework.autoproxy.TargetSourceCreator;]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'exposeProxy' of type [boolean]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'frozen' of type [boolean]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'interceptorNames' of type [[Ljava.lang.String;]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'opaque' of type [boolean]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'optimize' of type [boolean]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'proxyClassLoader' of type [java.lang.ClassLoader]
01:45:43.531 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'proxyTargetClass' of type [boolean]
01:45:43.537 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
01:45:43.537 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
01:45:43.537 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'webServerFactoryCustomizerBeanPostProcessor'
01:45:43.538 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'webServerFactoryCustomizerBeanPostProcessor' to allow for resolving potential circular references
01:45:43.538 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'webServerFactoryCustomizerBeanPostProcessor'
01:45:43.538 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
01:45:43.538 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'errorPageRegistrarBeanPostProcessor'
01:45:43.538 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'errorPageRegistrarBeanPostProcessor' to allow for resolving potential circular references
01:45:43.538 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'errorPageRegistrarBeanPostProcessor'
01:45:43.541 [main] TRACE o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - No 'messageSource' bean, using [Empty MessageSource]
01:45:43.541 [main] TRACE o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]
01:45:43.543 [main] DEBUG o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@23b3aa8c]
01:45:43.544 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
01:45:43.545 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'tomcatServletWebServerFactory'
01:45:43.546 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:45:43.546 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:45:43.547 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat' to allow for resolving potential circular references
01:45:43.547 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.547 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.548 [main] TRACE o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
01:45:43.548 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.548 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.549 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration]
01:45:43.550 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration]
01:45:43.550 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:43.551 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'importMetadata' of type [org.springframework.core.type.AnnotationMetadata]
01:45:43.553 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
01:45:43.555 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
01:45:43.555 [main] TRACE o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.556 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.557 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
01:45:43.557 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionAttributeSource'
01:45:43.557 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.561 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
01:45:43.561 [main] TRACE o.s.a.f.a.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.561 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionAttributeSource'
01:45:43.562 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
01:45:43.562 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionInterceptor'
01:45:43.562 [main] TRACE o.s.a.f.a.InfrastructureAdvisorAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.TransactionInterceptor]
01:45:43.562 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:43.562 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
01:45:43.562 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
01:45:43.569 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
01:45:43.570 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
01:45:43.570 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionInterceptor'
01:45:43.570 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
01:45:43.570 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
01:45:43.573 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
01:45:43.574 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.576 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:45:43.605 [main] DEBUG o.a.c.core.AprLifecycleListener - The Apache Tomcat Native library could not be found using names [tcnative-1, libtcnative-1] on the java.library.path [C:\Program Files\Java\jdk-11.0.10\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_281\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\apache-maven-3.8.1\bin;C:\Users\RNHappySmile\AppData\Local\Microsoft\WindowsApps;C:\Users\RNHappySmile\AppData\Local\GitHubDesktop\bin;C:\Users\RNHappySmile\AppData\Local\Programs\Microsoft VS Code\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.1\bin;;C:\Program Files\Bandizip\;.]. The errors reported were [Can't load library: C:\Playground\barbell\MorphemeAnalysis\bin\tcnative-1.dll, Can't load library: C:\Playground\barbell\MorphemeAnalysis\bin\libtcnative-1.dll, no tcnative-1 in java.library.path: [C:\Program Files\Java\jdk-11.0.10\bin, C:\WINDOWS\Sun\Java\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\Program Files\Java\jdk1.8.0_281\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\WINDOWS\System32\Wbem, C:\WINDOWS\System32\WindowsPowerShell\v1.0\, C:\WINDOWS\System32\OpenSSH\, C:\Program Files\Docker\Docker\resources\bin, C:\ProgramData\DockerDesktop\version-bin, C:\Program Files\apache-maven-3.8.1\bin, C:\Users\RNHappySmile\AppData\Local\Microsoft\WindowsApps, C:\Users\RNHappySmile\AppData\Local\GitHubDesktop\bin, C:\Users\RNHappySmile\AppData\Local\Programs\Microsoft VS Code\bin, ., C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.1\bin, ., C:\Program Files\Bandizip\, .], no libtcnative-1 in java.library.path: [C:\Program Files\Java\jdk-11.0.10\bin, C:\WINDOWS\Sun\Java\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\Program Files\Java\jdk1.8.0_281\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\WINDOWS\System32\Wbem, C:\WINDOWS\System32\WindowsPowerShell\v1.0\, C:\WINDOWS\System32\OpenSSH\, C:\Program Files\Docker\Docker\resources\bin, C:\ProgramData\DockerDesktop\version-bin, C:\Program Files\apache-maven-3.8.1\bin, C:\Users\RNHappySmile\AppData\Local\Microsoft\WindowsApps, C:\Users\RNHappySmile\AppData\Local\GitHubDesktop\bin, C:\Users\RNHappySmile\AppData\Local\Programs\Microsoft VS Code\bin, ., C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.1\bin, ., C:\Program Files\Bandizip\, .]]
org.apache.tomcat.jni.LibraryNotFoundError: Can't load library: C:\Playground\barbell\MorphemeAnalysis\bin\tcnative-1.dll, Can't load library: C:\Playground\barbell\MorphemeAnalysis\bin\libtcnative-1.dll, no tcnative-1 in java.library.path: [C:\Program Files\Java\jdk-11.0.10\bin, C:\WINDOWS\Sun\Java\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\Program Files\Java\jdk1.8.0_281\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\WINDOWS\System32\Wbem, C:\WINDOWS\System32\WindowsPowerShell\v1.0\, C:\WINDOWS\System32\OpenSSH\, C:\Program Files\Docker\Docker\resources\bin, C:\ProgramData\DockerDesktop\version-bin, C:\Program Files\apache-maven-3.8.1\bin, C:\Users\RNHappySmile\AppData\Local\Microsoft\WindowsApps, C:\Users\RNHappySmile\AppData\Local\GitHubDesktop\bin, C:\Users\RNHappySmile\AppData\Local\Programs\Microsoft VS Code\bin, ., C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.1\bin, ., C:\Program Files\Bandizip\, .], no libtcnative-1 in java.library.path: [C:\Program Files\Java\jdk-11.0.10\bin, C:\WINDOWS\Sun\Java\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\Program Files\Java\jdk1.8.0_281\bin, C:\WINDOWS\system32, C:\WINDOWS, C:\WINDOWS\System32\Wbem, C:\WINDOWS\System32\WindowsPowerShell\v1.0\, C:\WINDOWS\System32\OpenSSH\, C:\Program Files\Docker\Docker\resources\bin, C:\ProgramData\DockerDesktop\version-bin, C:\Program Files\apache-maven-3.8.1\bin, C:\Users\RNHappySmile\AppData\Local\Microsoft\WindowsApps, C:\Users\RNHappySmile\AppData\Local\GitHubDesktop\bin, C:\Users\RNHappySmile\AppData\Local\Programs\Microsoft VS Code\bin, ., C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.1\bin, ., C:\Program Files\Bandizip\, .]
	at org.apache.tomcat.jni.Library.<init>(Library.java:102)
	at org.apache.tomcat.jni.Library.initialize(Library.java:206)
	at org.apache.catalina.core.AprLifecycleListener.init(AprLifecycleListener.java:193)
	at org.apache.catalina.core.AprLifecycleListener.isAprAvailable(AprLifecycleListener.java:102)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getDefaultLifecycleListeners(TomcatServletWebServerFactory.java:173)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.<init>(TomcatServletWebServerFactory.java:120)
	at org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat.tomcatServletWebServerFactory(ServletWebServerFactoryConfiguration.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getWebServerFactory(ServletWebServerApplicationContext.java:216)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at Parser.MorphemeAnalysis.MorphemeAnalysisApplication.main(MorphemeAnalysisApplication.java:21)
01:45:43.618 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'tomcatServletWebServerFactory' to allow for resolving potential circular references
01:45:43.619 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
01:45:43.619 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'websocketServletWebServerCustomizer'
01:45:43.619 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:45:43.619 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:45:43.619 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration' to allow for resolving potential circular references
01:45:43.619 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.620 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:45:43.620 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'websocketServletWebServerCustomizer' to allow for resolving potential circular references
01:45:43.620 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.621 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'websocketServletWebServerCustomizer'
01:45:43.621 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
01:45:43.621 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'servletWebServerFactoryCustomizer'
01:45:43.621 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:43.621 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:43.622 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration' to allow for resolving potential circular references
01:45:43.624 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.624 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:43.625 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.625 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.632 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' to allow for resolving potential circular references
01:45:43.635 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:43.635 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:43.635 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.context.properties.BoundConfigurationProperties' to allow for resolving potential circular references
01:45:43.635 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.636 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:43.638 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - No bean named 'conversionService' found in org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,morphemeAnalysisApplication,org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory,org.springframework.boot.autoconfigure.AutoConfigurationPackages,Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0,org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,propertySourcesPlaceholderConfigurer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration,websocketServletWebServerCustomizer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat,tomcatServletWebServerFactory,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,servletWebServerFactoryCustomizer,tomcatServletWebServerFactoryCustomizer,org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor,org.springframework.boot.context.internalConfigurationPropertiesBinderFactory,org.springframework.boot.context.internalConfigurationPropertiesBinder,org.springframework.boot.context.properties.BoundConfigurationProperties,org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter,server-org.springframework.boot.autoconfigure.web.ServerProperties,webServerFactoryCustomizerBeanPostProcessor,errorPageRegistrarBeanPostProcessor,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration,dispatcherServlet,spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration,dispatcherServletRegistration,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,taskExecutorBuilder,applicationTaskExecutor,spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration,error,beanNameViewResolver,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration,conventionErrorViewResolver,spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties,spring.web-org.springframework.boot.autoconfigure.web.WebProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,errorAttributes,basicErrorController,errorPageCustomizer,preserveErrorControllerTargetClassPostProcessor,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration,requestMappingHandlerAdapter,requestMappingHandlerMapping,welcomePageHandlerMapping,localeResolver,themeResolver,flashMapManager,mvcConversionService,mvcValidator,mvcContentNegotiationManager,mvcPatternParser,mvcUrlPathHelper,mvcPathMatcher,viewControllerHandlerMapping,beanNameHandlerMapping,routerFunctionMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,handlerFunctionAdapter,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,viewNameTranslator,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter,defaultViewResolver,viewResolver,requestContextFilter,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,formContentFilter,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari,dataSource,org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari,org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration,org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration,hikariPoolDataSourceMetadataProvider,org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker,org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration,dataSourceInitializerPostProcessor,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration,org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration,sqlSessionFactory,sqlSessionTemplate,mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,applicationAvailability,org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,lifecycleProcessor,spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,persistenceExceptionTranslationPostProcessor,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration,standardJacksonObjectMapperBuilderCustomizer,spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration,jacksonObjectMapperBuilder,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration,parameterNamesModule,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration,jacksonObjectMapper,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,jsonComponentModule,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration,stringHttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration,mappingJackson2HttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,messageConverters,org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties,org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration,jdbcTemplate,org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration,namedParameterJdbcTemplate,org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties,org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,taskSchedulerBuilder,spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect,java8TimeDialect,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration,thymeleafViewResolver,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration,templateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration,defaultTemplateResolver,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration,transactionManager,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration,transactionTemplate,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,platformTransactionManagerCustomizers,spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties,org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,restTemplateBuilderConfigurer,restTemplateBuilder,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration,tomcatWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,characterEncodingFilter,localeCharsetMappingsCustomizer,org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,multipartConfigElement,multipartResolver,spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties,feedMapper]; root of factory hierarchy
01:45:43.643 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.643 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.643 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.644 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'servletWebServerFactoryCustomizer' to allow for resolving potential circular references
01:45:43.644 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.645 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'servletWebServerFactoryCustomizer'
01:45:43.645 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
01:45:43.645 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'tomcatServletWebServerFactoryCustomizer'
01:45:43.645 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:43.645 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.645 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.645 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'tomcatServletWebServerFactoryCustomizer' to allow for resolving potential circular references
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'tomcatServletWebServerFactoryCustomizer'
01:45:43.646 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'tomcatWebServerFactoryCustomizer'
01:45:43.646 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration' to allow for resolving potential circular references
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.646 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:45:43.647 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'environment'
01:45:43.647 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.647 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
01:45:43.647 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.648 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'tomcatWebServerFactoryCustomizer' to allow for resolving potential circular references
01:45:43.648 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.648 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'tomcatWebServerFactoryCustomizer'
01:45:43.648 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
01:45:43.649 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'localeCharsetMappingsCustomizer'
01:45:43.649 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:43.649 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:43.649 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.649 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.649 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' to allow for resolving potential circular references
01:45:43.649 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.650 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:43.650 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'localeCharsetMappingsCustomizer' to allow for resolving potential circular references
01:45:43.650 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.650 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'localeCharsetMappingsCustomizer'
01:45:43.663 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'configurationProperties'
01:45:43.663 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletConfigInitParams'
01:45:43.663 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletContextInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemEnvironment'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'random'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.main.cloud-platform' in any property source
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'configurationProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletConfigInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletContextInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemEnvironment'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'random'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.main.cloud-platform' in any property source
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'configurationProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletConfigInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletContextInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemEnvironment'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'random'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.main.cloud-platform' in any property source
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'configurationProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletConfigInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletContextInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemEnvironment'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'random'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.main.cloud-platform' in any property source
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'configurationProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletConfigInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'servletContextInitParams'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemProperties'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'systemEnvironment'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'random'
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.main.cloud-platform' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:43.664 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.main.cloud-platform' in any property source
01:45:43.673 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
01:45:43.673 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'errorPageCustomizer'
01:45:43.673 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:43.673 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:43.673 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.673 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:43.673 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' to allow for resolving potential circular references
01:45:43.674 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.674 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:43.675 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
01:45:43.675 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dispatcherServletRegistration'
01:45:43.675 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:45:43.675 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:45:43.675 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' to allow for resolving potential circular references
01:45:43.675 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.676 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:45:43.677 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
01:45:43.677 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dispatcherServlet'
01:45:43.677 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:45:43.677 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:45:43.677 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' to allow for resolving potential circular references
01:45:43.678 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.678 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:45:43.678 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.678 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.679 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' to allow for resolving potential circular references
01:45:43.679 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:43.682 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.682 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.682 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.695 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dispatcherServlet' to allow for resolving potential circular references
01:45:43.695 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.697 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dispatcherServlet'
01:45:43.697 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.697 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
01:45:43.697 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:43.700 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
01:45:43.701 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'multipartConfigElement'
01:45:43.701 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:43.701 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:43.701 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:45:43.701 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:45:43.701 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' to allow for resolving potential circular references
01:45:43.702 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:43.705 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.705 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:45:43.705 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:45:43.705 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' to allow for resolving potential circular references
01:45:43.705 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.706 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:43.707 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'multipartConfigElement' to allow for resolving potential circular references
01:45:43.707 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.707 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'multipartConfigElement'
01:45:43.713 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dispatcherServletRegistration' to allow for resolving potential circular references
01:45:43.713 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.714 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dispatcherServletRegistration'
01:45:43.714 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
01:45:43.714 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'errorPageCustomizer' to allow for resolving potential circular references
01:45:43.714 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.715 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'errorPageCustomizer'
01:45:43.715 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:43.717 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'tomcatServletWebServerFactory'
01:45:43.744 [main] DEBUG o.a.tomcat.util.compat.Jre16Compat - Class not found so assuming code is running on a pre-Java 16 JVM
java.lang.ClassNotFoundException: java.net.UnixDomainSocketAddress
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at org.apache.tomcat.util.compat.Jre16Compat.<clinit>(Jre16Compat.java:47)
	at org.apache.tomcat.util.compat.JreCompat.<clinit>(JreCompat.java:70)
	at org.apache.catalina.startup.Tomcat.<clinit>(Tomcat.java:1303)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:185)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at Parser.MorphemeAnalysis.MorphemeAnalysisApplication.main(MorphemeAnalysisApplication.java:21)
01:45:44.468 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.coyote.http11.Http11NioProtocol port=8080)
01:45:44.482 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.coyote.http11.Http11NioProtocol bindOnInit=false)
01:45:44.482 [main] DEBUG o.apache.tomcat.util.net.NioEndpoint - Set [bindOnInit] to [false]
01:45:44.482 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.tomcat.util.net.NioEndpoint bindOnInit=false)
01:45:44.485 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.coyote.http11.Http11NioProtocol maxPostSize=2097152)
01:45:44.485 [main] DEBUG o.apache.tomcat.util.net.NioEndpoint - Set [maxPostSize] to [2097152]
01:45:44.485 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.tomcat.util.net.NioEndpoint maxPostSize=2097152)
01:45:44.502 [main] DEBUG o.apache.catalina.core.ContainerBase - Add child StandardHost[localhost] StandardEngine[Tomcat]
01:45:44.503 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\RNHappySmile\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.4.5\d9b82470df2e9549e448d7cef39e578d91f9867f\spring-boot-2.4.5.jar
01:45:44.503 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\RNHappySmile\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.4.5\d9b82470df2e9549e448d7cef39e578d91f9867f\spring-boot-2.4.5.jar
01:45:44.503 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
01:45:44.529 [main] DEBUG o.apache.catalina.core.ContainerBase - Add child TomcatEmbeddedContext[] StandardEngine[Tomcat].StandardHost[localhost]
01:45:44.534 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
01:45:44.534 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardServer[-1]] to [INITIALIZING]
01:45:44.544 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@12e0f1cb] to [INITIALIZING]
01:45:44.545 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@12e0f1cb] to [INITIALIZED]
01:45:44.545 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardService[Tomcat]] to [INITIALIZING]
01:45:44.546 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat]] to [INITIALIZING]
01:45:44.547 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat]] to [INITIALIZED]
01:45:44.547 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.mapper.MapperListener@5a6fa56e] to [INITIALIZING]
01:45:44.548 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.mapper.MapperListener@5a6fa56e] to [INITIALIZED]
01:45:44.548 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [Connector[HTTP/1.1-8080]] to [INITIALIZING]
01:45:44.551 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.coyote.http11.Http11NioProtocol parseBodyMethods=POST)
01:45:44.552 [main] DEBUG o.apache.tomcat.util.net.NioEndpoint - Set [parseBodyMethods] to [POST]
01:45:44.552 [main] DEBUG o.a.tomcat.util.IntrospectionUtils - IntrospectionUtils: setProperty(class org.apache.tomcat.util.net.NioEndpoint parseBodyMethods=POST)
01:45:44.552 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
01:45:44.552 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [Connector[HTTP/1.1-8080]] to [INITIALIZED]
01:45:44.552 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardService[Tomcat]] to [INITIALIZED]
01:45:44.552 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardServer[-1]] to [INITIALIZED]
01:45:44.552 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardServer[-1]] to [STARTING_PREP]
01:45:44.552 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardServer[-1]] to [STARTING]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@12e0f1cb] to [STARTING_PREP]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@12e0f1cb] to [STARTING]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@12e0f1cb] to [STARTED]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardService[Tomcat]] to [STARTING_PREP]
01:45:44.553 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardService[Tomcat]] to [STARTING]
01:45:44.553 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat]] to [STARTING_PREP]
01:45:44.553 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.45]
01:45:44.555 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [INITIALIZING]
01:45:44.555 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [INITIALIZED]
01:45:44.555 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTING_PREP]
01:45:44.555 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTING]
01:45:44.556 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTED]
01:45:44.556 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [INITIALIZING]
01:45:44.556 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [INITIALIZED]
01:45:44.556 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTING_PREP]
01:45:44.556 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [INITIALIZING]
01:45:44.557 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [INITIALIZED]
01:45:44.557 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTING_PREP]
01:45:44.557 [main] DEBUG o.a.catalina.core.StandardContext - Starting ROOT
01:45:44.565 [main] DEBUG o.a.catalina.core.StandardContext - Configuring default Resources
01:45:44.568 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.StandardRoot@56dfab87] to [INITIALIZING]
01:45:44.570 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.StandardRoot@56dfab87] to [INITIALIZED]
01:45:44.570 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.StandardRoot@56dfab87] to [STARTING_PREP]
01:45:44.572 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.DirResourceSet@5d2828c9] to [INITIALIZING]
01:45:44.573 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.DirResourceSet@5d2828c9] to [INITIALIZED]
01:45:44.573 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.DirResourceSet@5d2828c9] to [STARTING_PREP]
01:45:44.573 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.DirResourceSet@5d2828c9] to [STARTING]
01:45:44.574 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.DirResourceSet@5d2828c9] to [STARTED]
01:45:44.574 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.StandardRoot@56dfab87] to [STARTING]
01:45:44.574 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.webresources.StandardRoot@56dfab87] to [STARTED]
01:45:44.619 [main] DEBUG o.a.catalina.core.StandardContext - Processing standard container startup
01:45:44.620 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
01:45:44.620 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
01:45:44.620 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
01:45:44.620 [main] DEBUG o.a.catalina.loader.WebappLoader - Starting this Loader
01:45:44.625 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
01:45:44.626 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
01:45:44.654 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
01:45:44.655 [main] DEBUG o.a.c.a.AuthenticatorBase - No SingleSignOn Valve is present
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
01:45:44.656 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
01:45:44.656 [main] DEBUG o.a.catalina.core.StandardContext - No manager found. Checking if cluster manager should be used. Cluster configured: [false], Application distributable: [false]
01:45:44.667 [main] DEBUG o.a.catalina.core.StandardContext - Configured a manager of class [org.apache.catalina.session.StandardManager]
01:45:44.670 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@26d41711] to [INITIALIZING]
01:45:44.671 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@26d41711] to [INITIALIZED]
01:45:44.671 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@26d41711] to [STARTING_PREP]
01:45:44.671 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@26d41711] to [STARTING]
01:45:44.671 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@26d41711] to [STARTED]
01:45:44.677 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
01:45:44.677 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
01:45:44.677 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1989 ms
01:45:44.677 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Registering scope 'application' with implementation [org.springframework.web.context.support.ServletContextScope@2264ea32]
01:45:44.679 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServletRegistration'
01:45:44.680 [main] TRACE o.s.b.w.s.ServletContextInitializerBeans - Added existing Servlet initializer bean 'dispatcherServletRegistration'; order=2147483647, resource=class path resource [org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class]
01:45:44.680 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'multipartConfigElement'
01:45:44.681 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServlet'
01:45:44.681 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
01:45:44.681 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'requestContextFilter'
01:45:44.682 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'requestContextFilter' to allow for resolving potential circular references
01:45:44.683 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'requestContextFilter'
01:45:44.683 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.683 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'requestContextFilter'
01:45:44.683 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
01:45:44.683 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'formContentFilter'
01:45:44.683 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:45:44.683 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:45:44.684 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' to allow for resolving potential circular references
01:45:44.685 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.685 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:45:44.687 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'formContentFilter' to allow for resolving potential circular references
01:45:44.687 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'formContentFilter'
01:45:44.687 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.688 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'formContentFilter'
01:45:44.688 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
01:45:44.688 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'characterEncodingFilter'
01:45:44.688 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:44.689 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'characterEncodingFilter' to allow for resolving potential circular references
01:45:44.689 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'characterEncodingFilter'
01:45:44.689 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.689 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'characterEncodingFilter'
01:45:44.690 [main] TRACE o.s.b.w.s.ServletContextInitializerBeans - Created Filter initializer for bean 'characterEncodingFilter'; order=-2147483648, resource=class path resource [org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class]
01:45:44.690 [main] TRACE o.s.b.w.s.ServletContextInitializerBeans - Created Filter initializer for bean 'formContentFilter'; order=-9900, resource=class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]
01:45:44.690 [main] TRACE o.s.b.w.s.ServletContextInitializerBeans - Created Filter initializer for bean 'requestContextFilter'; order=-105, resource=class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class]
01:45:44.693 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
01:45:44.694 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
01:45:44.696 [main] DEBUG o.apache.catalina.core.ContainerBase - Add child StandardWrapper[dispatcherServlet] StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]
01:45:44.696 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [INITIALIZING]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [INITIALIZED]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTING_PREP]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZING]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZED]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING_PREP]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZING]
01:45:44.697 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZED]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING_PREP]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTED]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTED]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTING]
01:45:44.698 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTED]
01:45:44.716 [main] DEBUG o.a.catalina.core.StandardContext - Configuring application event listeners
01:45:44.716 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] - Sending application start events
01:45:44.718 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@2d4608a6] to [INITIALIZING]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@2d4608a6] to [INITIALIZED]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@2d4608a6] to [STARTING_PREP]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@2d4608a6] to [STARTING]
01:45:44.719 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@2d4608a6] to [STARTED]
01:45:44.719 [main] DEBUG o.a.catalina.session.StandardManager - Start: Loading persisted sessions
01:45:44.719 [main] DEBUG o.a.catalina.session.StandardManager - Loading persisted sessions from [SESSIONS.ser]
01:45:44.720 [main] DEBUG o.a.catalina.session.StandardManager - No persisted data file found
01:45:44.720 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
01:45:44.720 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
01:45:44.720 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] - Starting filters
01:45:44.720 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] -  Starting filter 'requestContextFilter'
01:45:44.722 [main] DEBUG o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
01:45:44.723 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] -  Starting filter 'Tomcat WebSocket (JSR356) Filter'
01:45:44.723 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] -  Starting filter 'characterEncodingFilter'
01:45:44.723 [main] DEBUG o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
01:45:44.723 [main] DEBUG o.a.c.c.C.[Tomcat].[localhost].[/] -  Starting filter 'formContentFilter'
01:45:44.723 [main] DEBUG o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
01:45:44.723 [main] DEBUG o.a.catalina.core.StandardContext - Starting completed
01:45:44.723 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTING]
01:45:44.723 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
01:45:44.724 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTING]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTED]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [INITIALIZING]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [INITIALIZED]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTING_PREP]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [INITIALIZING]
01:45:44.725 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [INITIALIZED]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTING_PREP]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTING]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTED]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTING]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTED]
01:45:44.726 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat]] to [STARTING]
01:45:44.729 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardEngine[Tomcat]] to [STARTED]
01:45:44.729 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.mapper.MapperListener@5a6fa56e] to [STARTING_PREP]
01:45:44.729 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.mapper.MapperListener@5a6fa56e] to [STARTING]
01:45:44.730 [main] DEBUG org.apache.catalina.mapper.Mapper - Registered host [localhost]
01:45:44.731 [main] DEBUG o.a.catalina.mapper.MapperListener - Register Wrapper [dispatcherServlet] in Context [] for service [StandardService[Tomcat]]
01:45:44.731 [main] DEBUG o.a.catalina.mapper.MapperListener - Register Context [] for service [StandardService[Tomcat]]
01:45:44.731 [main] DEBUG o.a.catalina.mapper.MapperListener - Register host [localhost] at domain [null] for service [StandardService[Tomcat]]
01:45:44.731 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [org.apache.catalina.mapper.MapperListener@5a6fa56e] to [STARTED]
01:45:44.731 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardService[Tomcat]] to [STARTED]
01:45:44.732 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [StandardServer[-1]] to [STARTED]
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,morphemeAnalysisApplication,org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory,org.springframework.boot.autoconfigure.AutoConfigurationPackages,Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0,org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,propertySourcesPlaceholderConfigurer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration,websocketServletWebServerCustomizer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat,tomcatServletWebServerFactory,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,servletWebServerFactoryCustomizer,tomcatServletWebServerFactoryCustomizer,org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor,org.springframework.boot.context.internalConfigurationPropertiesBinderFactory,org.springframework.boot.context.internalConfigurationPropertiesBinder,org.springframework.boot.context.properties.BoundConfigurationProperties,org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter,server-org.springframework.boot.autoconfigure.web.ServerProperties,webServerFactoryCustomizerBeanPostProcessor,errorPageRegistrarBeanPostProcessor,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration,dispatcherServlet,spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration,dispatcherServletRegistration,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,taskExecutorBuilder,applicationTaskExecutor,spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration,error,beanNameViewResolver,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration,conventionErrorViewResolver,spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties,spring.web-org.springframework.boot.autoconfigure.web.WebProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,errorAttributes,basicErrorController,errorPageCustomizer,preserveErrorControllerTargetClassPostProcessor,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration,requestMappingHandlerAdapter,requestMappingHandlerMapping,welcomePageHandlerMapping,localeResolver,themeResolver,flashMapManager,mvcConversionService,mvcValidator,mvcContentNegotiationManager,mvcPatternParser,mvcUrlPathHelper,mvcPathMatcher,viewControllerHandlerMapping,beanNameHandlerMapping,routerFunctionMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,handlerFunctionAdapter,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,viewNameTranslator,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter,defaultViewResolver,viewResolver,requestContextFilter,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,formContentFilter,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari,dataSource,org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari,org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration,org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration,hikariPoolDataSourceMetadataProvider,org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker,org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration,dataSourceInitializerPostProcessor,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration,org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration,sqlSessionFactory,sqlSessionTemplate,mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,applicationAvailability,org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,lifecycleProcessor,spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,persistenceExceptionTranslationPostProcessor,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration,standardJacksonObjectMapperBuilderCustomizer,spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration,jacksonObjectMapperBuilder,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration,parameterNamesModule,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration,jacksonObjectMapper,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,jsonComponentModule,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration,stringHttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration,mappingJackson2HttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,messageConverters,org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties,org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration,jdbcTemplate,org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration,namedParameterJdbcTemplate,org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties,org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,taskSchedulerBuilder,spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect,java8TimeDialect,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration,thymeleafViewResolver,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration,templateEngine,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration,defaultTemplateResolver,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration,transactionManager,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration,transactionTemplate,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,platformTransactionManagerCustomizers,spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties,org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,restTemplateBuilderConfigurer,restTemplateBuilder,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration,tomcatWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,characterEncodingFilter,localeCharsetMappingsCustomizer,org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,multipartConfigElement,multipartResolver,spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties,feedMapper]; root of factory hierarchy
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
01:45:44.737 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'morphemeAnalysisApplication'
01:45:44.737 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'morphemeAnalysisApplication'
01:45:44.738 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'morphemeAnalysisApplication' to allow for resolving potential circular references
01:45:44.740 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'feedMapper'
01:45:44.740 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'feedMapper'
01:45:44.740 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'feedMapper' to allow for resolving potential circular references
01:45:44.740 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.mybatis.spring.mapper.MapperFactoryBean]
01:45:44.743 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.mybatis.spring.mapper.MapperFactoryBean]
01:45:44.743 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'addToConfig' of type [boolean]
01:45:44.743 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'mapperInterface' of type [java.lang.Class]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'object' of type [java.lang.Object]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'objectType' of type [java.lang.Class]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'singleton' of type [boolean]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSession' of type [org.apache.ibatis.session.SqlSession]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionFactory' of type [org.apache.ibatis.session.SqlSessionFactory]
01:45:44.744 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate]
01:45:44.746 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionFactory'
01:45:44.746 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'sqlSessionFactory'
01:45:44.747 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:44.747 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:44.747 [main] DEBUG o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ae8c57f7] - unable to determine constructor/method parameter names
01:45:44.748 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:45:44.749 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:45:44.749 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' to allow for resolving potential circular references
01:45:44.749 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:44.751 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.752 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:45:44.752 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:45:44.752 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:44.753 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' to allow for resolving potential circular references
01:45:44.754 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:44.755 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.755 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:44.757 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
01:45:44.757 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'dataSource'
01:45:44.757 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:45:44.757 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:45:44.757 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' to allow for resolving potential circular references
01:45:44.757 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.757 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:45:44.758 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.758 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.763 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' to allow for resolving potential circular references
01:45:44.763 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:44.773 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.774 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.775 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.775 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.789 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@69663380
01:45:44.800 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
01:45:44.806 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:44.810 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.811 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:44.812 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:44.813 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.813 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:44.813 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:44.813 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' to allow for resolving potential circular references
01:45:44.814 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:44.814 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'dataSource' that is not fully initialized yet - a consequence of a circular reference
01:45:44.816 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved classpath location [schema-all.sql] to resources []
01:45:44.817 [main] TRACE o.s.c.i.s.PathMatchingResourcePatternResolver - Resolved classpath location [schema.sql] to resources []
01:45:44.817 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.817 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:44.818 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource'
01:45:44.818 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
01:45:44.870 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.mybatis.spring.SqlSessionFactoryBean]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.mybatis.spring.SqlSessionFactoryBean]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'cache' of type [org.apache.ibatis.cache.Cache]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'configLocation' of type [org.springframework.core.io.Resource]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'configuration' of type [org.apache.ibatis.session.Configuration]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'configurationProperties' of type [java.util.Properties]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'databaseIdProvider' of type [org.apache.ibatis.mapping.DatabaseIdProvider]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'defaultEnumTypeHandler' of type [java.lang.Class]
01:45:44.872 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'defaultScriptingLanguageDriver' of type [java.lang.Class]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'environment' of type [java.lang.String]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'failFast' of type [boolean]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'mapperLocations' of type [[Lorg.springframework.core.io.Resource;]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'object' of type [org.apache.ibatis.session.SqlSessionFactory]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'objectFactory' of type [org.apache.ibatis.reflection.factory.ObjectFactory]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'objectType' of type [java.lang.Class]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'objectWrapperFactory' of type [org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'plugins' of type [[Lorg.apache.ibatis.plugin.Interceptor;]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'scriptingLanguageDrivers' of type [[Lorg.apache.ibatis.scripting.LanguageDriver;]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'singleton' of type [boolean]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'sqlSessionFactoryBuilder' of type [org.apache.ibatis.session.SqlSessionFactoryBuilder]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'transactionFactory' of type [org.apache.ibatis.transaction.TransactionFactory]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'typeAliases' of type [[Ljava.lang.Class;]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'typeAliasesPackage' of type [java.lang.String]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'typeAliasesSuperType' of type [java.lang.Class]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'typeHandlers' of type [[Lorg.apache.ibatis.type.TypeHandler;]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'typeHandlersPackage' of type [java.lang.String]
01:45:44.873 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'vfs' of type [java.lang.Class]
01:45:44.878 [main] DEBUG o.m.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified.
01:45:44.878 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
01:45:44.879 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.879 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'sqlSessionFactory'
01:45:44.879 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'feedMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
01:45:44.880 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionTemplate'
01:45:44.880 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'sqlSessionTemplate'
01:45:44.880 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:44.880 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sqlSessionFactory'
01:45:44.881 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
01:45:44.886 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
01:45:44.886 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.887 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'sqlSessionTemplate'
01:45:44.887 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'feedMapper' via property 'sqlSessionTemplate' to bean named 'sqlSessionTemplate'
01:45:44.887 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'feedMapper'
01:45:44.980 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.981 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'feedMapper'
01:45:44.982 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.982 [main] TRACE o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'morphemeAnalysisApplication' to bean named 'feedMapper'
01:45:44.983 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.983 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'morphemeAnalysisApplication'
01:45:44.983 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:44.983 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages' to allow for resolving potential circular references
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:45:44.984 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration' to allow for resolving potential circular references
01:45:44.984 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'propertySourcesPlaceholderConfigurer'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'websocketServletWebServerCustomizer'
01:45:44.985 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
01:45:44.985 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration' to allow for resolving potential circular references
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'tomcatServletWebServerFactory'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'servletWebServerFactoryCustomizer'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:44.986 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
01:45:44.986 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
01:45:44.987 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter' to allow for resolving potential circular references
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServlet'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServletRegistration'
01:45:44.988 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
01:45:44.988 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
01:45:44.989 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration' to allow for resolving potential circular references
01:45:44.989 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.989 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
01:45:44.989 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:44.989 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:44.989 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration' to allow for resolving potential circular references
01:45:44.990 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.990 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:44.990 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
01:45:44.990 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'taskExecutorBuilder'
01:45:44.990 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:44.991 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:45:44.991 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:45:44.991 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' to allow for resolving potential circular references
01:45:44.991 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:44.992 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.992 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:45:44.993 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:45:44.994 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'taskExecutorBuilder' to allow for resolving potential circular references
01:45:44.994 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.995 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'taskExecutorBuilder'
01:45:44.995 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:45:44.995 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:44.995 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration' to allow for resolving potential circular references
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:44.996 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'error'
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'error' to allow for resolving potential circular references
01:45:44.996 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.997 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'error'
01:45:44.997 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
01:45:44.997 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'beanNameViewResolver'
01:45:44.997 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:45:44.998 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'beanNameViewResolver' to allow for resolving potential circular references
01:45:44.998 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:44.998 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'beanNameViewResolver'
01:45:44.998 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:45:44.998 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:45:44.999 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:44.999 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.004 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties' to allow for resolving potential circular references
01:45:45.004 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.005 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.005 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.005 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.005 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.005 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties' to allow for resolving potential circular references
01:45:45.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.006 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:45.006 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.006 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.006 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' to allow for resolving potential circular references
01:45:45.007 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.007 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:45:45.007 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
01:45:45.007 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'conventionErrorViewResolver'
01:45:45.007 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:45:45.008 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider] names: [org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider]
01:45:45.008 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'conventionErrorViewResolver' to allow for resolving potential circular references
01:45:45.008 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'conventionErrorViewResolver'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:45.009 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'errorAttributes'
01:45:45.009 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:45.010 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'errorAttributes' to allow for resolving potential circular references
01:45:45.011 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.011 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'errorAttributes'
01:45:45.011 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
01:45:45.011 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'basicErrorController'
01:45:45.011 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:45:45.011 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'errorAttributes'
01:45:45.012 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
01:45:45.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conventionErrorViewResolver'
01:45:45.012 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conventionErrorViewResolver'
01:45:45.017 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'basicErrorController' to allow for resolving potential circular references
01:45:45.019 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.019 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'basicErrorController'
01:45:45.020 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'errorPageCustomizer'
01:45:45.020 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
01:45:45.020 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.020 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.022 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:45.023 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.023 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:45:45.023 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:45.023 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.023 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80'
01:45:45.026 [main] TRACE o.s.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'applicationContext' of type [org.springframework.context.ApplicationContext]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'configurers' of type [java.util.List]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'resourceLoader' of type [org.springframework.core.io.ResourceLoader]
01:45:45.029 [main] TRACE o.s.beans.CachedIntrospectionResults - Found bean property 'servletContext' of type [javax.servlet.ServletContext]
01:45:45.031 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' to allow for resolving potential circular references
01:45:45.032 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.032 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.032 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.033 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:45.033 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:45:45.033 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:45:45.033 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80'
01:45:45.033 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' to allow for resolving potential circular references
01:45:45.033 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.033 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.034 [main] TRACE o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' to bean named 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.034 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.035 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.035 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
01:45:45.035 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'requestMappingHandlerAdapter'
01:45:45.035 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.037 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.037 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcContentNegotiationManager'
01:45:45.037 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.044 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcContentNegotiationManager' to allow for resolving potential circular references
01:45:45.044 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.045 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcContentNegotiationManager'
01:45:45.045 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
01:45:45.045 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcConversionService'
01:45:45.045 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.049 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcConversionService' to allow for resolving potential circular references
01:45:45.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.050 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcConversionService'
01:45:45.051 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
01:45:45.051 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcValidator'
01:45:45.051 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.053 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcValidator' to allow for resolving potential circular references
01:45:45.053 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.054 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcValidator'
01:45:45.054 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.054 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
01:45:45.054 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
01:45:45.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.057 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.058 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcValidator'
01:45:45.058 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.058 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
01:45:45.058 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
01:45:45.076 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
01:45:45.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'messageConverters'
01:45:45.076 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:45:45.076 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:45:45.077 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' to allow for resolving potential circular references
01:45:45.077 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.077 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:45:45.081 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
01:45:45.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'stringHttpMessageConverter'
01:45:45.081 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:45:45.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:45:45.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' to allow for resolving potential circular references
01:45:45.081 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.082 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:45:45.082 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'environment'
01:45:45.082 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
01:45:45.086 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'stringHttpMessageConverter' to allow for resolving potential circular references
01:45:45.086 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.086 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'stringHttpMessageConverter'
01:45:45.086 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
01:45:45.086 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mappingJackson2HttpMessageConverter'
01:45:45.086 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:45:45.086 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:45:45.087 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' to allow for resolving potential circular references
01:45:45.087 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.087 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:45:45.087 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jacksonObjectMapper'
01:45:45.088 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' to allow for resolving potential circular references
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:45:45.088 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jacksonObjectMapperBuilder'
01:45:45.089 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:45:45.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:45:45.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' to allow for resolving potential circular references
01:45:45.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.089 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:45:45.090 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
01:45:45.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'standardJacksonObjectMapperBuilderCustomizer'
01:45:45.090 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:45:45.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:45:45.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' to allow for resolving potential circular references
01:45:45.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.090 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:45:45.091 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:45:45.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:45:45.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' to allow for resolving potential circular references
01:45:45.091 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.095 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:45:45.096 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:45.096 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:45:45.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'standardJacksonObjectMapperBuilderCustomizer' to allow for resolving potential circular references
01:45:45.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.096 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'standardJacksonObjectMapperBuilderCustomizer'
01:45:45.097 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:45.097 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
01:45:45.098 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
01:45:45.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'parameterNamesModule'
01:45:45.098 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:45:45.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:45:45.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' to allow for resolving potential circular references
01:45:45.098 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.099 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:45:45.102 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'parameterNamesModule' to allow for resolving potential circular references
01:45:45.102 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'parameterNamesModule'
01:45:45.103 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jsonComponentModule'
01:45:45.103 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' to allow for resolving potential circular references
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.103 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:45:45.104 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jsonComponentModule' to allow for resolving potential circular references
01:45:45.105 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jsonComponentModule'
01:45:45.110 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.111 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jsonComponentModule'
01:45:45.113 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.113 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jacksonObjectMapperBuilder'
01:45:45.113 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
01:45:45.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jacksonObjectMapper' to allow for resolving potential circular references
01:45:45.125 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.128 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jacksonObjectMapper'
01:45:45.128 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
01:45:45.129 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mappingJackson2HttpMessageConverter' to allow for resolving potential circular references
01:45:45.129 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.129 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mappingJackson2HttpMessageConverter'
01:45:45.129 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'stringHttpMessageConverter'
01:45:45.129 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mappingJackson2HttpMessageConverter'
01:45:45.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'messageConverters' to allow for resolving potential circular references
01:45:45.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.133 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'messageConverters'
01:45:45.136 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
01:45:45.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'applicationTaskExecutor'
01:45:45.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:45:45.136 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'taskExecutorBuilder'
01:45:45.136 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
01:45:45.139 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'applicationTaskExecutor' to allow for resolving potential circular references
01:45:45.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'applicationTaskExecutor'
01:45:45.140 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
01:45:45.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.140 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'applicationTaskExecutor'
01:45:45.144 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'requestMappingHandlerAdapter' to allow for resolving potential circular references
01:45:45.145 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'requestMappingHandlerAdapter'
01:45:45.147 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
01:45:45.180 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.181 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'requestMappingHandlerAdapter'
01:45:45.181 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
01:45:45.181 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'requestMappingHandlerMapping'
01:45:45.181 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.182 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.182 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.182 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.182 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcResourceUrlProvider'
01:45:45.183 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.184 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServletRegistration'
01:45:45.185 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServletRegistration'
01:45:45.186 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dispatcherServletRegistration'
01:45:45.186 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcResourceUrlProvider' to allow for resolving potential circular references
01:45:45.186 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.186 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcResourceUrlProvider'
01:45:45.186 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.186 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.186 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.187 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.187 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.187 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.187 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.187 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.187 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.203 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'requestMappingHandlerMapping' to allow for resolving potential circular references
01:45:45.203 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'requestMappingHandlerMapping'
01:45:45.219 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'environmentProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'configurationProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'servletConfigInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'servletContextInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'systemProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'systemEnvironment'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'random'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path:/error' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'localProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path:/error' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'environmentProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'configurationProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'servletConfigInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'servletContextInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'systemProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'systemEnvironment'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'random'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'localProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path' in any property source
01:45:45.220 [main] TRACE o.s.util.PropertyPlaceholderHelper - Resolved placeholder 'error.path:/error'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'environmentProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'configurationProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'servletConfigInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'servletContextInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'systemProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'systemEnvironment'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'random'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path:/error' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'localProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path:/error' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'environmentProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'configurationProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'servletConfigInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'servletContextInitParams'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'systemProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'systemEnvironment'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'random'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path' in any property source
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'localProperties'
01:45:45.220 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path' in any property source
01:45:45.220 [main] TRACE o.s.util.PropertyPlaceholderHelper - Resolved placeholder 'server.error.path:/error'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'environmentProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'configurationProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'servletConfigInitParams'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'servletContextInitParams'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'systemProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'systemEnvironment'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'random'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path:/error' in any property source
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path:/error' in PropertySource 'localProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path:/error' in any property source
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'environmentProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'configurationProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'servletConfigInitParams'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'servletContextInitParams'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'systemProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'systemEnvironment'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'random'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path' in any property source
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'error.path' in PropertySource 'localProperties'
01:45:45.221 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'error.path' in any property source
01:45:45.221 [main] TRACE o.s.util.PropertyPlaceholderHelper - Resolved placeholder 'error.path:/error'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'environmentProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'configurationProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'servletConfigInitParams'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'servletContextInitParams'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'systemProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'systemEnvironment'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'random'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path:/error' in any property source
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path:/error' in PropertySource 'localProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path:/error' in any property source
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'environmentProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'configurationProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'servletConfigInitParams'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'servletContextInitParams'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'systemProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'systemEnvironment'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'random'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path' in any property source
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'server.error.path' in PropertySource 'localProperties'
01:45:45.222 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'server.error.path' in any property source
01:45:45.222 [main] TRACE o.s.util.PropertyPlaceholderHelper - Resolved placeholder 'server.error.path:/error'
01:45:45.223 [main] TRACE o.s.w.s.m.m.a.RequestMappingHandlerMapping - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
01:45:45.226 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 2 mappings in 'requestMappingHandlerMapping'
01:45:45.226 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.227 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'requestMappingHandlerMapping'
01:45:45.227 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
01:45:45.227 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'welcomePageHandlerMapping'
01:45:45.227 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.228 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.228 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.228 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:45.228 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.228 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.228 [main] TRACE o.s.c.i.s.SpringFactoriesLoader - Loaded [org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider] names: [org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider, org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider]
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletConfigInitParams'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'servletContextInitParams'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'random'
01:45:45.230 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.template.provider.cache' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.231 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.template.provider.cache' in any property source
01:45:45.231 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'configurationProperties'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletConfigInitParams'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'servletContextInitParams'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemProperties'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'systemEnvironment'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'random'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.prefix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.prefix' in any property source
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'configurationProperties'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletConfigInitParams'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'servletContextInitParams'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemProperties'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'systemEnvironment'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'random'
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.thymeleaf.suffix' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.232 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.thymeleaf.suffix' in any property source
01:45:45.233 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'welcomePageHandlerMapping' to allow for resolving potential circular references
01:45:45.234 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.234 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'welcomePageHandlerMapping'
01:45:45.234 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
01:45:45.234 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'localeResolver'
01:45:45.234 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.235 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'localeResolver' to allow for resolving potential circular references
01:45:45.235 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.235 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'localeResolver'
01:45:45.235 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver'
01:45:45.236 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'themeResolver'
01:45:45.236 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.236 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'themeResolver' to allow for resolving potential circular references
01:45:45.237 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.237 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'themeResolver'
01:45:45.237 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager'
01:45:45.237 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'flashMapManager'
01:45:45.237 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'flashMapManager' to allow for resolving potential circular references
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'flashMapManager'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcValidator'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.239 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcPatternParser'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcPatternParser' to allow for resolving potential circular references
01:45:45.239 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcPatternParser'
01:45:45.240 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcUrlPathHelper'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcUrlPathHelper' to allow for resolving potential circular references
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcUrlPathHelper'
01:45:45.240 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcPathMatcher'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.240 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcPathMatcher' to allow for resolving potential circular references
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcPathMatcher'
01:45:45.241 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'viewControllerHandlerMapping'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.241 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.241 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'viewControllerHandlerMapping' to allow for resolving potential circular references
01:45:45.241 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.242 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'viewControllerHandlerMapping'
01:45:45.242 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
01:45:45.242 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'beanNameHandlerMapping'
01:45:45.242 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.242 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.242 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.242 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.242 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.243 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'beanNameHandlerMapping' to allow for resolving potential circular references
01:45:45.243 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
01:45:45.243 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.244 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'beanNameHandlerMapping'
01:45:45.244 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
01:45:45.244 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'routerFunctionMapping'
01:45:45.244 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.244 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.244 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.244 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
01:45:45.244 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.246 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'routerFunctionMapping' to allow for resolving potential circular references
01:45:45.246 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'routerFunctionMapping'
01:45:45.247 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'routerFunctionMapping'
01:45:45.248 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'resourceHandlerMapping'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.248 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.248 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.248 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
01:45:45.248 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:45:45.256 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'resourceHandlerMapping' to allow for resolving potential circular references
01:45:45.256 [main] TRACE o.s.w.s.h.SimpleUrlHandlerMapping - Mapped [/webjars/**] onto ResourceHttpRequestHandler [Classpath [META-INF/resources/webjars/]]
01:45:45.256 [main] TRACE o.s.w.s.h.SimpleUrlHandlerMapping - Mapped [/**] onto ResourceHttpRequestHandler [Classpath [META-INF/resources/], Classpath [resources/], Classpath [static/], Classpath [public/], ServletContext [/]]
01:45:45.256 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [Classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [Classpath [META-INF/resources/], Classpath [resources/], Classpath [static/], Classpath [public/], ServletContext [/]]}
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'resourceHandlerMapping'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.257 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'defaultServletHandlerMapping'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'defaultServletHandlerMapping' to allow for resolving potential circular references
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.257 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'defaultServletHandlerMapping'
01:45:45.258 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
01:45:45.258 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'handlerFunctionAdapter'
01:45:45.258 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.259 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'handlerFunctionAdapter' to allow for resolving potential circular references
01:45:45.259 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.259 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'handlerFunctionAdapter'
01:45:45.259 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
01:45:45.259 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcUriComponentsContributor'
01:45:45.259 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.260 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcConversionService'
01:45:45.260 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
01:45:45.260 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
01:45:45.260 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcUriComponentsContributor' to allow for resolving potential circular references
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcUriComponentsContributor'
01:45:45.262 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'httpRequestHandlerAdapter'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'httpRequestHandlerAdapter' to allow for resolving potential circular references
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'httpRequestHandlerAdapter'
01:45:45.262 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'simpleControllerHandlerAdapter'
01:45:45.262 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'simpleControllerHandlerAdapter' to allow for resolving potential circular references
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'simpleControllerHandlerAdapter'
01:45:45.263 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'handlerExceptionResolver'
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.263 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.263 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.265 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
01:45:45.267 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'handlerExceptionResolver' to allow for resolving potential circular references
01:45:45.267 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.268 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'handlerExceptionResolver'
01:45:45.268 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
01:45:45.268 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'mvcViewResolver'
01:45:45.268 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.268 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.268 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'mvcViewResolver' to allow for resolving potential circular references
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'mvcViewResolver'
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'mvcViewResolver'
01:45:45.270 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator'
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'viewNameTranslator'
01:45:45.270 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'viewNameTranslator' to allow for resolving potential circular references
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'viewNameTranslator'
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.271 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'defaultViewResolver'
01:45:45.271 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.277 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'defaultViewResolver' to allow for resolving potential circular references
01:45:45.277 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.278 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'defaultViewResolver'
01:45:45.278 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
01:45:45.278 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'viewResolver'
01:45:45.278 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:45:45.279 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80'
01:45:45.280 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcContentNegotiationManager'
01:45:45.281 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'viewResolver' to allow for resolving potential circular references
01:45:45.281 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'beanNameViewResolver'
01:45:45.281 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcViewResolver'
01:45:45.281 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'defaultViewResolver'
01:45:45.281 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning eagerly cached instance of singleton bean 'viewResolver' that is not fully initialized yet - a consequence of a circular reference
01:45:45.282 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'thymeleafViewResolver'
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'thymeleafViewResolver'
01:45:45.282 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration' to allow for resolving potential circular references
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.282 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:45:45.283 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.283 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.284 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties' to allow for resolving potential circular references
01:45:45.284 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.287 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.287 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.287 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'templateEngine'
01:45:45.287 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'templateEngine'
01:45:45.288 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:45:45.288 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:45:45.288 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration' to allow for resolving potential circular references
01:45:45.288 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.288 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:45:45.289 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.290 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'templateEngine' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.310 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultTemplateResolver'
01:45:45.310 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'defaultTemplateResolver'
01:45:45.310 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:45:45.311 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:45:45.315 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.315 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.316 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f36662c'
01:45:45.330 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' to allow for resolving potential circular references
01:45:45.330 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.331 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:45:45.333 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'defaultTemplateResolver' to allow for resolving potential circular references
01:45:45.333 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.334 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'defaultTemplateResolver'
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'defaultTemplateResolver'
01:45:45.335 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'java8TimeDialect'
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'java8TimeDialect'
01:45:45.335 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect' to allow for resolving potential circular references
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.335 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:45:45.337 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'java8TimeDialect' to allow for resolving potential circular references
01:45:45.337 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.338 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'java8TimeDialect'
01:45:45.338 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'java8TimeDialect'
01:45:45.340 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'templateEngine' to allow for resolving potential circular references
01:45:45.340 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.340 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'templateEngine'
01:45:45.341 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.341 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'templateEngine'
01:45:45.344 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'thymeleafViewResolver' to allow for resolving potential circular references
01:45:45.344 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'thymeleafViewResolver'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'viewResolver'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'viewResolver'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'requestContextFilter'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:45:45.346 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'formContentFilter'
01:45:45.347 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:45:45.347 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
01:45:45.347 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
01:45:45.347 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
01:45:45.348 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
01:45:45.348 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
01:45:45.349 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' to allow for resolving potential circular references
01:45:45.349 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.349 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
01:45:45.349 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
01:45:45.349 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
01:45:45.349 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration' to allow for resolving potential circular references
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
01:45:45.350 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' to allow for resolving potential circular references
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
01:45:45.350 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:45:45.350 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' to allow for resolving potential circular references
01:45:45.351 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.351 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:45:45.351 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
01:45:45.351 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'hikariPoolDataSourceMetadataProvider'
01:45:45.351 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:45:45.352 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'hikariPoolDataSourceMetadataProvider' to allow for resolving potential circular references
01:45:45.352 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.352 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'hikariPoolDataSourceMetadataProvider'
01:45:45.353 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
01:45:45.353 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
01:45:45.353 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration' to allow for resolving potential circular references
01:45:45.353 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.354 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
01:45:45.354 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:45:45.354 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
01:45:45.354 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
01:45:45.354 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration' to allow for resolving potential circular references
01:45:45.354 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSourceInitializerPostProcessor'
01:45:45.355 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' to allow for resolving potential circular references
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.355 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
01:45:45.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:45:45.356 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
01:45:45.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
01:45:45.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration' to allow for resolving potential circular references
01:45:45.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.356 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sqlSessionFactory'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sqlSessionTemplate'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:45:45.357 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
01:45:45.357 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24fb6a80'
01:45:45.357 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration' to allow for resolving potential circular references
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
01:45:45.358 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration' to allow for resolving potential circular references
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
01:45:45.358 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:45:45.358 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:45:45.359 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration' to allow for resolving potential circular references
01:45:45.359 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.359 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:45:45.359 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
01:45:45.359 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'applicationAvailability'
01:45:45.359 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:45:45.360 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'applicationAvailability' to allow for resolving potential circular references
01:45:45.360 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.360 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'applicationAvailability'
01:45:45.361 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration' to allow for resolving potential circular references
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
01:45:45.361 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration' to allow for resolving potential circular references
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:45:45.361 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'lifecycleProcessor'
01:45:45.361 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:45:45.362 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:45:45.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:45:45.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties' to allow for resolving potential circular references
01:45:45.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.362 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:45:45.362 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:45:45.363 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'lifecycleProcessor' to allow for resolving potential circular references
01:45:45.363 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'lifecycleProcessor'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:45:45.364 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration' to allow for resolving potential circular references
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'parameterNamesModule'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jacksonObjectMapper'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jsonComponentModule'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'stringHttpMessageConverter'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mappingJackson2HttpMessageConverter'
01:45:45.364 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
01:45:45.364 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration' to allow for resolving potential circular references
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'messageConverters'
01:45:45.365 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
01:45:45.365 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
01:45:45.368 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:45:45.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:45:45.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' to allow for resolving potential circular references
01:45:45.368 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:45:45.369 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' to allow for resolving potential circular references
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:45:45.369 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:45:45.369 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration' to allow for resolving potential circular references
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:45:45.370 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'jdbcTemplate'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
01:45:45.370 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:45:45.370 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:45:45.371 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties' to allow for resolving potential circular references
01:45:45.371 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.371 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.371 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:45:45.371 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
01:45:45.371 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:45:45.379 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'jdbcTemplate' to allow for resolving potential circular references
01:45:45.379 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'jdbcTemplate'
01:45:45.379 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.381 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'jdbcTemplate'
01:45:45.381 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:45:45.381 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:45:45.381 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration' to allow for resolving potential circular references
01:45:45.381 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.382 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:45:45.382 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
01:45:45.382 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'namedParameterJdbcTemplate'
01:45:45.382 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:45:45.382 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jdbcTemplate'
01:45:45.382 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
01:45:45.387 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'namedParameterJdbcTemplate' to allow for resolving potential circular references
01:45:45.387 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.387 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'namedParameterJdbcTemplate'
01:45:45.387 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
01:45:45.387 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
01:45:45.388 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration' to allow for resolving potential circular references
01:45:45.388 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.388 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
01:45:45.388 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:45:45.388 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:45:45.388 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:45:45.389 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration' to allow for resolving potential circular references
01:45:45.389 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.389 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:45:45.389 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
01:45:45.389 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'taskSchedulerBuilder'
01:45:45.390 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:45:45.390 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:45:45.390 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:45:45.390 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' to allow for resolving potential circular references
01:45:45.391 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.391 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.393 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:45:45.393 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'taskSchedulerBuilder' to allow for resolving potential circular references
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'taskSchedulerBuilder'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'java8TimeDialect'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'thymeleafViewResolver'
01:45:45.394 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
01:45:45.394 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
01:45:45.396 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration' to allow for resolving potential circular references
01:45:45.396 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.396 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
01:45:45.396 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:45:45.396 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'templateEngine'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'defaultTemplateResolver'
01:45:45.397 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration' to allow for resolving potential circular references
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:45:45.397 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration' to allow for resolving potential circular references
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:45:45.397 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:45:45.397 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'environment'
01:45:45.398 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
01:45:45.398 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
01:45:45.398 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
01:45:45.398 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'configurationProperties'
01:45:45.398 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'servletConfigInitParams'
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'servletContextInitParams'
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'systemProperties'
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'systemEnvironment'
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'random'
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.dao.exceptiontranslation.enabled' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.399 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.dao.exceptiontranslation.enabled' in any property source
01:45:45.402 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
01:45:45.402 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'platformTransactionManagerCustomizers'
01:45:45.402 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:45:45.402 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:45:45.403 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' to allow for resolving potential circular references
01:45:45.403 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.403 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:45:45.404 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:45:45.404 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:45:45.405 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' to allow for resolving potential circular references
01:45:45.405 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:45:45.406 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.407 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:45:45.407 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:45:45.407 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'platformTransactionManagerCustomizers' to allow for resolving potential circular references
01:45:45.407 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.407 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'platformTransactionManagerCustomizers'
01:45:45.409 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
01:45:45.409 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
01:45:45.409 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.409 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
01:45:45.410 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration' to allow for resolving potential circular references
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
01:45:45.410 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration' to allow for resolving potential circular references
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
01:45:45.410 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
01:45:45.410 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration' to allow for resolving potential circular references
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
01:45:45.411 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration' to allow for resolving potential circular references
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:45:45.411 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'transactionTemplate'
01:45:45.411 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:45:45.412 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
01:45:45.412 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
01:45:45.413 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'transactionTemplate' to allow for resolving potential circular references
01:45:45.413 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionTemplate'
01:45:45.413 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.413 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'transactionTemplate'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'platformTransactionManagerCustomizers'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:45:45.414 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration' to allow for resolving potential circular references
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'tomcatWebServerFactoryCustomizer'
01:45:45.414 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration' to allow for resolving potential circular references
01:45:45.414 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'characterEncodingFilter'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'localeCharsetMappingsCustomizer'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'multipartConfigElement'
01:45:45.415 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Creating instance of bean 'multipartResolver'
01:45:45.415 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:45:45.416 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Eagerly caching bean 'multipartResolver' to allow for resolving potential circular references
01:45:45.416 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:45:45.416 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Finished creating instance of bean 'multipartResolver'
01:45:45.416 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:45:45.416 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'feedMapper'
01:45:45.417 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: Parser.MorphemeAnalysis.MorphemeAnalysisApplication$$EnhancerBySpringCGLIB$$54d5ecbd
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.mybatis.spring.mapper.MapperScannerConfigurer
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
01:45:45.418 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController
01:45:45.419 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration
01:45:45.419 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
01:45:45.419 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
01:45:45.419 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: com.zaxxer.hikari.HikariDataSource
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$$EnhancerBySpringCGLIB$$59305f37
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ae8c57f7
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.apache.ibatis.session.defaults.DefaultSqlSessionFactory
01:45:45.420 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.mybatis.spring.SqlSessionTemplate
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.mybatis.spring.boot.autoconfigure.MybatisProperties
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.aop.AopAutoConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: com.fasterxml.jackson.module.paramnames.ParameterNamesModule
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: com.fasterxml.jackson.databind.ObjectMapper
01:45:45.421 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.thymeleaf.spring5.view.ThymeleafViewResolver
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.thymeleaf.spring5.SpringTemplateEngine
01:45:45.422 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: javax.servlet.MultipartConfigElement
01:45:45.423 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: Parser.MorphemeAnalysis.mapper.FeedMapper
01:45:45.424 [main] TRACE o.s.c.e.EventListenerMethodProcessor - No @EventListener annotations found on bean class: org.apache.catalina.core.ApplicationContextFacade
01:45:45.424 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
01:45:45.424 [main] TRACE o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Using LifecycleProcessor [org.springframework.context.support.DefaultLifecycleProcessor@5b1efaaf]
01:45:45.425 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
01:45:45.425 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'webServerGracefulShutdown'
01:45:45.425 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'webServerStartStop'
01:45:45.427 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483646
01:45:45.427 [main] TRACE o.s.c.s.DefaultLifecycleProcessor - Starting bean 'webServerStartStop' of type [org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle]
01:45:45.428 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [Connector[HTTP/1.1-8080]] to [STARTING_PREP]
01:45:45.428 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [Connector[HTTP/1.1-8080]] to [STARTING]
01:45:45.428 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
01:45:45.449 [http-nio-8080-Acceptor] DEBUG o.a.tomcat.util.threads.LimitLatch - Counting up[http-nio-8080-Acceptor] latch=0
01:45:45.449 [main] DEBUG o.apache.catalina.util.LifecycleBase - Setting state for [Connector[HTTP/1.1-8080]] to [STARTED]
01:45:45.451 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
01:45:45.452 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
01:45:45.452 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
01:45:45.452 [main] TRACE o.s.c.s.DefaultLifecycleProcessor - Starting bean 'webServerGracefulShutdown' of type [org.springframework.boot.web.servlet.context.WebServerGracefulShutdownLifecycle]
01:45:45.452 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
01:45:45.452 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:45:45.452 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'mvcResourceUrlProvider'
01:45:45.465 [main] DEBUG o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.h2.console.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.activation.MimeType' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0 (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



01:45:45.479 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'resourceHandlerMapping'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'server.ports'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'configurationProperties'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'servletConfigInitParams'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'servletContextInitParams'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'random'
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/''
01:45:45.480 [main] TRACE o.s.c.e.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
01:45:45.483 [main] INFO  P.M.MorphemeAnalysisApplication - Started MorphemeAnalysisApplication in 3.327 seconds (JVM running for 3.888)
01:45:45.484 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'applicationAvailability'
01:45:45.485 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'morphemeAnalysisApplication'
01:45:45.485 [main] INFO  P.M.MorphemeAnalysisApplication - start MorphemeAnalysisApplication
01:45:45.485 [main] DEBUG P.M.MorphemeAnalysisApplication - log test
01:45:45.495 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
01:45:45.499 [main] DEBUG org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f054f70] was not registered for synchronization because synchronization is not active
01:45:45.509 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
01:45:45.510 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
01:45:45.515 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
01:45:45.516 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
01:45:45.516 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................none
01:45:45.516 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............none
01:45:45.516 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none
01:45:45.516 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000
01:45:45.520 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................none
01:45:45.520 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none
01:45:45.520 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none
01:45:45.520 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................."org.postgresql.Driver"
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName......none
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://3.142.239.225:5432/barbell
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................10
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................none
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
01:45:45.521 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................"HikariPool-1"
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema..........................none
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................internal
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............default
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................"rssatom"
01:45:45.522 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............5000
01:45:45.522 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
01:45:45.538 [main] DEBUG org.postgresql.Driver - Loading driver configuration via classloader jdk.internal.loader.ClassLoaders$AppClassLoader@69663380
01:45:45.538 [main] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:45.551 [main] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:45.552 [main] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:45.553 [main] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:45.562 [main] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:45.750 [main] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:45.751 [main] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:45.752 [main] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:45.752 [main] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:45.752 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:45.929 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:45.930 [main] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:46.439 [main] DEBUG jdk.event.security - X509Certificate: Alg:SHA256withRSA, Serial:429a7cb40a5fb212b22351ca3a3696d5a57bb0c7, Subject:CN=ip-172-31-20-96.us-east-2.compute.internal, Issuer:CN=ip-172-31-20-96.us-east-2.compute.internal, Key type:RSA, Length:2048, Cert Id:-1666975576, Valid from:21. 3. 30. 오후 9:46, Valid until:31. 3. 28. 오후 9:46
01:45:46.447 [main] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:46.449 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:46.456 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293946456; nextExpiration=0; keyCount=0; hasEvents=false; eval=false
01:45:46.627 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=ca160cc3)
01:45:46.628 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md51cb54a6d4de27ff1ef878776fc40cf92)
01:45:46.806 [main] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:46.827 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:46.827 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:46.827 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:46.827 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:46.827 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:46.828 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:46.831 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,042,ckey=78,227,499)
01:45:46.831 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:46.832 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@5627cb29, maxRows=0, fetchSize=0, flags=1,047
01:45:46.833 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:46.833 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:46.833 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:46.833 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:47.010 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:47.011 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:47.011 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:47.012 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:47.013 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@3e43f049, maxRows=0, fetchSize=0, flags=1,047
01:45:47.013 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:47.013 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:47.013 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:47.014 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:47.191 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:47.191 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:47.191 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:47.191 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:47.191 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:47.192 [main] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:47.192 [main] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:47.192 [main] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.jdbc.PgStatement$StatementResultHandler@1e56bc9b, maxRows=0, fetchSize=0, flags=21
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="",oids={})
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Describe(portal=null)
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:47.205 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE NoData
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE EmptyQuery
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.jdbc.PgStatement$StatementResultHandler@447521e, maxRows=0, fetchSize=0, flags=17
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SHOW TRANSACTION ISOLATION LEVEL",oids={})
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Describe(portal=null)
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=0)
01:45:47.383 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:47.467 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293947467; nextExpiration=1624293947456; keyCount=0; hasEvents=false; eval=false
01:45:47.560 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:47.560 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:47.560 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE RowDescription(1)
01:45:47.561 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(transaction_isolation,TEXT,65535,T)
01:45:47.562 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=14)
01:45:47.562 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SHOW)
01:45:47.568 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:47.568 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:47.569 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13f40d71
01:45:47.571 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
01:45:47.574 [main] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@357272758 wrapping org.postgresql.jdbc.PgConnection@13f40d71] will not be managed by Spring
01:45:47.581 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - ==>  Preparing: SELECT * FROM feed where category = ''
01:45:47.597 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - ==> Parameters: 
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.jdbc.PgStatement$StatementResultHandler@626c569b, maxRows=0, fetchSize=0, flags=17
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SELECT * FROM feed where category = ''",oids={})
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Describe(portal=null)
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=0)
01:45:47.597 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:47.679 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
01:45:47.680 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:47.680 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:47.680 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:47.680 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:47.681 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE RowDescription(9)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(title,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(link,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(description,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(author,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(pub_date,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(category,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(view_count,INT4,4,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(main_text,TEXT,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -         Field(image_url,VARCHAR,65535,T)
01:45:47.777 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,460)
01:45:47.859 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:47.859 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:47.859 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:47.859 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:47.955 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,146)
01:45:47.957 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=7,958)
01:45:47.958 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,037)
01:45:47.960 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,411)
01:45:47.962 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=6,563)
01:45:48.037 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:48.037 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:48.132 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=16,863)
01:45:48.132 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=2,304)
01:45:48.133 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=8,628)
01:45:48.134 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=9,150)
01:45:48.310 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=31,681)
01:45:48.318 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=92,496)
01:45:48.414 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:48.414 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:48.480 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293948480; nextExpiration=1624293948467; keyCount=0; hasEvents=false; eval=false
01:45:48.593 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=4a2037b1)
01:45:48.593 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md5d0b34c6a9398f6b98e1af7363f443886)
01:45:48.663 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=29,214)
01:45:48.663 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=14,209)
01:45:48.664 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=30,175)
01:45:48.729 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=45,631)
01:45:48.733 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=67,725)
01:45:48.734 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=20,691)
01:45:48.734 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=10,768)
01:45:48.734 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=8,215)
01:45:48.734 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=6,385)
01:45:48.734 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,029)
01:45:48.735 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=12,269)
01:45:48.735 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=7,125)
01:45:48.735 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=7,810)
01:45:48.735 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=3,837)
01:45:48.772 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,044,ckey=-1,555,660,669)
01:45:48.773 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:48.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@4b5f1012, maxRows=0, fetchSize=0, flags=1,047
01:45:48.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:48.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:48.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:48.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:48.839 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=7,710)
01:45:48.840 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=8,400)
01:45:48.841 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,206)
01:45:48.841 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,755)
01:45:48.841 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,947)
01:45:48.841 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=2,407)
01:45:48.843 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,301)
01:45:48.843 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=2,229)
01:45:48.844 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=6,353)
01:45:48.905 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,622)
01:45:48.906 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=3,759)
01:45:48.906 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=3,849)
01:45:48.906 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=3,575)
01:45:48.907 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=9,966)
01:45:48.908 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=6,509)
01:45:48.909 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,317)
01:45:48.909 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,616)
01:45:48.910 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=3,711)
01:45:48.910 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=4,991)
01:45:48.910 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=7,525)
01:45:48.911 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=5,504)
01:45:48.911 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=1,294)
01:45:48.912 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE DataRow(len=13,343)
01:45:48.912 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SELECT 49)
01:45:48.912 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:48.927 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==    Columns: title, link, description, author, pub_date, category, view_count, main_text, image_url
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.927 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.928 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.928 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Spock 살펴보기, https://meetup.toast.com/posts/268, , , 2021-02-22, , 0, # Spock이란?
* Spock은 BDD(Behaviour-Driven Development) 프레임워크입니다.
* TDD 프레임워크인 JUnit과 비슷한 점이 많으나, 기대하는 동작과 테스트의 의도를 더 명확하게 드러내주고 산만한 코드는 뒤로 숨겨주는 등의 큰 장점이 있습니다.

## 기존 JUnit의 단점 
* 테스트 중복 코드가 많습니다.
* JUnit, Hamcrest, Mockito를 전부 알아야 코드를 이해할 수 있습니다.

## Spock 세팅
![1.png](https://image.toast.com/aaaadh/real/2021/techblog/1%284%29.png)
![2.png](https://image.toast.com/aaaadh/real/2021/techblog/2%283%29.png)
이렇게 gradle이나 maven에 선언을 해주고 groovy 파일 생성 후 Specification 클래스를 상속받으면 spock을 사용할 수 있습니다.

## Spock의 구성
![3.png](https://image.toast.com/aaaadh/real/2021/techblog/3%283%29.png)
Spock 공식 문서에서는 6개의 라이프 사이클을 소개하고 있습니다.
![4.png](https://image.toast.com/aaaadh/real/2021/techblog/4%282%29.png)
setup과 cleanup은 각각 JUnit에서의 @before,@after에 해당하는 기능을 하고 있습니다.
![5.png](https://image.toast.com/aaaadh/real/2021/techblog/5%282%29.png)
when은 테스트할 대상 코드를 실행합니다.
then은 테스트할 대상 코드의 결과를 검증하는데 assert 문이 따로 필요 없고 이 블록 범위에선 한 줄 한 줄이 자동 assert가 됩니다.
![6.png](https://image.toast.com/aaaadh/real/2021/techblog/6%282%29.png)
expect는 when과 then을 합친 것으로 간단한 검증을 하기에 적합합니다.
where의 경우는 개인적으로 JUnit에 비해 정말 편리하다고 느끼는 부분인데 expect나 when에서 테스트할 코드의 변수를 `|`로 구분해서 나열할 수 있습니다.
![7.png](https://image.toast.com/aaaadh/real/2021/techblog/7%281%29.png)
JUnit으로 같은 테스트를 작성할 경우 위와 같이 중복 코드가 많이 발생하게 됩니다.

## Mock
테스트 시 정말 자주 사용하게 되는 mocking 또한 Spock에서 간단하게 처리할 수 있습니다.
![8.png](https://image.toast.com/aaaadh/real/2021/techblog/8%281%29.png)
given 블록의 첫 줄처럼 간단하게 mocking 할 수 있으며 반환 값은 `>>`로 지정해 줄 수 있습니다.
![9.png](https://image.toast.com/aaaadh/real/2021/techblog/9%281%29.png)
만약 exception을 처리해야 한다면 위와 같이 작성할 수 있습니다.

## Bean의 mocking
Spock을 쓴다 하더라도 Spring의 Bean을 mocking하려면 Mockito 방식을 사용해야 합니다.
![10.png](https://image.toast.com/aaaadh/real/2021/techblog/10%281%29.png)
하지만 이 경우 groovy 언어의 특성상 Overloading Method를 mocking할 때 어떤 메서드를 mocking 해야 할지 선택하지 못해 mocking 실패로 테스트가 실패하게 됩니다.
![11.png](https://image.toast.com/aaaadh/real/2021/techblog/11%281%29.png)
그럴 경우 Spock에서 제공하는 DetachedMockFactory 팩토리를 통한 Mock 생성을 통해 bean에 대한 mock 생성이 가능합니다.
하지만 이 경우에도 문제가 있는데 JpaRepository의 경우 mocking하지 못합니다.
때문에 JpaRepository 인터페이스 mocking이 필요할 경우 JUnit 또는 Spock에서 Mockito를 사용해야 합니다.

## Spock 후기
조사를 시작하면서 처음 다가왔던 부분은 Spock이 저에게는 조금 생소한 언어였던 groovy 언어를 사용하는데 사실 크게 다른 부분은 보이지 않아서 언어의 문제보다는 테스트 코드 작성의 편리함이 더 크게 느껴졌습니다.
아무래도 기존에 많이 접해왔던 JUnit과 비교를 할 수밖에 없는데 Spock이 가지는 강점은 검증 문서의 편리함도 있었지만, 가장 좋았던 부분은 where 블록을 통한 코드 중복의 최소화였습니다.
기존에 테스트를 하다 보면 하나의 프로세스에 대해서 여러 가지 경우로 테스트를 하게 되는데 그런 경우 코드 중복을 확실하게 줄일 수 있는 Spock을 사용하면 좋을 것 같습니다.
하지만 bean을 mocking 하게 될 경우 조사하면서 mocking이 제대로 되지 않아 고생한 것도 있고 해결하지 못한 부분도 있기 때문에 그런 부분에서는 확실하게 숙지하기 전까지는 JUnit을 사용하는 것이 좀 더 안정적일 것 같습니다., 
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.929 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.930 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.931 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.932 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.933 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: LogViewer를 사용하여 더 편한 테스트 환경 만들기, https://meetup.toast.com/posts/266, , , 2021-02-03, , 0, ## 필요성

게임을 빌드 후 실제 디바이스에서 테스트를 하는 것은 당연한 일입니다.

디바이스에서 문제가 발생하는 경우 원인을 추적해야 하는 상황이 발생하는데
문제가 되는 디바이스가 항상 개발자의 손에 있을 수 없으며 디바이스를 연결해서 확인할 수 있게 로그를 확인할 환경이 갖춰진 장비가 필요합니다.
항상 쉽게 추적할 상황이 만들어지진 않습니다.

문제가 되는 디바이스에서 바로 로그를 확인하고, 그 로그와 문제가 발생한 디바이스의 시스템 정보를 함께 등록된 개발자 메일로 전달할 수 있도록 제공합니다.

또한 문제가 되는 환경에서 재현을 위해 발생한 환경과 동일하게 데이터를 조작해야 하는 경우도 발생합니다.
테스트 환경을 만들기 위해 사용자가 API를 등록할 수 있는 커맨드와 치트키를 입력할 수 있도록 제공하여 인게임에서 바로 특정 상황을 만들 수 있도록 제공하고 있습니다.

LogViewer는 간편한 설정만으로 테스트 환경을 더 편하게 갖출 수 있습니다.

## 기능 소개

### Console

Unity 에디터에 연결하거나 별도의 디버그 빌드를 만들지 않고 바로 런타임에서 로그를 확인합니다.

* Unity 콘솔과 동일하게 UnityEngine.Debug의 로그를 호출될 때마다 업데이트 됩니다.
* 카테고리와 필터를 제공하여 원하는 로그만 선택해서 볼 수 있습니다.
* 설정한 메일로 전체 로그와 시스템 정보를 전송할 수 있고, 특정 로그를 선택해서 복사를 쉽게 하여 개발자가 쉽게 로그를 전달 받을 수 있습니다.

![1.png](https://image.toast.com/aaaadh/real/2021/techblog/1%283%29.png)

### Function

LogViewer에서 사용자가 게임을 제어할 수 있습니다.

* Cheat Key : 텍스트필드에 문자열을 입력하여 등록한 콜백으로 전달받아 Cheat Key를 간단하게 구현할 수 있습니다.
* Command : 필요한 API를 등록하여 LogViewer에서 실행시킬 수 있습니다.

![2.png](https://image.toast.com/aaaadh/real/2021/techblog/2%282%29.png)

### System

현재 디바이스 정보와 프로젝트의 설정 값, 런타임 정보를 확인할 수 있습니다.

![3.png](https://image.toast.com/aaaadh/real/2021/techblog/3%282%29.png)


## LogViewer 사용법

### 설치법

1. Unity Asset Store에서 [Game Package Manager](https://assetstore.unity.com/packages/tools/game-toolkits/game-package-manager-147711)를 설치합니다.
2. 에디터 메뉴 **Tools > GPM > Manager**를 선택합니다.
3. 서비스 목록에서 **LogViewer**를 설치합니다.
![4.png](https://image.toast.com/aaaadh/real/2021/techblog/4%281%29.png)

### 프로젝트에 LogViewer 추가 및 설정

1. GPM/LogViewer/Prefabs/GpmLogViewer.prefab 파일을 현재 씬에 추가합니다.
2. 추가한 GpmLogViewer 오브젝트에 Inspector에서 필요한 설정을 해줍니다.
![5.png](https://image.toast.com/aaaadh/real/2021/techblog/5%281%29.png)

### 런타임에서 LogViewer 활성화 하기

사용자가 지정된 제스처나 키를 통해 활성화하거나 Error나 Exception이 발생하면 자동으로 활성화 됩니다.

* 사용자가 활성화
    * **BackQuote 키**를 눌러 활성화
![6.png](https://image.toast.com/aaaadh/real/2021/techblog/6%281%29.png)
    * Android, iOS - **손가락 다섯개로 1초간 화면을 터치**해서 활성화

   
*  Error, Exception 타입의 로그가 발생하면 자동으로 활성화

---
**이외의 더 자세한 정보는 [가이드](https://github.com/nhn/gpm.unity/blob/main/docs/LogViewer/README.md)에서 확인하실 수 있습니다.**

## Contact us

GPM이 여러분들에게 조금이나마 도움이 되었으면 합니다.
기능 추가가 필요하거나 이슈 발생 시 아래로 연락 바랍니다.

* e-mail : dl_gpm_help@nhn.com
* 이슈 등록 : https://github.com/nhn/gpm.unity/issues

감사합니다., 
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.933 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.934 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.935 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.936 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.936 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 쉽지만 어려운 WebView! 이젠 그만, 쉽기로 하자!, https://meetup.toast.com/posts/265, , , 2021-01-25, , 0, ## Unity 개발자들의 한줄기 빛이 되리라!

Unity 개발자들은 일이 너무 많습니다. 게임만 잘 만들면 될 줄 알았는데. 
플랫폼 연동(인증, 결제, 푸시), 다양한 언어 학습, 그리고 WebView 연동 등. 게임 개발 외에 해야 할 일이 너무 많습니다.

![1.JPG](https://image.toast.com/aaaadh/real/2021/techblog/1.JPG)

사례를 하나 들어 보겠습니다.
게임을 좋아해서 게임 개발사에 입사한 김모씨.

![2.png](https://image.toast.com/aaaadh/real/2021/techblog/2%281%29.png)
대박 게임을 만들겠다는 마음가짐으로 화이팅이 넘칩니다.
수습 기간이 끝나고 처음으로 맡은 업무는 바로 플랫폼 연동!! Unity 게임 관련 로직만 알고 있던 김모씨는 처음 접하는 업무에 어리둥절합니다.

![3.png](https://image.toast.com/aaaadh/real/2021/techblog/3%281%29.png)

사수 이모씨는 김모씨에게 1주일 내로 Scheme을 처리할 수 있는 WebView를 만들어서 Android, iOS 플랫폼에 적용하라 합니다.
그냥 톡! 하면 적용될 것이라 생각한 김모씨는 현실에 벽에 부딪힙니다.
Unity에는 WebView 관련 API가 없었던 것이죠.

김모씨는 Unity Asset store에서  WebView를 검색합니다.
많은 WebView가 검색되었지만 스펙에 맞는 웹뷰는 모두 유료 에셋이라 구매할 엄두가 나지 않습니다.

김모씨는 눈을 돌려 구글 검색창에 Scheme을 지원하는 Unity WebView를 검색합니다.
검색은 많이 되지만 Unity 기술만 보유한 김모씨는 생전 처음보는 언어들과 기술로 인해 좌절하게 됩니다.

자! 그렇다면 김모씨는 왜 좌절하게 되었던 것일까요?
Unity에서 WebView를 사용하려면 아래 그림의 파란색 영역의 기술도 알고 있어야 했기때문입니다.

![4.jpg](https://image.toast.com/aaaadh/real/2021/techblog/4.jpg)
이 파란색 영역에는 많은 것들이 포함되어 있습니다. (iOS 기준)

1. Unity iOS Plugin
2. Objective c or Swift
3. WKWebView
4. Xocde
5. iOS Build System
7. ETC...

이 영역을 유니티만 알고 있는 신입 개발자가 1주일 만에 모두 파악해서 WebView를 만드는 것은 불가능에 가깝습니다.

그래서 NHN은 김모씨와 같은 어려운 상황에 처한 분들에게 조금이나마 보탬이 되고자 GPM WebView를 만들었습니다.

![5.png](https://image.toast.com/aaaadh/real/2021/techblog/5.png)

GPM WebView를 사용하면 iOS, Android 개발을 잘 몰라도, 여러분들의 앱에서 `무료`로 WebView를 사용할 수 있습니다.
지금은 기능이 많지 않지만 꾸준한 업데이트와 여러분들의 의견을 최대한 반영하여 최고의 WebView가 될 수 있도록 노력하겠습니다.

![6.png](https://image.toast.com/aaaadh/real/2021/techblog/6.png)

## Introduce

GPM은 Game Package Manager의 약자로 2019년 9월 30일에 Asset Store에 론칭된 별점 5점의 Unity Free Asset이며,
GPM WebView는 GPM에 포함된 서비스들 중 하나입니다.

![7.png](https://image.toast.com/aaaadh/real/2021/techblog/7.png)

* Asset store : https://assetstore.unity.com/packages/tools/game-toolkits/game-package-manager-147711 
* 공식 문서 : https://github.com/nhn/gpm.unity/

GPM WebView 외 다양한 서비스들이 업데이트되고 있으니 사용해 보시는 것을 추천드립니다.

* WebView
* AssetManagement
* Communicator
* LogViewer
* UI

## Spec

현재 구현된 기능들이며, 지속적인 업데이트를 통해 좋은 기능들이 많이 추가될 예정입니다.

| 카테고리 | 기능 | 플랫폼 | 설명 |
| --- | --- | --- | --- |
| Load | Url | Android, iOS | 입력된 URL으로 WebView를 띄웁니다. |
| Navigation | Back | Android, iOS | 뒤로가기 버튼 |
|  | Title | Android, iOS | WebPage 타이틀 |
|  | Close | Android, iOS | 닫기 버튼 |
| Custom scheme | Register | Android, iOS | Custom scheme 등록 |
|  | Callback | Android, iOS | Custom scheme callback |
| Event, Callback | Open callback | Android, iOS | 웹뷰가 오픈되면 전달되는 callback |
|  | Close callback | Android, iOS | WebView가 닫히면 전달되는 callback |

## How to use

### Install

1. Asset store에서 Game Package Manager를 검색하여 설치
2. Menu > Tools > GPM > Manager 메뉴를 선택
3. Game Package Manager 창에서 WebView를 선택
4. 우측 상단의 Install 버튼 클릭

![8.png](https://image.toast.com/aaaadh/real/2021/techblog/8.png)
**설치 끝!** 

![9.png](https://image.toast.com/aaaadh/real/2021/techblog/9.png)

### API

#### ShowUrl

WebView를 띄웁니다.

```cs
/// <summary>
/// This method to create the webview and display it on screen.
/// </summary>
/// <param name="url">The url of the resource to load.</param>
/// <param name="configuration">The configuration of webview.</param>
/// <param name="openCallback">This callback would be called when webview is opened</param>
/// <param name="closeCallback">This callback would be called when webview is closed</param>
/// <param name="schemeList">This schemeList would be filtered every web view request and call schemeEvent</param>
/// <param name="schemeEvent">This schemeEvent would be called when web view request matches one of the schemeLlist</param>
static void ShowUrl(
    string url, 
    GpmWebViewRequest.Configuration configuration,
    GpmWebViewCallback.GpmWebViewErrorDelegate openCallback,
    GpmWebViewCallback.GpmWebViewErrorDelegate closeCallback,
    List<string> schemeList,
    GpmWebViewCallback.GpmWebViewDelegate<string> schemeEvent)
```

#### Example

```cs
public void ShowUrlSample()
{
    string url = "https://github.com/nhn/gpm.unity/tree/main/docs/WebView";
    List<string> schemeList = new List<string>
    {
        "scheme1",
        "scheme2"
    };

    GpmWebView.ShowUrl(
        url,
        new GpmWebViewRequest.Configuration()
        {
            title = "docs|GPMWebView",
            orientation = ScreenOrientation.AutoRotation,
            contentMode = GpmWebViewContentMode.RECOMMENDED
        },
        (error) =>
        {
            // open callback
            if (error == null)
            {
                Debug.Log("ShowUrl succeeded.");
            }
            else
            {
                Debug.Log(string.Format("ShowUrl failed. code:{0}, message:{1}", error.code, error.message));
            }
        },
        (error) =>
        {
            // close callback
            if (error == null)
            {
                Debug.Log("close succeeded.");
            }
            else
            {
                Debug.Log(string.Format("Close failed. code:{0}, message:{1}", error.code, error.message));
            }
        },
        schemeList,
        (data, error) =>
        {
            // scheme event
            if (error == null)
            {
                Debug.Log(string.Format("scheme event succeeded. data:{0}", data));
            }
            else
            {
                Debug.Log(string.Format("Scheme event failed. code:{0}, message:{1}", error.code, error.message));
            }
        }
    );
}
```

#### Close

WebView를 닫습니다.

```cs
/// <summary>
/// This method to close the webview in display on a screen.
/// </summary>
static void Close()
```

#### Example

```cs
public void CloseSample()
{
    GpmWebView.Close();
}
```

**실행 화면**

![10.png](https://image.toast.com/aaaadh/real/2021/techblog/10.png)

## Contact us

GPM이 여러분들에게 조금이나마 도움이 되었으면 합니다.
기능 추가 요청 및 이슈 발생 시 아래로 연락 바랍니다.

email : dl_gpm_help@nhn.com
github issue URL : https://github.com/nhn/gpm.unity/issues

긴글 읽어 주셔서 감사합니다. 

![11.png](https://image.toast.com/aaaadh/real/2021/techblog/11.png), 
01:45:48.936 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.937 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.938 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.940 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.940 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.941 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.942 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity Plugin을 Communicator 하나로 통합하기, https://meetup.toast.com/posts/264, , , 2021-01-15, , 0, ## Unity Native 개발 시 Plugin의 필요성
유니티로 개발된 게임들은 출시하기 위해 많은 네이티브 기능들은 연동해야 합니다.

Push, Purchase, WebView등 모바일 플랫폼에서 제공하는 다양한 기능들을 사용하기 위해 플러그인 개발이 필요합니다.

## 기존 플러그인 개발 방식
게임을 출시하기 위해 개발팀은 다양한 네이티브 기능들을 사용할 수 있는 플러그인을 개발하고 
이렇게 개발된 플러그인은 그것을 필요로 하는 다른 개발팀과 공유하여 사용하는 과정에서 
많은 코드가 중복되고 이런 중복코드에서 이슈 발생 시 유지보수에 많은 리소스를 낭비하게 됩니다.
![1.png](https://image.toast.com/aaaadh/real/2021/techblog/1%282%29.png)


## Communicator의 사용
Communicator는 기존의 Plugin 개발의 단점을 보완하고자 **무료**로 제공되는 서비스입니다.

Communicator는 플러그인의 통신을 담당하는 라이브러리를 제공함으로써 플러그인에서 코드의 중복을 최소화하고 모바일 플랫폼에서 제공하는 다양한 기능을 빠르게 개발할 수 있도록 돕습니다.
![2.png](https://image.toast.com/aaaadh/real/2021/techblog/2.png)

### 네이티브와의 통신
* 개발자가 필요로 하는 네이티브 기능을 유니티와 Native에서 개발하고 통신을 위해 Communicator의 AddReceiver API 통해 Receiver를 등록합니다.
    ```cs
    public static void AddReceiver(string domain, GpmCommunicatorCallback.CommunicatorCallback callback)    
    ```
    * Receiver 등록 시 입력한 domain으로 Data를 받을 Receiver가 구분됩니다
   
*  Message를 특정 Receiver로 전달하기 위해서는 Message.domain에 Receiver 등록 시 입력한 domain 값을 입력하면 됩니다.
    ```cs
    public class Message
    {
        public string domain;
        public string data;
        public string extra;
    }
    ```
    * 통신에 사용되는 Message 객체는 data와 extra 두 개의 string 타입의 필드가 있어 JSON, delimeter 사용 등 다양한 포맷으로 필요한 데이터를 전달할 수 있습니다.
* 통신에는 동기와 비동기 두 가지 방식이 제공됩니다.
     ```cs    
    public static GpmCommunicatorVO.Message CallSync(GpmCommunicatorVO.Message message)
    public static void CallAsync(GpmCommunicatorVO.Message message)
    ```

더 자세한 정보는 [가이드](https://github.com/nhn/gpm.unity/blob/main/docs/Communicator/README.md)에서 확인할 수 있습니다.

## 설치법
설치법은 다음과 같습니다.

1. 에셋스토어에서 GamePackageManager를 설치합니다.
    * [에셋스토어 바로가기](https://assetstore.unity.com/packages/tools/game-toolkits/game-package-manager-147711)
2. 메뉴의 Tools/GPM/Manager를 선택합니다.
    ![3.png](https://image.toast.com/aaaadh/real/2021/techblog/3.png)
3. Communicator를 설치합니다.
    ![4.png](https://image.toast.com/aaaadh/real/2021/techblog/4.png)

## 마무리
Communicator를 사용하면 어떤 데이터를 주고받을 것 인지 고민하시면 됩니다.
데이터를 어떻게 주고받을 것인가는 Communicator가 해결하여 드립니다.
Communicator를 사용하여 플러그인 개발 시간을 줄이고 게임 콘텐츠 개발에 집중하실 수 있습니다.

GamePackageManager에는
게임 내에서 웹페이지를 열어볼 수 있는 WebView,
디버깅 연결 없이도 게임 내에서 로그를 볼 수 있는 LogViewer,
에셋 의존성 관리를 할 수 있는 AssetManagement와 같은
사용 시 도움이 되는 다양한 에셋들도 있습니다.

좋은 추가 기능 및 아이디어가 있거나, 이슈가 발생하였다면 아래 방법으로 공유 부탁드립니다.
* [GitHub 문의](https://github.com/nhn/gpm.unity/issues)
* 이메일
    * dl_gpm_help@nhn.com

감사합니다., 
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.942 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.943 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.944 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.944 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.944 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.944 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity 의존성을 통한 에셋 관리로 생산성 향상, https://meetup.toast.com/posts/263, , , 2021-01-08, , 0, ## 에셋 관리의 필요성

유니티에서 작업할 때 어떤 에셋이 있고 에셋이 어디에 있는지 찾고 수정하는 과정이 수없이 발생합니다.

스크립트, 텍스쳐, 모델링 등 주 작업 후 에셋에 대한 작업이 이루어지는데
기존에 어떤 에셋을 사용하는지 에셋이 어디에 있는지
더 나아가서 에셋 내부 하이라키 어디에 붙어있는지 찾는 시간이 많이 소요됩니다.

이러한 과정 중 누락되는 경우 버그가 발생할 수도 있어 확인도 필요합니다.
이는 전부 에셋관리 비용이며 에셋이 많아질수록 커집니다.
히스토리를 잘 알고 있는 경력자, 담당자일수록 이러한 과정이 축약되어 효율이 높아지는 이유입니다.

## 기존의 에셋 관리

이러한 에셋 관리 비용을 줄이기 위해 에셋 이름과 종류별로 폴더로 잘 구분합니다.
ItemSlot이라는 스크립트가 있으면 연결된 프리팹도 ItemSlot과 같이 이름을 동일 또는 유사하게 만들고
폴더를 잘 구분해 넣고 폴더를 따라서 찾아가거나 이름으로 검색하는 방식을 사용합니다.
그러나 이러한 방식은 에셋이 많아지면서 점점 찾기 힘들어집니다.

## 의존성을 통한 에셋 관리

이러한 문제는 의존성을 통한 에셋 관리를 통해 개선할 수 있습니다.
모든 에셋은 의존성을 가지고 있습니다.

프리팹 등 상위 에셋에서 연결된 스크립트, 모델링 등의 guid를 가지고 있어 사용 시 로드합니다.
이러한 정보를 이용해서 연결된 에셋을 알 수 있습니다.
이는 유니티 메뉴의 Select Dependenys를 통해 확인할 수 있습니다.

하지만 이 경우 프리팹같은 상위 에셋에서 하위 에셋만 찾을 수 있습니다.
위에서 예시로든 ItemSlot 스크립트가 있다고 했을 때 ItemSlot을 사용하는 프리팹을 알 수 없습니다.
ItemSlot을 수정해도 상위 프리팹을 찾아야 하는 에셋관리 이슈는 여전합니다.

## Assetmanagement를 통한 에셋 관리

이러한 에셋관리 방법에 대해 소개하고자 합니다.
Assetmanagement라는 에셋이 있습니다. **무료**이고 쉽게 받을 수 있습니다.
[설치법](#%EC%84%A4%EC%B9%98%EB%B2%95)

Assetmanagement를 사용했을 때 그래프로 에셋의 관계를 직관적으로 보여줍니다.
처음 보는 에셋이라도 관계를 직관적으로 파악하여 쉽게 관리할 수 있습니다.
이는 분석 및 인수인계 등의 시간을 줄여줍니다.

### 직관적인 에셋 의존성

사용하는 에셋과 사용되는 에셋을 한 번에 알 수 있습니다.
하위나 상위 에셋이 수정되더라도 찾는 비용이 사라집니다.

예를 들어 ItemSlot 스크립트에 새로운 속성을 추가했습니다.

```
public class ItemSlot : MonoBehaviour
{
    // Add Code
    public GameObject AdditiveObject;

    ...
}
```

이때 어느 폴더에 있든 ItemSlot 스크립트에 붙어있는 에셋을 알 수 있습니다.
레퍼런스 검색을 통해 더 나아가서 어떤 게임오브젝트에 붙었나 파악하고 수정할 수 있습니다.
기존 방식처럼 에셋을 찾아다니는 비용이 사라집니다.
![1.png](https://image.toast.com/aaaadh/real/2021/techblog/1%281%29.png)

### 쉬운 에셋 교체

폰트나 스프라이트같이 컴포넌트 내에 속성으로 포함된 경우도 찾을 수 있습니다.
에셋 내부 어디에 연결돼있나 찾아야 하므로 기존방식으로는 더욱 비용이 큽니다.
이도 역시 레퍼런스 검색을 통해 어느 속성에 연결돼있나 확인 가능하며 교체도 쉽게 가능합니다.
![2.gif](https://image.toast.com/aaaadh/real/2021/techblog/2.gif)

### 안전한 에셋 관리

의존성이 존재하지 않는다면 연결된 에셋이 없기 때문에 안전한 삭제도 가능합니다.
또한 잘못된 삭제로 missing과 같은 이슈가 발생할때도 쉽게 알수 있습니다.

더 자세한 정보는 [가이드](https://github.com/nhn/gpm.unity/blob/main/docs/AssetManagement/README.md)에서 확인할 수 있습니다.

## 마무리

이처럼 에셋메니지먼트를 사용하여 생산성을 향상할 수 있습니다.
의존성을 활용하여 다운로드, 빌드 사이즈 메모리 등을 최적화할 수 있습니다.

사용을 권장합니다. 낭비하는 시간을 없애고 주 작업에 집중하세요!
좋은 추가 기능 및 아이디어가 있다면 아래 메일로 아이디어 부탁드립니다.
[dl\_gpm\_help@nhn.com](mailto:dl_gpm_help@nhn.com)

## 설치법

설치법은 다음과 같습니다.

1. 에셋스토어에서 GamePackageManager를 설치합니다.
    * [에셋스토어 바로가기](https://assetstore.unity.com/packages/tools/game-toolkits/game-package-manager-147711)
2. 메뉴의 Tools/GPM/Manager를 선택후 AssetManagement를 설치합니다.
![3.gif](https://image.toast.com/aaaadh/real/2021/techblog/3.gif)

AssetManagement외에도 GamePackageManager에는
게임 내에서 웹페이지를 열어볼 수 있는 Webview,
디버깅 연결 없이도 게임 내에서 로그를 볼 수 있는 Logviewr 와 같은
사용 시 도움이 되는 다양한 에셋들도 있습니다.

감사합니다., 
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.946 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.947 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.948 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.948 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: AutoScale with Application Deployment, https://meetup.toast.com/posts/262, , , 2020-12-31, , 0, ### 기능 설명 

>AutoScale로 인해 새로 생성된 인스턴스에 고객이 정의한 애플리케이션을 자동으로 배포할 수 있게 돼서 
>진정한 의미의 AutoScale을 경험하실 수 있게 됐습니다. 

이전 IaaS  서비스 소개글 (  [오토스케일\(Autoscale\)의 이해와 예제를 통한 구성\(TOAST 서비스 들여다보기\)](https://meetup.toast.com/posts/176) )  에서 AutoScale에 대한 정의는 다음과 같다고 했습니다.

**오토스케일은 인스턴스의 부하를 모니터링해서 특정 이벤트에 대해 인스턴스를 추가/삭제하는 기능을 제공하는 서비스입니다.**

대부분의 경우 인스턴스 생성 시 사용자 서비스에 맞도록 설정이 변경된 VM 이미지 ( 이하 이미지 )를 사용하게 되는데 사용자가 이미지를 어떻게 사용하는지에 따라 아래와 같이 나눠질 수 있습니다. 

1. 실제 구동이 가능한 서비스(애플리케이션)가 포함된 이미지 
    * 이미지 배포가 가능해야 하며 이미지 사이즈가 커서 관리 이슈 / 배포 시간이 오래 걸린다는 단점이 있습니다.
2. 서비스 구동 환경 이미지 ( 애플리케이션 불포함 ) 
    * 클라우드 서비스 업체에서 하드닝한 표준 이미지로 애플리케이션 배포만 별도로 진행합니다. 

요즘에는 서비스를 Container 환경으로 전환해서 1번 형태의 단점이 상쇄되면 1번 형태 이미지를 선택 및 운영이 가능하겠지만 
아직 전환이 안되었고 서비스가 지속적으로 업데이트되는 상황이라면 2번 이미지를 선택하게 됩니다. 

### 문제점 
2번 이미지를 가지고 AutoScale 기능을 사용했을 때 이벤트를 통해 새로 생성된 인스턴스는 
고객 서비스(애플리케이션)가 구동될 환경의 인스턴스만 만들어졌고 실제 서비스는 동작하지 않는 껍데기만 만들어집니다.
결국 개발자는 신규로 생성된 인스턴스에 배포를 해야 하는 불편함이 있습니다.

### 해결 
이번에 추가된 기능은 AutoScale로 인해 새로 생성된 인스턴스에 고객이 정의한 애플리케이션을 자동으로 배포해서 위와 같은 불편함을 없애주는  기능입니다. 이 기능을 사용하시면 진정한 의미에서의 AutoScale 기능을 사용하실 수 있습니다.


### 사용자 가이드 
실제 AutoScale 기능의 활성화부터  서비스 애플리케이션의 배포까지 필요한 일련의 과정을 아래 단계를 통해 진행해볼 수 있습니다. 
1. AutoScale 설정 
2. Toast Deploy 설정 
3. 수동 배포 테스트 
4. 자동 배포 테스트 
5. 신규 생성된 서버 확인 

그럼 아래 화면 캡처된 가이드를 따라 진행해보도록 하겠습니다.  

1. AutoScale 그룹 생성
* 먼저 오토스케일 그룹을 생성합니다. 자세한 이벤트 트리거나 조건들은 [AutoScale 가이드](https://docs.toast.com/ko/Compute/Auto%20Scale/ko/overview/#_1)를 통해 확인할 수 있습니다. 
<BR>
* iaas 오토스케일 상품내 [인스턴스 템플릿 생성] 버튼 클릭으로 템플릿 생성
![1.png](https://image.toast.com/aaaadh/real/2020/techblog/1%2899%29.png)

* 인스턴스 템플릿 생성 시 Deploy 사용 체크
![2.png](https://image.toast.com/aaaadh/real/2020/techblog/2%2874%29.png)

* 스케일링 그룹 생성 시 기생성한 템플릿을 지정하여 생성
![3.png](https://image.toast.com/aaaadh/real/2020/techblog/3%2860%29.png)
<BR>
2. Toast Deploy 설정 
* 이제 서비스 애플리케이션이 신규 생성될 인스턴스에 배포될 수 있도록 배포 관련 설정을 하겠습니다. 배포의 타깃 설정과 배포 애플리케이션을 만들기 위한 시나리오 등록 등을 진행합니다. 
<BR>
* Deploy 콘솔에서 서버 그룹 생성 클릭
![4.png](https://image.toast.com/aaaadh/real/2020/techblog/4%2854%29.png)
* 그룹 타입 '오토 스케일 서버 그룹' 선택 후, 기 생성한 스케일링 그룹 선택
![5.png](https://image.toast.com/aaaadh/real/2020/techblog/5%2856%29.png)
* 스케일 아웃 시나리오의 [시나리오 추가] 버튼 클릭
![6.png](https://image.toast.com/aaaadh/real/2020/techblog/6%2846%29.png)
* 기존 생성한 배포 시나리오 선택(없다면 다른 서버그룹 내에 생성)
![7.png](https://image.toast.com/aaaadh/real/2020/techblog/7%2837%29.png)
* 여러 시나리오 추가 시 우선순위 적용 가능 (같은 우선순위는 무작위 순서로 실행)
![8.png](https://image.toast.com/aaaadh/real/2020/techblog/8%2828%29.png)
* 시나리오 추가 완료
![9.png](https://image.toast.com/aaaadh/real/2020/techblog/9%2823%29.png)

3. 수동 배포 테스트 
* 자동으로 동작시키기 전에 수동으로 테스트를 한번 해봐야겠죠? 2번 단계에서 진행한 시나리오 배포 타깃으로 정상적으로 배포되는지 확인해보겠습니다. 

<BR>
* Deploy 콘솔에서 배포 타깃 인스턴스 선택
![10.png](https://image.toast.com/aaaadh/real/2020/techblog/10%2818%29.png)
* 배포 실행 및 완료
![11.png](https://image.toast.com/aaaadh/real/2020/techblog/11%2817%29.png)

4. Scale Out 테스트
* 이벤트 트리거를 발생시킨 것과 같은 트리거 동작을 진행해 봄으로써 자동 배포 테스트를 진행합니다.
<BR>
* AutoScale 콘솔에서 구동 인스턴스의 scale out 발생 (수동/자동) - 인스턴스 2로 변경
![12.png](https://image.toast.com/aaaadh/real/2020/techblog/12%289%29.png)
* 인스턴스 생성 후 등록된 스케일 아웃에 의한 배포 자동 실행 - Deploy 배포이력에서 확인 가능 
![13.png](https://image.toast.com/aaaadh/real/2020/techblog/13%288%29.png)
* 배포 정상 종료 
![14.png](https://image.toast.com/aaaadh/real/2020/techblog/14%288%29.png)

5. 신규 생성된 서버 확인 
* Deploy 콘솔에서 오토스케일 서버그룹내 등록된 서버 목록 확인
![15.png](https://image.toast.com/aaaadh/real/2020/techblog/15%283%29.png)
![16.png](https://image.toast.com/aaaadh/real/2020/techblog/16%283%29.png)


### 마치며 
좀 더 나은 개발 문화를 향해 신기술에 대해서 도입도 중요하지만 현재 서비스 환경에 대해서도 지원이 필요한 기능을 제공해드릴 수 있어서 기쁘게 생각합니다. 
앞으로도 좀 더 나은 기능 / 개발 환경/ 문화를 소개해드릴 수 있으면 좋겠습니다., 
01:45:48.948 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.949 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.950 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.951 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.951 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: gRPC 훑어보기, https://meetup.toast.com/posts/261, , , 2020-12-24, , 0, 안녕하세요. NHN EDU 아이엠클래스팀 이광신입니다.

이번에 컴퓨터비전팀과 함께 시험용 OMR 인식 및 판독기 기능을 신규 개발하면서 컴퓨터비전팀에서는 딥러닝을 활용하여 python으로 개발이 되었고,
제가 익숙한 언어는 자바였기 때문에 OMR 문서 스캔/업로드는 자바로, 판독은 python 서버에서, 그리고 다시 EXCEL 파일 생성을 자바에서 개발을 하였고,
판독 요청을 python 서버로 전달하기 위해 어플리케이션 간 통신 방식을 gRPC로 정하게 되면서 사용을 하게 되었습니다.

이런 목적으로 팀내에서 공유하기 위해서 gRPC 에 대해 조사한 내용을 함께 공유하고자 합니다.

# RPC

우선 RPC에 대해 간단히 확인하고 본론으로 넘어가도록 하겠습니다.
RPC는 Remote Procedure Call 의 약자로 분산 네트워크 환경에서 조금 더 편하게 프로그래밍 하기 위한 등장하였습니다.
클라이언트 - 서버 간의 커뮤니케이션에 필요한 상세한 정보는 최대한 감추고 개발자는 각 로직에만 집중할 수 있도록 클라이언트/서버는 일반 메소드를 호출하는 것처럼 개발을 진행하면 됩니다.

![1.png](https://image.toast.com/aaaadh/real/2020/techblog/1%2898%29.png)

* caller/callee
개발자가 필요한 비지니스 로직을 생성하고 정의된 IDL(interface definition language)로 작성하여 stub 을 호출합니다.
* Stub
Stub compiler 가 IDL 파일을 읽어 원하는 language 로 생성하고 파라미터를 마샬링/언마샬링 처리하여 RPC 프로토콜로 전달합니다.
* RPC runtime
통신하여 각 메세지를 전달하게 됩니다.

# gRPC

그럼 이제 gRPC에 대해 확인을 해보도록 하겠습니다.
공식 페이지의 설명을 기반으로 간단하게 요약해 보았습니다. ([https://grpc.io/](https://grpc.io/))
gRPC는 google 에서 마이크로서비스에 사용하던 단일 범용 RPC 인프라 Stubby 에서 시작하였습니다. Stubby 다음 버전을 계확하면서 외부에 오픈하기로 결정하하였다고 하네요. 높은 생산성과 효율적인 유지보수, 다양한 언어와 플랫폼 지원, 높은 메세지 압축률과 성능, 이러한 특징으로 한마디로 높은 성능의 오픈소스 범용 RPC 프레임워크입니다.

![2.png](https://image.toast.com/aaaadh/real/2020/techblog/2%2873%29.png)

각 특징에 대해 추가로 확인해보겠습니다.

## 높은 생산성과 효율적인 유지보수

IDL(Identity Definition Language)로 `protocol buffers(protobuf)` 사용합니다. IDL만 정의하면 높은 성능을 보장하는 서비스와 메세지에 대한 소스코드가 각 언어에 맞게 자동 생성됩니다.
따라서 개발자들은 생성된 코드를 클라이언트, 서버 간의 사용 언어에 구애받지 않고 사용하기만 하면 되며 정해진 규약을 공통으로 사용하기 때문에 의사소통 비용이 감소하게 됩니다.

## 다양한 언어와 플랫폼 지원

앞서 말씀드린 것과 같이 IDL 정의 한개로 다양한 언어와 플랫폼에서 동작하는 서버와 클라이언트 코드가 생성됩니다.
현재 공식 지원 언어들은 아래와 같습니다.
![3.png](https://image.toast.com/aaaadh/real/2020/techblog/3%2859%29.png)
[https://www.grpc.io/docs/](https://www.grpc.io/docs/)

## 높은 메시지 압축률과 성능

gRPC 는 내부적으로 HTTP/2 사용하여 헤더 압축률이 높고 protobuf 에 의해 통신시점에는 바이너리 데이터로 통신하기 때문에 메시지 크기가 작습니다.
그리고 추가로 HTTP/2 이기 때문에 양방향 스트림 통신이 가능하죠.

## 단점

이런 장점들이 있지만 간단한 RESTful API 를 제공을 목적으로 한다면 부적합하죠. 그리고 protobuf 및 HTTP/2 에 대한 아주 약간의 러닝 커브가 존재합니다.
또한 일반 REST API 와 다르게 메세지가 바이너리로 전달하게 되어 개발자들의 테스트가 쉽지 않은데, 이건 조사하다보니 POSTMAN과 유사한 bloomRPC([https://github.com/uw-labs/bloomrpc](https://github.com/uw-labs/bloomrpc)) 툴을 통해 gRPC 테스트를 해볼 수 있더라고요.

# Protocol Buffers

Protocol Buffers 에 대해서도 간단히 확인해 보겠습니다.
gRPC 에서 IDL 로 사용하고 있는 언어입니다. 구글에서 만들고 사용하는 데이터 직렬화 라이브러리로 아래와 같을 문법을 사용합니다.
이렇게 작성된 proto파일을 통해서 protoc 컴파일러를 통해 각 언어로 소스 코드가 생성됩니다.
아래와 같은 예시로 protocol buffer 가 선언되었고, 이는 통신하는 시점에 아래 이미지와 같이 인코딩되어 송수신됩니다. 따라서 본문의 사이즈가 훨씬 간결해지죠.

```
message Person {
    required string user_name        = 1;
    optional int64  favourite_number = 2;
    repeated string interests        = 3;
}
```

![4.png](https://image.toast.com/aaaadh/real/2020/techblog/4%2853%29.png)

# Sample

이제 간단한 샘플 코드를 통해 gRPC 사용법에 대해 알아보고자 합니다.
JAVA로 서버로 구성하고 Python 으로 클라이언트를 구성하였고요. 단순하게 Member 등록하는 기능을 샘플로 만들어보았습니다.

## 1\. proto생성

우선 proto 파일을 생성해야 합니다.

```
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ks.grpc";
option java_outer_classname = "Member";

package grpc;

// enum 정의
enum Gender {
  MALE = 0;
  FEMALE = 1;
}

// message = object 정의
message Class {
  // int32 -> int(java)
  int32 classNo = 1;
  // string -> String(java)
  string className = 2;
}
message MemberRequest {
  string name = 1;
  // 위에 정의한 enum 값 활용
  Gender gender = 2;
  string phoneNo = 3;
  repeated Class classList = 4;
}
message MemberResponse {
  // int64 -> long(java)
  int64 memberNo = 1;
}

// 자동 생성되는 클래스
service RegisterMember {
  // 클래스 메소드 생성

  //unary : 한 번 호출에 한 번 응답
  rpc Register(MemberRequest) returns (MemberResponse);
  //client stream : 클라이언트에서 스트림으로 전달, 서버에서는 한번 응답
  rpc RegisterClientStream(stream MemberRequest) returns (MemberResponse);
  //server stream : 클라이언트에서 한 번 전달, 서버에서 스트림으로 응답
  rpc RegisterServerStream(MemberRequest) returns (stream MemberResponse);
  //bi stream : 클라이언트/서버 모두 스트림으로 응답
  rpc RegisterBiStream(stream MemberRequest) returns (stream MemberResponse);
}
```

`syntax` 로 사용할 문법을 선언합니다.

`enum`, `message` 로 Object를 정의하고 `service` 로 클래스가 생성됩니다.
`service` 안에는 메소드들을 선언해주면 되는데, 여기서 stream 문구를 통해 스트림 사용에 대해서 정의할 수 있습니다.
그에 따라 메소드 통신 방식이 일부 다르게 적용됩니다.

## 2\. source generate

이제 위에 생성한 proto 파일을 통해 서버단인 자바와 파이썬에서 사용할 소스를 생성합니다.
각 언어별로 컴파일러가 존재하여 해당 컴파일러를 사용하여 소스를 생성하면 됩니다.

### JAVA

자바에선 maven 기반으로 소스를 생성합니다.
proto 파일을 `src/main/proto` 폴더에 위치 해준 후에

grpc 용 dependency 를 추가하였고

```xml
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>1.18.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>1.18.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>1.18.0</version>
        </dependency>
```

build 설정을 통해 compile 시점에 소스가 생성됩니다.
소스는 target 폴더 하위에 생성됩니다.

```xml
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.4.1.Final</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.5.0</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.3.0:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.4.0:exe:${os.detected.classifier}</pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
```

![5.png](https://image.toast.com/aaaadh/real/2020/techblog/5%2855%29.png)

### python

클라이언트 샘플로 사용할 파이썬에서도 소스 생성을 하기 위한 준비가 필요합니다.
python 3.5 이상 버전이 필요하며 pip 버전 9.0.1 이상이 필요합니다.

라이브러리 설치가 우선 진행된 후

```
$ python -m pip install grpcio
$ python -m pip install grpcio-tools
```

라이브러리 명령어를 통해 소스를 생성합니다.

```
$ python -m grpc_tools.protoc -I./ --python_out=. --grpc_python_out=. ../sample.proto
```

![6.png](https://image.toast.com/aaaadh/real/2020/techblog/6%2845%29.png)

## 3\. 비지니스 로직 구현

이제 통신을 위한 준비는 모두 완료되었으며 각 어플리케이션에서 비지니스 로직을 구현하기만 하면 됩니다.
클라이언트에서는 메소드를 호출해주기만 하면 되며, 서버는 생성된 서비스를 상속받아 로직를 구현하기만 하면 완료됩니다.

### JAVA Server

빌드되면서 생성된 서비스 클래스를 상속받아 각 메소드를 오버라이드하여 구현하면 서버 로직은 완료된다.

```java
package com.ks.grpc.demo;

import com.ks.grpc.MemberRequest;
import com.ks.grpc.MemberResponse;
import com.ks.grpc.RegisterMemberGrpc;
import io.grpc.stub.StreamObserver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

@Service
public class MemberService extends RegisterMemberGrpc.RegisterMemberImplBase {
    public static Logger logger = LoggerFactory.getLogger(MemberService.class);

    //unary
    @Override
    public void register(MemberRequest request, StreamObserver<MemberResponse> responseObserver) {
        logger.info("### unary Stream : {} ", request.toString());

        MemberResponse response = MemberResponse.newBuilder()
                                                .setMemberNo(1)
                                                .build();
        responseObserver.onNext(response);
        responseObserver.onCompleted();
    }

    //client stream
    @Override
    public StreamObserver<MemberRequest> registerClientStream(StreamObserver<MemberResponse> responseObserver) {
        StreamObserver<MemberRequest> stream = new StreamObserver<MemberRequest>() {
            @Override
            public void onNext(MemberRequest memberRequest) {
                logger.info("### Client Stream : {} ", memberRequest.toString());
            }

            @Override
            public void onError(Throwable throwable) {

            }

            @Override
            public void onCompleted() {
                MemberResponse response = MemberResponse.newBuilder()
                                                        .setMemberNo(1)
                                                        .build();
                responseObserver.onNext(response);
                responseObserver.onCompleted();
            }
        };
        return stream;
    }

    //server stream
    @Override
    public void registerServerStream(MemberRequest request, StreamObserver<MemberResponse> responseObserver) {
        logger.info("### Server Stream : {} ", request.toString());

        MemberResponse response = MemberResponse.newBuilder()
                                                .setMemberNo(1)
                                                .build();
        responseObserver.onNext(response);
        responseObserver.onNext(response.toBuilder().setMemberNo(2).build());
        responseObserver.onCompleted();
    }

    //bi stream
    @Override
    public StreamObserver<MemberRequest> registerBiStream(StreamObserver<MemberResponse> responseObserver) {
        StreamObserver<MemberRequest> stream = new StreamObserver<MemberRequest>() {
            @Override
            public void onNext(MemberRequest memberRequest) {
                logger.info("### Bi Stream : {} ", memberRequest.toString());
            }

            @Override
            public void onError(Throwable throwable) {

            }

            @Override
            public void onCompleted() {
                MemberResponse response = MemberResponse.newBuilder()
                                                        .setMemberNo(1)
                                                        .build();
                responseObserver.onNext(response);
                responseObserver.onNext(response.toBuilder().setMemberNo(2).build());
                responseObserver.onCompleted();
            }
        };
        return stream;
    }
}
```

그리고 gRPC에서 제공하는 서버 객체를 생성하여 port 와 service 를 등록하면 됩니다.

### python client

python 에서는 channel을 생성 후 생성된 stub 소스를 통해 메소드를 호출해주기만 하면 요청이 완료됩니다.

```python
import grpc
import sample_pb2
import sample_pb2_grpc

def run():
	channel = grpc.insecure_channel('localhost:8877')
	stub = sample_pb2_grpc.RegisterMemberStub(channel)
	response = stub.Register(sample_pb2.MemberRequest(name="python",gender=0,phoneNo="01028406735"))
	print("### Response : " + str(response.memberNo))

if __name__ == '__main__':
	run()
```

# 마치며

이전 회사에서 프로젝트 진행시에 gRPC 를 적용해서 사용한 적이 있었습니다. 앱 클라이언트 - 서버 간 통신이었기에 앱 개발자와 서버 개발자 들이 동일한 proto 파일을 공유하여 사용하였었는데, 그때 당시에는 proto 파일 공유시 메일로 주고 받았던 기억이 납니다. 어느 한 파트에서 proto 적용을 누락...할 위험이 있었죠. 
결국 proto 파일을 중앙에서 관리하여 변경된 부분이 누락되지 않도록 추가 작업은 필요하다고 생각합니다.

위와 같이 조사한 것을 팀원들과 공유 후 현재 서비스를 대체할 필요가 있을지 고민해본 결과, 네트워크 통신 비용이 줄어들며 각 모듈이 proto 파일을 통해 정의된 그대로 개발하면 되기 때문에 의사 소통 비용도 줄어들 수 있다고 생각하였습니다. 따라서 새로 구축하게 되는 신규 서비스에서는 활용을 해보면 좋을 것 같으나, 대부분 현재 제가 서비스하고 있는 어플리케이션이 이미 `json-rpc` 를 사용하고 있어 이를 gRPC 로 대체하는 것은 큰 메리트가 없다고 판단하였습니다.
MSA 환경을 구축하고 새로운 모듈을 개발하게 된다면 그때는 적용을 고민을 해보면 좋을 것 같습니다.

마지막으로 gRPC 만으로는 웹 브라우저 클라이언트에서는 사용을 할 수 없기 때문에 `gRPC-web` 이라는 추가 프로젝트가 진행된다고 합니다.
JavaScript 에서 사용할 수 있다고 하며 아직은 Unary와 Server-side streaming 방식만 지원이 된다고 하네요.
[https://github.com/grpc/grpc-web](https://github.com/grpc/grpc-web)

## 참고

* [https://book.systemsapproach.org/e2e/rpc.html](https://book.systemsapproach.org/e2e/rpc.html)
* [https://martin.kleppmann.com/2012/12/05/schema-evolution-in-avro-protocol-buffers-thrift.html](https://martin.kleppmann.com/2012/12/05/schema-evolution-in-avro-protocol-buffers-thrift.html)
* [https://grpc.io](https://grpc.io), 
01:45:48.955 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.955 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.955 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.955 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.956 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.956 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.956 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.956 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.957 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.957 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.957 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.958 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.958 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.958 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.958 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.958 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.959 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.960 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Network Interface 소개, https://meetup.toast.com/posts/260, , , 2020-12-17, , 0, ## 기본사항

Network Interface는 
VPC에서 가상 네트워크 카드를 나타내는 논리적 네트워킹 구성 요소입니다.
다음 속성이 포함될 수 있습니다.
~~~
* 이름
* VPC의 IPv4 주소 범위 중 프라이빗 IPv4 주소
* 한 개의 퍼블릭 IPv4 주소
* 하나 이상의 보안 그룹
* 연결된 장치 종류
* 상태
~~~

## 주요 기능 및 특징
* 인스턴스를 생성할 때 기존에는 신규로 네트워크 인터페이스(NI)를 생성하고, 인스턴스를 삭제하면 해당 NI도 함께 삭제되는 방식만 가능했습니다. NI 관리기능이 생김으로써 별도로 NI를 만들고 이를 사용해서 인스턴스를 생성할 수가 있게 되었습니다.
* 기존에는 인스턴스 생성시에 플로팅IP, 보안그룹을 각각 지정해서 생성을 해야 했습니다. NI 관리기능이 생김으로써 기존에 만들어 두었던 NI를 사용할 경우 플로팅IP 나 보안그룹을 별도 지정하지 않아도 해당 NI와 연결된 플로팅IP, 보안그룹을 사용해서 인스턴스를 생성하게 됩니다.
* 기존 NI를 지정해서 만든 인스턴스의 경우 인스턴스 삭제를 하더라도, 해당 인스턴스를 만들때 사용한 NI가 삭제되지 않습니다.

## 콘솔 기능

### 기존에 만들어 두었던 NI를 이용해서 인스턴스를 생성하기
![1.png](https://image.toast.com/aaaadh/real/2020/techblog/1%2897%29.png)
![2.png](https://image.toast.com/aaaadh/real/2020/techblog/2%2872%29.png)


### Network Interface(NI) 관리기능
* NI 항목보기
![3.png](https://image.toast.com/aaaadh/real/2020/techblog/3%2858%29.png)
![4.png](https://image.toast.com/aaaadh/real/2020/techblog/4%2852%29.png)
<br>
* NI 변경
![5.png](https://image.toast.com/aaaadh/real/2020/techblog/5%2854%29.png)
NI의 subnet, private ip, 보안그룹을 변경할 수 있습니다.
private ip는 지정을 하거나 subnet 범위에서 자동할당이 가능합니다.
<br>
* NI의 플로팅IP 관리
![6.png](https://image.toast.com/aaaadh/real/2020/techblog/6%2844%29.png)
<br>
* NI 삭제
![7.png](https://image.toast.com/aaaadh/real/2020/techblog/7%2836%29.png)
장치에 연결되지 않은 NI만 삭제가 가능합니다., 
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.960 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.961 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.962 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.962 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.962 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 우아한형제들 Developer Relations-Updated, https://woowabros.github.io/devrel/2021/04/28/devrel-updated.html, , , 2021-04-28, , 0, <p>2021년 4월 1일 만우절<br />
거짓말같이 우아한형제들 조직도에 Developer Relations(DR 파트)가 등장합니다. (두둥!) <br /></p>

<p>DR 1호인 제가 입사한지 2년 하고도 3개월, DR 2호가 입사한지 만 1년 그리고 DR 3호의 입사가 한 달 남은 그 시점에서요 :) <br />
저는 늘 우아한형제들 구성원이었지만 조직도에 내가 속한 조직명이 새롭게 등장한다는 건 또 다른 의미의 소속감을 주었습니다.<br /></p>

<p>개인의 감회는 잠시 뒤로하고 ㅎㅎ<br /></p>

<p>입사 후 Developer Relations 담당자로서 다양한 활동을 알리는 글들을 작성했지만, 이번엔 우아한형제들 Developer Relations에 온전히 초점을 맞춘 글을 작성해 보려고합니다.<br /></p>

<p>아래 글은 우아한형제들 DR담당자의 온보딩 자료를 기반으로 작성되었습니다.
전문을 공개할 수 없는 부분에 대해서는 일부 생략하였으나 최대한 가감 없이 모든 내용을 그대로 전달드리고자 하였으니 마지막 한 줄까지 많은 관심을 부탁드립니다 :) <br /></p>

<p><br /></p>

<hr />

<h2 id="1우아한형제들-developer-relations-dr파트의-목적">1.우아한형제들 Developer Relations (DR파트)의 목적</h2>

<p>우아한형제들 Developer Relations 모든 활동의 목적은 <strong>공통 관심사를 가진 개발자들이 기술 교류 활동을 통해 함께 성장할 수 있도록 격려 및 지원하고 이를 기반으로 우아한형제들 기술 조직의 브랜딩 강화</strong> 하는 데에 있습니다. <br /></p>

<p>이러한 목적을 달성하기 위해 우아한형제들 DR담당자들은 각각의 맡은 분야에서 기존의 프로그램 및 이벤트를 발전 및 확대하고 또 새로운 프로그램들을 고민하고 있는데요, 이러한 모든 활동들은 크게 4가지 분야로 나누어지고 또 각 분야는 세분화된 목적성을 갖게 됩니다. <br />
<br />
<br /></p>

<div style="text-align: center;">
 <img src="/img/2021-04-28/DR1.png" style="width:800px" />
</div>

<p><br />
<br /></p>

<p>물론 우아한형제들 Developer Relations이 주최하고 있는 하나하나의 활동이 단 하나의 목적만을 가져 모든 활동들이 자로 잰 듯이 4가지 카테고리로 분류되는 것은 아닙니다. <br /></p>

<p>예를 들어 매달 진행되는 우아한테크세미나의 경우 내/외부 개발자 분들 모두를 대상으로 하는 교육인 만큼 HRD의 목적을 갖도, 또 External Communications의 목적을 갖기도 합니다. 다만, 이러한 1차 분류가 필요한 이유는  우아한테크세미나를 주최하고 운영하는 입장에서 해당 프로그램의 목적이 HRD와 External Communications이라는 이해를 하기 위함이라고 생각해 주시면 됩니다. <br /><br /></p>

<h2 id="2-우아한형제들-dr파트는-어떤-일들을-하고-있나요"><strong>2. 우아한형제들 DR파트는 어떤 일들을 하고 있나요?</strong></h2>

<p>앞서 말씀드린 것처럼 4가지 카테고리로 깔끔하게 나눠지진 않겠지만, 이해를 돕기위해 각각의 활동들의 가장 큰 목적을 기준으로 각각의 카테고리안에서 어떤 활동들이 진행되고 있는지 대표 활동들만 선정하여 소개해 드리겠습니다.
<br />
<br /></p>
<ul>
  <li><strong>HR</strong>
    <ul>
      <li>우아한테크캠프 (신입대상) : 매년 여름방학 진행되는  채용 연계형 교육프로그램</li>
      <li>우아한테크캠프 Pro (재직자 대상) : 4년 이상 경력 개발자(재직자)를 대상으로 진행되는 채용 연계형 교육프로그램</li>
    </ul>
  </li>
  <li><strong>HRD</strong>
    <ul>
      <li>우아한테크세미나 : 매달 진행되는 기술세미나.  내/외부 개발자 원하는 누구나 참여 가능하며, 세미나 연사 또한 소속을 제한하지 않고 섭외하고 있습니다.</li>
      <li>우아한테크러닝 : 연 2회 진행되는 4주-8주 단위의 단기 교육 프로그램. 테크세미나와 마찬가지로 참여와 연사 섭외에 소속을 제한하지 않고있습니다.</li>
    </ul>
  </li>
  <li><strong>Internal Communications</strong>
    <ul>
      <li>우아한테크토크 : 비정기적으로 진행되는 내부 기술 세미나</li>
      <li>DR서포터즈 : DR활동을 응원하는 구성원들의 모임</li>
      <li>우아톤 : 개발 기획 디자인이 함께하는 우아한형제들 내부 해커톤</li>
    </ul>
  </li>
  <li><strong>External Communications</strong>
    <ul>
      <li>우아콘 : 매년 1회 진행되는 기술 컨퍼런스</li>
      <li>외부 행사 후원 : 외부 커뮤니티 및 컨퍼런스에 후원사로 참여</li>
      <li>기술블로그 &amp; SNS 채널 관리 : 기술조직의 소식을 알리기 위한 컨텐츠 제작 및 홍보</li>
    </ul>
  </li>
</ul>

<h2 id="3-수많은-이벤트와-프로그램-어떤-사람들을-대상으로-진행되나요">3. 수많은 이벤트와 프로그램, 어떤 사람들을 대상으로 진행되나요?</h2>

<p>위에 이벤트 및 프로그램별로 참여 대상자를 간략하게 공유드리긴 하였으나, 큰 의미의 DR 활동이 대상으로 하고 있는 인원은 아래 처럼 구분해 볼 수 있습니다.</p>

<p><br /><br /></p>
<div style="text-align: center;">
 <img src="/img/2021-04-28/DR2.png" style="width:800px" />
</div>

<p><br /><br /></p>

<p>우아한형제들의 DR 활동이 대상으로 하고 있는 사람들은 사실상 내/외부 개발자 모두라고 할 수 있는데요, DR활동이 대상으로 하고 있는 인원이 달라짐에 따라 활동의 성격과 목적 또한 달라지게 됩니다.</p>

<p>예를들어 하나의 External Communications 활성화를 위한 이벤트를 기획함에 있어서도 <br /></p>

<ol>
  <li>우아한형제들 기술조직에 대해 많이 알고 있지 않은 Unknown에 속하는 인원들을 우아한형제들 DR 플랫폼의 Visitor로 전환하기 위한 Attract 활동인지</li>
  <li>우아한형제들의 기술조직에 대해 관심을 갖고 있는 Contacts로 구분되는 인원을 대상으로 할 때 우아한형제들 입사 지원으로 이끌수 있는 Convert 활동인지</li>
</ol>

<p>에 따라 이벤트의 구성과 측정 가능한 성과가 달라지게 됩니다. <br /></p>

<h2 id="4-dr파트-팀이되어-함께-일하는-방식은">4. DR파트 팀이되어 함께 일하는 방식은?</h2>
<p>이런 활동들을 함께 이끌어 나가야 하는 DR 담당자 1,2,3호는 어떻게 함께 일하게 될까요? <br /></p>

<p><br />
<br /></p>

<div style="text-align: center;">
 <img src="/img/2021-04-28/DR3.png" style="width:800px" />
</div>

<p><br />
<br /></p>

<p>DR 담당자들은 각각의 전문 분야를 기점으로 활동을 기획하고 또 확대해 나갑니다.
해당 전문 분야는 수행하는 활동보다는 대상으로하는 인원에 초점이 맞추어져 있으며 각각 담당하는 분야별 성과 측정 지표를 담당자가 직접 설계합니다.  <br /></p>

<p>팀으로 일하는 방식에 대해서는 구상정도의 수준이며 이제 막 하나의 조직으로 함께 일하게 된 담당자들이 함께 더 많은 이야기를 나누고 고민을 공유하여 다듬어나갈 부분이라 이 정도의 소개로 마무리하도록 하겠습니다 :) <br />
<br /></p>

<hr />

<p><br />
<br /></p>

<p>DR 업무와 조직에 대한 고민은 2020 1월 DR 2호 입사를 두 달 정도 앞둔 시점에 시작되었습니다.<br />
오롯이 저의 머릿속에만 있던 파편화된 업무들 각각의 목적, 1년간 자리가 잡힌 각 업무들의 진행 방식 그리고 현재 시점 진행 상황 등등이 제 고민의 시작이었어요.<br /></p>

<p>처음엔 단순히 새롭게 DR 담당자로 함께 일하게 될 입사자 분께 일종의 “인수인계서”를 작성해보자 라고 시작했던 한 두 장의 끄적거림이 새로운 CTO님의 코멘트와 가이드 그리고 DR 2호와 머리를 맞대고 고민한 시간 덕분에 이렇게 하나의 글로 작성할 분량이 되어 마침내 공유드릴 수 있게 되었습니다. <br /></p>

<p>지난 2년간 내/외부 다양한 변화에 발맞춰 성장해온 우아한형제들의 Developer Relations,
앞으로의 2년 5년 그리고 10년이 더더욱 기대됩니다 :) <br /></p>
, 
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.963 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.964 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.966 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@4598e709, maxRows=0, fetchSize=0, flags=1,047
01:45:48.966 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: [모집] 2021우아한테크캠프 4기, https://woowabros.github.io/devrel/2021/04/20/woowa-techcamp_4th.html, , , 2021-04-20, , 0, <blockquote>
  <p>우아한개발자가 되고 싶은 이들을 위한 우아한테크캠프 4기를 소개합니다.<br />
우아한테크캠프는 여름 방학기간을 활용해 진행되는 채용 연계형 교육 프로그램입니다. <br />
교육은 사회적 상황에 따라 온라인 혹은 온/오프라인 병행 등 안전하고 유연한 교육방식을 준비하고 있습니다.</p>
</blockquote>

<p><br />
<br />
<br /></p>

<div style="text-align: center;">

  <img src="/img/2021-04-20/poster.jpg" style="width:800px" />

</div>

<p><br /></p>

<h2 id="올해-4회차를-맞는-우아한테크캠프는-어떤-특징이-있나">올해 4회차를 맞는 우아한테크캠프는 어떤 특징이 있나?</h2>
<p>🏝 <strong>여름방학 8-9주 동안</strong> <br />
👩🏽‍💻🧑🏽‍💻 <strong>자기주도형 프로젝트 기반 교육</strong> <br />
🤝 <strong>우아한개발자와 함께하는 멘토링 그리고 특강이 팡팡</strong><br />
📍 <strong>채용연계까지</strong> <br /></p>

<p><br /></p>

<hr />
<p><br /></p>

<h2 id="웹프론트엔드-중심으로-백엔드를-함께-배우는-자기-주도형-풀스택-과정">웹프론트엔드 중심으로 백엔드를 함께 배우는 자기 주도형 풀스택 과정</h2>
<p>이번 우아한테크캠프는 4기는 웹프론트엔트 중심으로 백엔드를 함께 배우는 자기 주도형 풀스택 과정입니다. 8주 동안 학습 내용을 바탕으로 우아한형제들의 서비스를 커스터마이징한 몇 개의 미니 프로젝트를 수행하며, 실제 서비스를 만들어보는 학습을 통해 하나의 서비스를 이루는 전체 데이터의 흐름과 시스템의 구조를 파악할 수 있는 것을 목표로 진행합니다. <br />
<br />
<br />
아래는 참고를 위해 공유드리는 지난 2020 우아한테크캠프에서 실제 수행한 프로젝트 중 하나인 “가계부 모바일웹” 입니다. <br />
우아한테크캠프에서 진행될 과제 샘플을 미리 보실 수 있습니다. 😉<br /><br />
<strong><a href="https://bank.woowahan.dev">가계부 반응형 웹 프로젝트</a> (3기 장해민, 정진혁 프로젝트)</strong>
<br />
<br />
<br /></p>

<h3 id="우아한테크캠프-4기-커리큘럼">우아한테크캠프 4기 커리큘럼</h3>

<div style="text-align: center;">

  <img src="/img/2021-04-20/plan.PNG" style="width:800px" />

</div>

<p><br />
<br />
이번 우아한테크캠프 교육은 1기 우아한테크캠프부터 매년 함께 해주시는 코드스쿼드 윤지수님이 웹프론트엔드를 맡아서 진행해 주실 예정이고, 백엔드는 정호영님이 맡아서 진행하실 예정입니다.
윤지수님의 교육 관련해서는 <a href="https://codesquad-yoda.medium.com/%EC%9B%B9-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A4%80%EB%B9%84%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-5ac7bb6ff2a9">웹프론트엔드 개발자, 어떻게 준비해야할까?</a> 라는 글을 읽어 보시고, 정호영님의 교육 관련해서는 <a href="https://codesquad-yoda.medium.com/%EC%A7%80%EC%8B%9D%EC%9D%98-%EC%A0%80%EC%A3%BC%EB%A5%BC-%EA%B7%B9%EB%B3%B5%ED%95%98%EA%B8%B0-bb9a697b1bf5">지식의 저주를 극복하기</a> 를 읽어 보시길 권해 드립니다.
<br />
<br /></p>

<h2 id="우아한테크캠프는-개발자로서의-성장을-꿈꾸는-여러분을-기다립니다">우아한테크캠프는 개발자로서의 성장을 꿈꾸는 여러분을 기다립니다.</h2>
<p>우아한테크캠프는 우아한형제들의 신입개발자 채용 과정이기도 하지만, 개발자가 되고자 하는 분들 누구나 환영하는 참가 자체만으로도 유익한 교육 프로그램, 캠프가 되고자 합니다. <br />
우아한형제들이라는 회사에서 우아한개발자가 되고자하는 분들을는 포함하여, 개발자로서의 성장을 위해 어떤 것들이 필요하고 어떤 것을 배워야 하는지 궁금하고 경험해보고 싶은 분들을 환영합니다. <br />
지난 캠프들과 마찬가지로 학력에 대한 제한은 전혀 없습니다. 이미 2-3년의 경력을 가진 분들이 지원하시는 것도 문제가 없습니다. <br />
프로그래밍에 대한 기본기와 열정만 있다면 누구나 지원 가능하지만, 7/5부터 8/31까지 우아한테크캠프에 풀타임 참여가 가능해야 하고, 2021년 하반기에 취업이 가능한 상태여야 합니다.
<br />
<br /></p>

<h2 id="우아한개발자와-함께하는-우아한테크캠프">우아한개발자와 함께하는 우아한테크캠프</h2>
<p>우아한테크캠프 과정에서 우아한형제들에 재직중인 선배 개발자와 함께할 수 있는 여러 기회를 마련할 예정입니다. 우아한개발자 멘토와 함께하는 멘토링을 통해 캠프에 참여하며 겪는 여러 어려움이나 고민을 나눌 것이며, 프로젝트 데모데이에도 우아한개발자를 초대하여 함께 프로젝트를 둘러보며 대화를 나누고 조언을 구할 수도 있습니다. <br />
또한 신입개발자를 위한 도움되는 내용의 특강과 우아한형제들의 문화를 엿볼 수 있는 특강들을 준비하고 있습니다. <br />
우아한테크캠프에 대해 더 궁금하신 점은 지난 우아한테크캠프 후기글을 통해 보다 상세히 확인하실 수 있습니다. 😊  <br />
<br />
<strong>2020 우아한테크캠프 운영일기</strong> <br />
<a href="https://woowabros.github.io/devrel/2020/08/14/tecmpcamp_july_1.html">2020 우아한테크캠프 3기 7월의 일기</a> <br />
<a href="https://woowabros.github.io/devrel/2020/09/08/techcampaugust.html">2020 우아한테크캠프 3기 8월의 일기</a> <br />
<a href="https://woowabros.github.io/devrel/2020/08/19/techcamp_july_2.html">우아한테크캠프 인턴들의 7월의 회고</a> <br />
<a href="https://woowabros.github.io/devrel/2020/09/14/techcamp3blog.html">우아한테크캠프 인턴들의 8월의 마지막 회고</a>
<br />
<br /></p>
<h2 id="우아한테크캠프-faq">우아한테크캠프 FAQ</h2>
<p><strong>Q )</strong> 코로나19 영향으로 일정이 조정/취소될 수 있나요? <br />
<strong>A )</strong>  신입 개발자 양성이라는 목적과 취지에 따라, 계획했던 대로 진행할 예정입니다. 사회적 거리두기 기간이 지속될 경우를 고려하여 모든 가능성을 열어두고 우아한테크캠프의 진행 방식을 구상하고 있습니다. <br />
캠프 선발과정 및 교육과정은 교육생분들께 가장 안전하고도 효과적인 방식이 될 것이며, 상황에 따라 온/오프라인을 병행 혹은 전체 과정을 온라인으로 진행하는 등 유연한 진행방식을 준비중입니다. <br />
<br />
<strong>Q )</strong> 코딩테스트는 응시 언어는? <br />
<strong>A )</strong> 1차 테스트는 알고리즘 및 구조 테스트로 자바스크립트를 이용하여 수행하며, 2차 테스트는 과제 형식으로 자바스크립트 &amp; 타입스크립트 중 선택하여 수행할 수 있습니다. <br />
<br />
<strong>Q )</strong> 우아한테크캠프 운영 시간 및 장소는? <br />
<strong>A )</strong> 월요일 1시~6시, 화~금 9시 30분 6시. 우아한테크캠프를 위한 우아한형제들 내 교육장을 마련할 예정이지만, 구체적인 교육방식은 추후 확정해서 상세히 안내드리겠습니다. <br />
<br />
<strong>Q )</strong> 우아한테크캠프 참가자에 지급되는 금액이 있나요? <br />
<strong>A )</strong> 월 150만원 활동비를 지급하며, 온라인 진행시 재택근무 지원금 월 10만원을 추가로 지원합니다. <br />
<br />
<strong>Q )</strong> 우아한테크캠프 진행 시 필요한 장비는 지원되나요? <br />
<strong>A )</strong> 장비는 회사에서 대여하여 캠프 시작시에 지급합니다. <br />
<br />
<strong>Q )</strong> 우아한테크캠프 참가자에 대한 입사 특전이 있나요? <br />
<strong>A )</strong> 우아한테크캠프를 수료한 분들을 대상으로 우아한형제들 신입개발자 채용전형을 진행할 예정이며, 선발 규모는 정해져 있지 않습니다. <br />
<br />
<strong>Q )</strong> 이전 기수의 우아한테크캠프에 탈락했는데 재지원 가능한가요? <br />
<strong>A )</strong> 지원요건을 충족하신다면 이전 기수 탈락자도 충분히 지원 가능합니다. <br />
<br /></p>

<hr />
<p><br />
우아한테크캠프 지원은 <strong>4월 28일 인재영입페이지</strong>를 통한 서류 접수와 함께 시작됩니다. <br /></p>

<h3 id="지원하러-가기"><a href="https://www.woowahan.com/#/recruit/techcamp">지원하러 가기</a><br /><br /></h3>

<p>기타 문의사항은 <strong>techcamp@woowahan.com</strong> 으로 주시면 보다 신속하고 상세하게 안내받으실 수 있습니다. <br />
많은 지원 부탁드립니다.</p>

, 
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:48.967 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:48.967 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:48.967 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.969 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.969 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.970 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.971 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.972 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 퇴사 부검, https://woowabros.github.io/experience/2021/04/18/autopsy.html, , , 2021-04-18, , 0, <p>안녕하세요 (구) <a href="https://woowahan.oopy.io/60a06399-3f95-4fec-a436-000ad6baff40">배달의민족 정산시스템팀 개발자</a>, (현) <a href="https://www.youtube.com/channel/UCSEOUzkGNCT_29EU_vnBYjg">유튜브 크리에이터</a> 이동욱입니다.</p>

<p>제가 2021년 4월 19일(월) 퇴사를 합니다.<br />
퇴사에 대한 이야기를 개인적으로 운영하는 유튜브 채널에 부검 발표를 했는데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/youtube.jpeg" alt="youtube" /></p>

<p>(<a href="https://www.youtube.com/watch?v=kE0qicg9Kl0">배달의민족 개발자 퇴사썰 - 부검 발표 시작합니다.</a>)</p>

<p>이 영상을 보시고 <strong>기술 블로그에 진심이신 분</strong>의 연락을 받고, 이렇게 글로 옮기게 되었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/intro4.png" alt="intro4" /></p>

<p>퇴사 소식을 알리고, 많은 분들이 이제 “남은 팀원들이 얼마나 힘들까” 걱정을 많이 하셨는데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/intro1.png" alt="intro1" /></p>

<p>하지만,</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/intro2.png" alt="intro2" /></p>

<p><img src="https://woowabros.github.io/img/2021-04-19/intro3.png" alt="intro3" /></p>

<p>(<a href="https://www.lezhin.com/ko/comic/revatoon/163">레진코믹스 레바툰</a>)</p>

<p>사실 제가 젤 불쌍하니깐 괜찮습니다.</p>

<p>이미 유튜브 영상을 보신분들은 재탕이지만, 사알짝 추가된 내용이 있으니 추가된 내용이 무엇인지 확인차 다시 읽어주시면 좋을 것 같습니다.</p>

<p>물론 영상이 너무 길어서 다 못보신 분들 역시 텍스트로 빠르게 읽어보실겸 봐주시면 좋을것 같습니다 :)</p>

<h2 id="0-부검-메일발표블로그">0. 부검 메일?발표?블로그?</h2>

<p>넷플릭스의 퇴사 문화로 부검 메일이라는게 있습니다.</p>

<ul>
  <li><a href="https://1boon.kakao.com/ttimes/ttimes_2002250932">넷플릭스의 퇴사 문화 ‘부검 메일’</a></li>
</ul>

<p>회사를 떠나는 직원이 퇴사 당일 동료들에게 아래의 내용을 담아 보내는 메일인데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/netflix.png" alt="netflix" /></p>

<p>이 중에서 이 글에서는 아래 4가지에 대해서만 다뤄볼 예정입니다.</p>

<ol>
  <li>왜 떠나는지</li>
  <li>회사에서 배운 것</li>
  <li>회사에서 아쉬운 점</li>
  <li>앞으로의 계획</li>
</ol>

<blockquote>
  <p>배민의 메세지는 누군가 이 글의 댓글로 남겨주시지 않을까요?</p>
</blockquote>

<p>자 그럼 영상 보다 <strong>조금 더 내용이 추가된</strong> 부검 블로그 시작하겠습니다.</p>

<h2 id="1-왜-떠나는지">1. 왜 떠나는지</h2>

<p>저는 28살에 처음으로 개발자로 월급을 받기 시작했는데요.<br />
어느덧 <strong>35살 / 7년</strong> 경력의 개발자가 되었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/35.png" alt="35" /></p>

<p>많다면 많고, 적다면 적은 그런 커리어인데요.<br />
슬슬 <strong>역산</strong>해서 앞으로 얼마나 내가 왕성하게 활동 할 수 있을지를 고민했습니다.</p>

<p>운동과 식단 관리를 한다해도 10년? 15년 정도이지 않을까 생각을 하게 되었는데요.<br />
물론 그 이상의 나이대에도 열심히 활동하시는 선배 개발자분들이 계시기 때문에 저 역시도 잘 관리하면 그 분들처럼 할 수 있지 않을까 예측도 해봤습니다.</p>

<p>그렇지만 <strong>저는 제가 특별하다고 생각 안해서요</strong>.<br />
그 선배님들이 대단하신 분일 수 있기 때문에 보수적으로 생각했을때 지금 처럼 열정적으로 몰입할 수 있는 (체력이 받쳐주는) 시기는 대략 10~15년으로 잡게 되었습니다.</p>

<p>그렇다면 남은 총알 (창업/이직/직무변경/도전 등등) 은 3발에서 5발정도로 봤는데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/bullet.png" alt="bullet" /></p>

<p><strong>적어도 3발</strong>의 총알이 남아있다면, <strong>1발은 오발</strong>나도 되지 않을까라고 생각하게 되었습니다.<br />
그래서 어차피 오발나도 된다면, <strong>쏘고 싶은 과녁에 쏘자</strong>고 결심합니다.</p>

<p>요즘 같은 시기에는 저처럼 미드레벨 ~ 시니어레벨의 개발자들은 가만히 있어도 수많은 기회들이 옵니다.</p>

<p>여기서의 기회란 단순히 링크드인에서 무차별적인 메세지가 아니라, 실제 타 회사의 개발팀장님들이나 그 이상의 직급을 가진분 들과의 접촉 혹은 같이 일했던 지인들의 추천 등 직접적인 기회를 이야기 합니다.</p>

<p>물론 회사에 남아서 더 활약하고 더 높은 직책으로 가는 것을 노려보는 것도 기회가 될 수도 있습니다.</p>

<p>이렇게 기회가 많은 상황에서 <strong>커리어의 목표가 없는</strong> 저는 선택의 기준마저 없다면 제 자리에서 아무것도 못하는 바보가 됩니다.</p>

<p>그래서 항상 선택의 기준을 가지고 있었는데요.<br />
그 기준은 <strong>나중에 할 수 있는 이야기가 많은 것을 선택하자</strong> 입니다.</p>

<p>저는 나이가 들어가면서, 커리어를 쌓아가면서 계속해서 더 많은 이야기를 쌓고 싶습니다.<br />
(이건 뭐 뚜렷한 목표라고 하기엔 애매하죠?)</p>

<p>그래서 이런 간단하지만, 단단한 기준 하나만을 두고 커리어를 계속해서 쌓아왔습니다.</p>

<p>35살인 지금, 더 많은 이야기를 쌓을 수 있는 선택은 아래 후술할 아주 작은 회사로 이직하는 것 이였습니다.</p>

<p>그럼 왜 <strong>떠나는게 더 많은 이야기</strong>가 되는지 설명드리기 위해서 잠깐 과거로 돌아가보겠습니다.</p>

<h3 id="우아한형제들-투자-라운드">우아한형제들 투자 라운드</h3>

<p>아래는 현 소속사인 우아한형제들의 투자 라운드인데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/woowa1.png" alt="woowa1" /></p>

<p>(<a href="https://thevc.kr/WoowaBrothers">우아한형제들 투자 라운드 - thevc</a>)</p>

<p>많은 스타트업들이 부러워할 만큼 매년 좋은 가치의 투자를 이끌어 왔다고 개인적으로 생각합니다.</p>

<p>여기서 제가 합류한 시기는 <strong>2016년</strong>입니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/woowa2.png" alt="woowa2" /></p>

<p>보시다시피 <strong>시리즈E</strong> 시점에 합류를 하게 됩니다.</p>

<p>2016년 배민이라 하면, 사실 <strong>시스템이나 프로세스 등이 굉장히 부족한 시기</strong>인데요.<br />
장애대응이나 시스템설계나 시스템 운영부분들이 시리즈E 라고 보기에는 부족한게 많았습니다.</p>

<p>그럼에도 투자 라운드가 <strong>시리즈 E면 이미 스타트업이라 부르기에는 너무 큰 규모</strong>입니다.</p>

<blockquote>
  <p>요즘은 시리즈 B,C,D 만 되어도 Exit 하거나 네카라쿠배의 인력들을 흡수하는 경우를 자주 봅니다.</p>
</blockquote>

<p>이미 기존의 네이버, 카카오, SK플래닛 등의 <strong>대기업 개발자분들의 연봉을 맞춰줄만큼</strong>의 현금흐름을 갖춘 라운드였기 때문에 저한테 있어서는 <strong>스타트업을 경험했다고 보기는 어려웠습니다</strong>.</p>

<p>제가 진짜 스타트업을 경험해본 이야기를 하려면 <strong>Seed ~ 시리즈D</strong> 까지의 과정을 경험해봐야만 한다고 생각했습니다.<br />
그래야 우아한형제들의 경험까지 합쳐서 <strong>스타트업 전체 Cycle을 경험</strong>해 본 것이기 때문입니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/woowa3.png" alt="woowa3" /></p>

<p>아무런 <strong>리스크를 감내하지않고</strong> 누군가에게 도전이란 단어를 이야기하거나, 나도 도전해봐서 안다 라고 충고하는 것은 기만이라고 생각합니다.</p>

<p>라떼를 이야기하는 꼰대가 되고싶진 않지만, 그럼에도 <strong>들려줄 이야기가 많은 어른</strong>이 되고싶기에 저는 좀 더 초기 라운드의 스타트업 경험은 필수라고 계속 생각해왔습니다.</p>

<p>여기서 주변분들은 아래와 같은 질문을 하시는데요.</p>

<h3 id="q-그럼-왜-exit-2019년에-떠나지-않았는지">Q. 그럼 왜 Exit (2019년)에 떠나지 않았는지?</h3>

<p>2019년의 정산시스템 상황을 돌이켜보면 다음과 같은 <strong>기술 부채들</strong>이 남아 있었습니다.</p>

<ul>
  <li>핀테크 도메인(정산) 으로 인한 망분리 환경</li>
  <li>IDC 인프라 (DB / 서버를 팀에서 직접 관리)</li>
  <li>각종 핀테크 관련 회계/보안감사</li>
  <li>초기 개편으로 인한 레거시 프레임워크</li>
  <li>빠른 릴리즈를 위해 묵혀둔 성능 이슈들</li>
  <li>외부에서 매력적으로 느끼지 않는 도메인</li>
</ul>

<p>어느 서비스 개발자라 하더라도 개발 하고 싶은 환경은 아니였습니다.<br />
특히나 <strong>망분리 환경에서 정산 개발을 해보고 싶어요</strong>라고 지원하는 사람들은 주변에서 1명도 못봤기 때문에 <strong>기술부채와 개발팀 브랜딩</strong>은 저한테 있어서는 숙제와 같이 남아있었는데요.</p>

<p>이 상황에서 이직을 한다는 것은 <strong>도망친다는 느낌이 강했습니다</strong>.</p>

<p>“그것 보라고 너도 도망치는거 아니냐고”<br />
“너도 환경이 싫은데 어디서 약을 파냐고”<br />
“정산 개발자들은 고인물들만 하는거라고”</p>

<p>등등의 이야기들을 주변에서 듣는 것도 싫었고, <strong>저 스스로도 그런 생각을 하게 되는건 싫었기 때문</strong>입니다.</p>

<p>그래서 그 어느 팀보다 <strong>개발과 일을 하기 좋은 환경을 만들고</strong> 회사와 팀을 졸업하고 싶었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/berserk.png" alt="berserk" /></p>

<p>그래서 2020년 동안은 <strong>졸업 조건을 채우는 시간</strong>이였습니다.</p>

<ul>
  <li>AWS 클라우드 100% 이전 완료
    <ul>
      <li>펌뱅킹을 통해 <strong>직접 정산</strong>하는 정산시스템이 100% AWS 클라우드로 인프라 환경이 이전되었습니다.</li>
    </ul>
  </li>
  <li>수동 운영 자동화
    <ul>
      <li>100% 다 전환은 못했지만, 많은 부분을 어드민에서 직접 조회/다운로드 하도록 개선</li>
    </ul>
  </li>
  <li>모던 프레임워크 전환
    <ul>
      <li>정산시스템은 회사에서 3번째로 PHP에서 Spring + JPA로 전환된 프로젝트이다보니, 이때 <strong>사내 프레임워크</strong>를 적용했습니다.</li>
      <li>당시에 <a href="https://zetawiki.com/wiki/%EA%B0%9C%EB%B0%A5_%EB%A8%B9%EA%B8%B0">개밥먹기</a> 해야한다는 판단으로 선택했는데, 어느새 사내에서는 해당 프레임워크를 매니지하지 않고 있어서 신규 입사자가 올 때마다 큰 허들이였습니다.</li>
      <li>올해 5월이면 이 부분 역시 모던 프레임워크로 전환이 됩니다.</li>
    </ul>
  </li>
  <li>쿼리/배치 성능 개선
    <ul>
      <li>쿼리 배치 성능 개선은 이후에 <a href="https://www.youtube.com/watch?v=zMAX7g6rO_Y">우아콘</a>에서 사례를 공유하기도 했습니다</li>
    </ul>
  </li>
  <li>개발팀 채용 브랜딩 개선
    <ul>
      <li><a href="https://woowahan.oopy.io/60a06399-3f95-4fec-a436-000ad6baff40">노션</a></li>
      <li><a href="https://www.youtube.com/watch?v=PWi5_5RG51s">유튜브-캐치TV</a></li>
      <li><a href="https://www.youtube.com/watch?v=V9AGvwPmnZU">유튜브-EO</a></li>
      <li>이 외에도 아래의 활동 등을 진행했습니다.
        <ul>
          <li>팀원 전체에게 1년에 1회 이상 기술블로그 작성 요구</li>
          <li>우아한테크코스을 위한 팀 홍보용 PPT 준비</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>개인적으로는 99층까지의 던전을 끝까지 클리어 하진 못했지만, <strong>80층까지는 클리어</strong>했다고 생각해서 이제는 졸업해도 되겠다고 판단하게 되었습니다.</p>

<h2 id="2-회사에서-배운-것">2. 회사에서 배운 것</h2>

<p>당연한 이야기겠지만, 하루 주문 10만건에서 300만건까지 폭발적으로 성장하는 것을 경험했기 때문에 기술적인 성장을 많이 할 수 있었습니다.</p>

<p>그리고 그에 맞춰 <a href="https://jojoldu.github.io/">제 이력서</a>에도 쓸 수 있는 것들이 참 많았고요.</p>

<p>다만 이건 꼭 우아한형제들에서만 배울 수 있는 것은 아니기 때문에 제가 지난 4년의 시간동안 우아한형제들에서 배운 것들을 이야기 하고 싶습니다.</p>

<p>총 5가지인데요.</p>

<ol>
  <li>그 시절엔 그게 맞았다.</li>
  <li>회사와 개인의 성장속도는 비례하지 않는다.</li>
  <li>근속 연수는 직급을 보장하지 않는다.</li>
  <li>잘못된 사람을 뽑으면 잘하는 사람들이 퇴사한다.</li>
  <li>조직 구조에 따라 역량이 차이날 수도 있다.</li>
</ol>

<p>이 5가지에 대해서 좀 더 자세히 이야기해보겠습니다.</p>

<h3 id="2-1-그-시절엔-그게-맞았다">2-1. 그 시절엔 그게 맞았다</h3>

<p>제가 합류한 2016년의 우아한형제들의 시스템 구조는 객관적으로 봐도 <strong>확장 가능한 구조</strong>로 보기에는 어려웠습니다.<br />
어찌보면 당연하겠지만, 스타트업의 빠른 속도를 따라가기 위해서는 개발자들은 빠른 출시에만 초점을 맞추기 때문입니다.<br />
출시를 위해 기술적인 부채들과 확장성 없는 코드들의 개선은 <strong>출시 이후</strong>로 미루게 되는데요.<br />
이렇게 한번 미룬 부채들은, <strong>결국은 끝까지 부채로 남아 있었습니다</strong>.</p>

<p>출시하고 나면 부채를 해소할 시간이라는게 스타트업에 있을리가 없겠죠?</p>

<p>특히 투자를 받기 시작하면, 이제 본인이 원하지 않더라도 <strong>폭발적 성장을 요구 받기 때문에</strong> 시리즈 A ~ C 사이에는 서비스의 성장에만 초점을 맞추게 됩니다.</p>

<p>서비스만 성장한 것이지 시스템이 성장하진 못한 상태였기 때문에 제가 합류한 시점에는 이미 엄청나게 기술적 부채가 쌓여 있었고, <strong>도저히 확장이 불가능한 형태의 도메인과 아키텍처로 가득</strong>한 시기였습니다.</p>

<p>당시의 저는 이 구조를 보고 불평/불만을 엄청 쏟아냈었는데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/learn1.png" alt="learn1" /></p>

<p>(<a href="https://www.instagram.com/p/CLvTT8eHC0-/">개발자경수님의 인스타툰</a>)</p>

<p>막상 제가 정산시스템을 개편하고 3년정도 지나고나니 당시에는 최선이였던 선택들이 이제는 잘못 되었음을 깨닫게 됩니다.</p>

<p>그리고 그 사이에 <strong>서비스의 정책이 수십번 변하는 것</strong>을 보면서 어쩔수 없다는 것 역시 알게 됩니다.</p>

<p>그래서 그 당시의 기술적 부채들 역시도 같은 상황이였지 않을까 수긍할 수 있었습니다.</p>

<p>그리고 결국은 저를 비롯한 많은 개발자들이 이직해올때 연봉을 맞춰줄 수 있었던 것은 <strong>이 시스템으로 돈을 벌었기 때문</strong>입니다.<br />
그래서 지금은 그런 레거시 시스템을 좀 더 애정있게 바라봅니다.<br />
(물론 가끔은 끓어오르는 화를 삭히기도 합니다.)</p>

<h3 id="2-2-회사와-개인의-성장속도는-비례하지-않는다">2-2. 회사와 개인의 성장속도는 비례하지 않는다</h3>

<p>이 부분이 우아한형제들에서 가장 크게 배운 점인데요.</p>

<p>“회사의 성장에 비례하는 건 회사의 가치이지, 개인의 성장은 아니다.”</p>

<p>보통 많은 스타트업 종사자분들이 회사가 폭발적으로 성장하는 만큼 본인 역시 폭발적으로 성장한다고 <strong>오해</strong>하시는데요.</p>

<p>저는 절대로 그렇지 않다는 것을 배웠습니다.<br />
회사가 10배, 100배 성장했다고 해서 <strong>개인이 같은 시간 동안 그만큼 성장하는 경우는 거의 없었습니다</strong>.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/learn2.png" alt="learn2" /></p>

<p>(<a href="https://www.youtube.com/watch?v=drBdnrlsq9o">존잡생각</a>)</p>

<p>이렇게 폭발적으로 성장하는 스타트업에서는 개인이 깊은 고민을 하기 보다는 <strong>가장 익숙한 방법으로 빠르게 출시</strong>하는 것이 중요하기 때문입니다.</p>

<p>가장 익숙한 방법으로 빠른 출시만 몇 년을 하다보면 <strong>규모가 커진 서비스에서의 장애/운영 역량</strong>은 갖춰지지 않은 경우가 빈번합니다.</p>

<blockquote>
  <p>물론 원래부터 그런 경험과 역량을 갖추고 초기 스타트업에 합류한 경우는 다릅니다.</p>
</blockquote>

<p>2~3년 전에 했던 방법으로는 더이상 이 규모의 서비스에서는 통하지 않는데, 그것 외에는 해본 경험이 없기 때문에 <strong>이제는 본인의 자리가 없음</strong>을 느끼게 되는데요.</p>

<p>사실 이 이야기는 대부분의 초기 스타트업 근무자분들이 경험하는 부분입니다.</p>

<p>아래는 한동안 SNS에서 크게 공유가 된 글인데요.<br />
위에서 언급한 문제를 적나라하게 이야기합니다.</p>

<ul>
  <li><a href="https://kimchihill.com/2020/03/26/kr-growing-pains-the-law-of-startup-physics-and-psychological-injury/">스타트업 성장의 법칙과 초기 멤버들의 심리적 부상, 그리고 성장통</a></li>
</ul>

<blockquote>
  <p>당신의 야구팀이 하위권을 전전하다, 새로운 구단주를 영입하고, 재무적인 서포트와 함께 선수를 보강하여 플레이오프 진출을 눈앞에 두고 있다고 가정하자.<br />
이전에 클린업 히터 (4번타자)를 맡던 당신은 애석하게도 부상을 당한 상황이며, <strong>새롭게 보강된 선수로 인해 더 이상 원래의 포지션에서 뛸 수 없는</strong> 상황이다.<br />
…
속이 곪는 당신을 뒤로 하고 새롭게 결성된 팀은 빠르게 결속하고 메이저리그 우승이라는 목표를 향해 앞만 보고 전진하는 상황이다.<br />
당신은 은퇴하거나 다른 팀으로 이적하겠는가?<br />
혹은 <strong>하위 타선에 서게 되더라도 우승 반지를 이 팀에서</strong> 기여코 끼고야 말겠는가?</p>
</blockquote>

<p>위 내용보다 좀 더 잔인한 점은 <strong>별도의 부상이 없더라도 역량의 문제로 주전에서 후보로 빠질 수도 있다</strong>는 것입니다.</p>

<p>그래서 회사의 성장과 무관하게 <strong>본인 스스로 성장을 챙기지 않으면</strong> 이후에 본인의 자리는 더이상 없을 수 있다는 점을 알게 됐습니다.</p>

<p>흔히 스타트업에 합류 하는 것을 <strong>로켓에 올라타는 것</strong>으로 비유하는데요.<br />
로켓이 보인다면 <strong>자리가 어디가 됐든 올라타라</strong>라는 말은 스타트업에서 굉장히 유명한 문구입니다.<br />
하지만 <strong>회사가 성장하는만큼 본인이 성장하지 못한다면</strong> 본인이 앉은 자리는 로켓의 연료통일 수도 있습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/rocket.jpeg" alt="rocket" /></p>

<p>저는 회사가 성장하는 만큼의 속도를 따라잡기 위해 노력하는 것을 좋아하는데요.<br />
그 부분이 잘맞아서 오랫동안 회사의 일이 즐거울 수 있었지만, 그렇지 않은 분들에게는 작은 스타트업의 합류에 대해서 한번쯤은 고민해볼 필요는 있다고 생각합니다.</p>

<h3 id="2-3-근속-연수는-직급을-보장하지-않는다">2-3. 근속 연수는 직급을 보장하지 않는다</h3>

<p>수천명이 일하는 조직에서는 개개인의 역량이 크게 드러나지 않지만, 전체 개발자 (인프라/백엔드/프론트/앱/DBA/보안/QA 등)가 100명도 안되는 시점에 합류를 하면 개개인의 실력은 적나라할 정도로 드러나게 됩니다.</p>

<p>그래서 누가 잘하는 사람인지 아닌지 알게되는데요.<br />
결론적으로는 <strong>연차, 출신회사는 실력과 크게 상관이 없었습니다</strong>.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/learn3.png" alt="learn3" /></p>

<p>(<a href="https://comic.naver.com/webtoon/list.nhn?titleId=637931">전자오락수호대</a>)</p>

<p>낮은 연차임에도 본인만의 학습 방법을 갖추고 있어 무슨 문제든 해결할 수 있는 믿음을 주는 주니어 분이 있는 반면, 10년전 코드와 방법으로 복붙만 하다가 결국에는 다른 사람이 코드를 다 개선하게 만드는 시니어 분도 있었습니다.<br />
(물론 연차에 맞게 역량을 발휘하는 분들도 많았습니다.)</p>

<p>수많은 유형의 개발자들과 TF도 하고, 협업도 하면서 연차와 출신 회사에 대해서는 예전보다는 훨씬 덜 보게 되었습니다.</p>

<blockquote>
  <p>물론 그렇다고해서 그간 쌓아오신 커리어를 완전히 무시할수는 없습니다.</p>
</blockquote>

<p>또 한가지 배운게 있다면, 회사의 인재상을 파악하는 방법입니다.<br />
과거에는 회사의 진급을 공개해주어 모두가 축하하는 문화가 있었는데요.<br />
이들을 보면 회사가 생각하는 인재상을 볼 수 있었습니다.<br />
그래서 이들이 잘하는 사람이라는 것을 쉽게 알 수 있어 <strong>같이 일하지 않더라도 이들의 장점을 배울 수 있었습니다</strong>.</p>

<p>“왜 회사에서는 저 분들을 승진시켰을까?”<br />
“내가 모르는 저 분들의 장점은 무엇일까?”<br />
“저 분들은 어떻게 일을 하고 학습할까?”<br />
“내가 저 분들보다 부족한 것은 뭘까?”</p>

<p>등등을 고민해보는 것이죠.</p>

<p>어차피 회사에서 일을 하는 시간은 한정되어있기 때문에 <strong>최대한 효율적인 성장</strong>을 위해서는 사내의 내노라하는 좋은 분들을 타게팅해서 집중적으로 흡수하는게 좋다는 생각이였습니다.<br />
이렇게 회사에서 밀어주는 분들 역시 연차/나이/출신회사와 크게 상관이 없었습니다.</p>

<h3 id="2-4-잘못된-사람을-뽑으면-잘하는-사람들이-퇴사한다">2-4. 잘못된 사람을 뽑으면 잘하는 사람들이 퇴사한다</h3>

<p>제가 우아한 형제들에서 배운 것 중 2번째로 중요 포인트입니다.</p>

<p>개발을 잘하고, 일을 되게 하는 분들에게서는 <strong>참을 수 없는 마지노선</strong>이라는게 있었는데요.<br />
이 선을 넘는 분들이 입사하게 되면 여지없이 좋은 분들이 퇴사하였습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/learn4.png" alt="learn4" /></p>

<p>그 선을 넘는 행위라는 것들은 대표적으로 다음과 같습니다.</p>

<ul>
  <li>모든 일에 냉소적이거나</li>
  <li>코드리뷰나 토론시 절대 남의 의견에 동의하지 않는다거나</li>
  <li>절대 손해를 보려고 하지 않는다거나</li>
  <li>기술적으로 발전하려는 노력을 더이상 하지 않는다거나</li>
  <li>누가 시키지 않으면 절대 일을 찾아서 하지 않거나</li>
  <li>일을 되게 하는 사람들을 뒤에서 오지랖이라고 뒷담화를 한다거나</li>
  <li>문제를 해결하려고 하기 보다는 원인 제공자를 찾으려고 한다거나</li>
</ul>

<blockquote>
  <p>아 물론 현재 팀에 이런분들이 계셔서 퇴사하는건 아닙니다.<br />
서두에서 언급한 것처럼 제 개인의 고민과 기준 때문입니다. :)</p>
</blockquote>

<p>물론 여러 테스트와 면접을 통해서 이런 분들이 입사할 확률은 거의 없어졌지만, 행여나 이런 분들이 들어왔을때 팀 전체가 영향을 받기도 했습니다.</p>

<p>그래서 <strong>애매하면 뽑지말아야하고</strong>, 확신이 들때만 뽑아야 한다는 것은 제가 면접관으로 활동하는 내내 1순위 기준이 되었습니다.</p>

<h3 id="2-5-조직-구조에-따라-역량이-차이날-수도-있다">2-5. 조직 구조에 따라 역량이 차이날 수도 있다</h3>

<p>성과라는 것은 개인의 퍼포먼스가 중요합니다.<br />
다만 그 성과 안에는 오로지 개인의 퍼포먼스만으로 결정되진 않았는데요.<br />
여러 요소가 있지만, 그 중에서 제가 몰랐던 것은 <strong>조직의 구조</strong>였습니다.</p>

<p>어떤 형태의 팀인지, 어떤 형태의 TF 조직인지에 따라서도 <strong>동일한 구성원들인데도 역량의 차이가 발생</strong>했습니다.<br />
개발팀/기획팀과 같이 <strong>직군별</strong>로 팀을 나눌수도 있고, 주문팀/결제팀과 같이 <strong>도메인별</strong>로 팀을 만들어 여러 직군이 한 팀에 있도록 할 수도 있습니다.</p>

<p>개개인마다 더 잘 적응하는 구조가 달랐고, <strong>성장하기 좋은 구성도 달랐습니다</strong>.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/learn5.png" alt="learn5" /></p>

<p>초기에는 잦은 조직 개편에 대해서 부정적인 생각을 많이 했었는데요.<br />
그렇게 조직 개편을 할때마다 활동범위나 일의 범위 등이 달라지는걸 경험하면서 <strong>회사에서도 최적의 조직구조를 찾는 중</strong>이라는 걸 어렴풋이 느낄 수 있었습니다.<br />
(아닐수도 있습니다. 온전히 저 개인의 생각이라서요.)</p>

<p>개인의 성과와 성장에 대해서 조직의 형태가 생각보다 큰 영향을 줄 수 있다는 것은 색다른 깨달음이였습니다.</p>

<blockquote>
  <p>이 5가지는 제가 어느 회사/어느 규모의 집단을 합류하든 항상 곱씹어볼 최대의 소득이 아닐까 싶습니다.</p>
</blockquote>

<h2 id="3-회사에-아쉬운-점">3. 회사에 아쉬운 점</h2>

<p>회사에 아쉬운 점은 많습니다.<br />
다만, “<strong>그 아쉬운 점을 회사에서 채워주면 퇴사하지 않았을 것이냐</strong>” 라고 한다면 그건 아닙니다.</p>

<p>회사에 대한 불만으로 떠나는게 아니라서 회사에서 해줄 수 있는 것은 없습니다.</p>

<p>저는 개인적으로 생각해도, 주변의 의견을 봐도 회사에서 굉장히 좋은 대우를 받고 있었습니다.<br />
특히 이직을 준비하면서 제가 받고 있는 대우를 타사와 비교를 하게 되면 더 체감할 수 있었습니다.<br />
그래서 후련한 마음 보다는 죄송한 마음이 더 큰 것도 사실입니다.</p>

<p>그래서 “우아한형제들이 이렇게 했으면 떠나지 않았을 것이다” 하는 아쉬운 점은 없습니다.</p>

<h3 id="q-지금-기분이-어떠신가요">Q. 지금 기분이 어떠신가요?</h3>

<p>누군가는 이제 좋아하는 일을 할 생각에 신나지 않냐고 기대에 찬 질문을 하시기도 했는데요.</p>

<p>사실 저는 결정을 내렸을때, 마녀사냥의 허지웅님이 언급하신 영화 <a href="https://ko.wikipedia.org/wiki/%EC%A1%B8%EC%97%85_(1967%EB%85%84_%EC%98%81%ED%99%94)">졸업</a>이 떠올랐습니다.</p>

<p>더스틴 호프먼과 캐서린 로스의 청춘 영화 졸업 엔딩을 보면 <strong>모두가 반대하는 상황속에서</strong> 주인공 둘은 결혼식에서 도망치고 본인들이 원하는 삶 (여기서는 버스)으로 가는데요.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/graduate0.png" alt="graduate0" /></p>

<p>이렇게 뛰어가서 탄 <strong>버스안에서의 짧은 시간</strong>이 이 영화의 실제 엔딩이라는 해석이 저는 참 와닿았습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/graduate1.png" alt="graduate1" /></p>

<p><img src="https://woowabros.github.io/img/2021-04-19/graduate2.png" alt="graduate2" /></p>

<p><img src="https://woowabros.github.io/img/2021-04-19/graduate3.png" alt="graduate3" /></p>

<p>퇴사전까지는 기대감을 안고 있겠지만, 막상 현실은 또 어떤 어려움이 있을지 점점 걱정이 되기도 합니다.</p>

<p>그렇지만 성공하든 실패하든 모든 과정들이 저에게 있어서는 이야기거리라서 손해보진 않을것 같다는 생각을 합니다.</p>

<p>그래서 4/19일에 퇴사 후, 익일인 4/20일에 바로 새 회사로 출근을 합니다.</p>

<blockquote>
  <p>어서 가서 시스템을 뜯어보고싶네요!</p>
</blockquote>

<h2 id="4-앞으로의-계획">4. 앞으로의 계획</h2>

<p>아마 여기까지 보신 분들은 “그래서 어디로 이직해?” 가 궁금하실텐데요.<br />
이 글은 어디까지나 <strong>우아한형제들의 개발자로서</strong> 작성하는 글이기 때문에 제 향후 일정은 <strong>새 회사의 개발자로서</strong> 작성할 예정입니다.</p>

<p>그래서 이 부분은 <a href="https://jojoldu.tistory.com/">개인 블로그</a>와 <a href="https://www.youtube.com/channel/UCSEOUzkGNCT_29EU_vnBYjg">유튜브</a>를 통해서 언급할 예정입니다.<br />
(구독과 알림 설정 아시죠?)</p>

<h2 id="5-마무리">5. 마무리</h2>

<p>시간이 흘러 결국엔 제 도전이 잘 안되서 다시 롤백할 수도 있습니다.<br />
(물론 회사에 무릎 꿇고 싹싹 빌어야겠죠?)</p>

<p>롤백을 하면 가장 먼저 쓸 기술 블로그의 짤 역시 벌써 준비해 두었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/last.png" alt="last" /></p>

<p>(<a href="https://www.slideshare.net/yongho">하용호님의 Slideshare</a>)</p>

<p>제가 이런 선택을 했다고 해서, 주변에 이를 종용하진 않습니다.<br />
그렇지만 (부모님 보시면 혈압으로 쓰러지시겠지만) <strong>효자중에 성공한 사람은 없다</strong>고 항상 생각합니다.</p>

<p>올 설 연휴때 이 이야기를 했을때 가족들의 반대가 좀 있었는데요.<br />
어른들(?)이 반대하는데는 그만큼의 이유가 있겠죠?<br />
그렇지만 너무 하고 싶을때는 어쩔 수 없는것 같습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-04-19/ox.jpg" alt="ox" /></p>

<p>(<a href="http://www.yes24.com/Product/Goods/1415779">소라의 날개</a>)</p>

<p>지난 4년간 많이 배울 수 있었습니다.<br />
많은 기회와 권한을 주셔서 정말 감사했습니다.</p>

<p>아직 배민에는 좋은 개발자분들이 많으신데요.<br />
그 분들 못지 않게 더 성장하겠습니다.</p>

, 
01:45:48.983 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.983 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.983 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.983 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.983 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.984 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:48.985 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:48.986 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:48.986 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:48.986 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:48.986 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:48.986 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:48.987 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:48.988 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 제모옥은 젠킨스 조회로직 개선으로 하겠습니다. 근데 이제 비동기를 곁들인, https://woowabros.github.io/experience/2021/04/06/fetch-jenkins-api-async.html, , , 2021-04-06, , 0, <blockquote>
  <p>제목의 밈은 <a href="https://www.youtube.com/watch?v=IuBfmQs9wcA#t=65">조림요정의 휴먼강록체</a>입니다.</p>
</blockquote>

<h2 id="intro">Intro</h2>

<p>평화로운 2020년 9월의 어느 날…<br />
데일리 미팅을 마치고 일감을 정리하던 저에게 한 가지 요청이 들어왔습니다.<br />
“우빈님 여기 로직이 오래 걸리면 90초 넘게 걸리고 있는데 한번 개선할 수 있을지 확인 부탁드려요.”</p>

<p>‘읭 아니 대체 어떤 레거시길래 90초씩이나 걸리는거야’<br />
라고 생각하며 코드를 열어서 확인했는데요.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/01_its_you.png" style="width: 500px" />
  <span style="display: block; color:#808080; margin-top: 10px;">너라고..</span>
</div>

<p>범인은 다섯 달 전의 저였습니다.<br />
개발자들에게는 흔히 있는 일이라고 하는데… 저만 겪고 있는 건 아니죠?</p>

<p>오늘 포스팅에서는 위 레거시를 생산하게 된 배경과, 그 해결과정을 정리해서 공유해보려고 합니다.<br />
크게 어려운 내용은 아니니 해결해가는 과정 자체에 포인트를 두고 가볍게 읽어주시면 감사하겠습니다. 😉</p>

<h2 id="5개월-전">5개월 전…</h2>

<p>입사 후 <a href="https://woowabros.github.io/experience/2020/03/02/pilot-project-wbluke.html">신규입사자 온보딩 과정</a>을 마무리하고, 팀에서 가장 먼저 받은 첫 번째 과제는 정산시스템 어드민(관리자 페이지)의 최초 진입 화면인 <code class="language-plaintext highlighter-rouge">대시보드</code>를 만드는 과제였습니다.<br />
당시 정산 어드민에 로그인한 후 보이는 첫 화면은 좌측 메뉴 바를 제외하고는 특별하게 제공되는 것이 없는 빈 화면이었는데요.<br />
관리자 페이지를 사용하시는 기획/운영자 분이 수시로 확인하면 좋을 각종 실시간 지표들을 화면에 구축하는 것이 바로 해당 과제의 내용이었습니다.</p>

<h3 id="배치-모니터링">배치 모니터링</h3>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/02_monitoring_batch.png" style="width: 500px" />
</div>

<p>요구사항에 있는 많은 지표들 중 하나는, 정산시스템의 허리를 담당하고 있는 수십 개의 배치를 개발자가 아닌 운영자 분이 모니터링할 수 있도록 하는 <code class="language-plaintext highlighter-rouge">배치 모니터링</code> 지표였습니다.</p>

<blockquote>
  <p>아래에 이어서 나오는 배치 모니터링 분석에 대한 내용은 당시에 <a href="https://woowabros.github.io/experience/2020/10/08/excel-download.html">태현님</a>이 많은 도움을 주셨습니다 🙏</p>
</blockquote>

<p><br />
배치 모니터링 지표에서는 그날 수행될 예정인 배치가 어떤 것인지 파악할 수 있어야 했고, 해당 배치의 실시간 상태를 확인할 수 있어야 했습니다.<br />
또한 각 배치의 활성화(on/off) 상태와 더불어 수행 시작/종료 시간도 트래킹할 수 있어야 했습니다.<br />
즉, 정리하자면 다음과 같은 정보들을 어디선가 얻어오거나 필요에 따라 새롭게 정의해야 했습니다.</p>

<ul>
  <li>배치의 가장 최근 작업 상태 (수행중/성공/실패/수행예정)</li>
  <li>활성화 여부</li>
  <li>작업 시작시간/종료시간</li>
  <li>작업 주기 (배치가 수행될 예정인지를 판별하기 위함)
    <ul>
      <li>운영자가 매일/영업일/매월 1일/수시 등으로 사전에 정의하여 지정</li>
    </ul>
  </li>
</ul>

<p><br />
저희 팀은 배치 관리 도구로 젠킨스(Jenkins)를 사용하고 있는데요.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/03_jenkins.png" style="width: 200px" />
  <span style="display: block; color:#808080; margin-top: 10px;">오늘의 주인공 젠킨스 집사님</span>
</div>

<p>정산시스템에서 이 젠킨스를 통해 관리하고 있는 배치의 형태를 파악해보니 다음과 같이 세 종류로 구분할 수 있었습니다. (이름은 임의로 붙여봤습니다.)</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/04_jenkins_new_items.png" style="width: 800px" />
</div>

<ul>
  <li>Simple Job
    <ul>
      <li>가장 단순한 형태의 배치로, Spring Batch와 Jenkins Job이 1:1인 경우</li>
    </ul>
  </li>
  <li>Trigger Job
    <ul>
      <li>하나의 주요한 배치 A가 있고, A 배치에게 다양한 파라미터를 제공하며 수행 요청만 하고 자기자신은 종료되는 배치</li>
      <li>배치 A와 1:N 관계</li>
      <li>예를 들어, 배치 A에 1번 파라미터를 제공하는 배치, 배치 A에 2번 파라미터를 제공하는 배치 등</li>
    </ul>
  </li>
  <li>Pipeline Job
    <ul>
      <li>여러 개의 배치 Job을 순차적으로 실행할 수 있는 파이프라인 배치</li>
      <li>파이프라인 Script로 하위 배치 Job를 단계별로 지정해서 실행</li>
    </ul>
  </li>
</ul>

<p><br />
이렇게 구해야 하는 배치의 정보와, 현재 배치 시스템의 상황을 파악하고 나니 다음과 같은 고민이 있었습니다.</p>

<p><strong>💡 수십 개의 배치가 수행된 상태를 실시간으로 조회하기 위해 어떤 방법을 선택해야 하는가?</strong></p>

<p>크게는 두 가지 방법을 놓고 고민했는데요.<br />
바로 <code class="language-plaintext highlighter-rouge">Spring Batch Metadata Tables</code>와 <code class="language-plaintext highlighter-rouge">젠킨스 API</code> 였습니다.</p>

<h3 id="spring-batch-metadata-tables">Spring Batch Metadata Tables</h3>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/05_spring_batch_metadata_tables.png" style="width: 800px" />
</div>

<p><a href="https://docs.spring.io/spring-batch/docs/current/reference/html/schema-appendix.html">Spring Batch Metadata Tables(Schema)</a>는 Spring Batch로 수행된 모든 Job에 대한 정보를 가지고 있는 메타데이터 테이블입니다.<br />
위 요구사항과 관련한 정보들을 가져오기 위해서는, 그중에서도 BATCH_JOB_INSTANCE 테이블과 BATCH_JOB_EXECUTION 테이블, 그리고 BATCH_JOB_EXECUTION_PARAMS 테이블을 참고해야 할 것으로 보였습니다.<br />
Spring Batch를 사용하시는 분들은 대부분 아시겠지만, 한번 간단하게 정리해보자면 다음과 같습니다.</p>

<ul>
  <li>BATCH_JOB_INSTANCE
    <ul>
      <li>Job Parameter에 따른 배치 수행 정보를 기록</li>
      <li>동일 파라미터로는 데이터가 발생하지 않음 (배치 수행 불가)</li>
    </ul>
  </li>
  <li>BATCH_JOB_EXECUTION
    <ul>
      <li>BATCH_JOB_INSTANCE의 자식 테이블로, 모든 성공/실패 내역을 가지고 있음</li>
    </ul>
  </li>
  <li>BATCH_JOB_EXECUTION_PARAMS
    <ul>
      <li>실제 수행되었던 배치의 구체적인 모든 파라미터가 기록되는 테이블</li>
    </ul>
  </li>
</ul>

<p>더 상세한 내용은 <a href="https://jojoldu.tistory.com/326">jojoldu님의 블로그</a>를 참고해보시면 좋습니다.</p>

<p><br />
Spring Batch Metadata Tables와 위 요구사항을 매칭해보니, 다음과 같은 문제점들이 보였습니다.</p>

<ul>
  <li>파이프라인 Job은 메타테이블이 직접적으로 관리하고 있지 않기 때문에 추가 작업이 필요하다.
    <ul>
      <li>파이프라인 하위 배치들의 순서를 알아야 하고, 순서가 달라지면 코드 변경 및 배포가 필요하다.</li>
      <li>첫 수행 배치 Job과 마지막 수행 배치 Job의 시간을 조회해야 한다.</li>
      <li>여러 테이블의 조인이 필요하다.</li>
    </ul>
  </li>
  <li>Jenkins Job의 활성화 여부는 Jenkins API로만 얻어올 수 있다.
    <ul>
      <li>(아래 캡쳐 참조) 배치 활성화 on/off 는 <code class="language-plaintext highlighter-rouge">빌드 안함</code> 체크로 관리하고 있다.</li>
    </ul>
  </li>
</ul>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/06_jenkins_build_false.png" style="width: 800px" />
</div>

<h3 id="jenkins-api">Jenkins API</h3>

<p>다음으로는 Jenkins의 API에 대해 고민했는데요.<br />
<a href="https://www.jenkins.io/doc/book/using/remote-access-api/">Jenkins API wiki</a>가 있긴 하지만, 어떤 API가 있는지 정확하게 정리해주지는 않고 있습니다.<br />
하지만 우리의 요구사항에 대한 정보를 얻어오기 위해서는 다음 2개의 API면 충분합니다.</p>

<p><br />
첫 번째로 Job에 대한 정보를 받아오는 API 입니다.<br />
<code class="language-plaintext highlighter-rouge">${Jenkins_URL}/job/${job_name}/api/json</code> 으로 요청할 수 있습니다. (Jenkins job 화면에서 <code class="language-plaintext highlighter-rouge">/api/json</code> 을 붙여서 확인해보실 수 있습니다.)<br />
주요한 필드만 기술해보면 아래와 같습니다. (테스트 환경의 IP 정보는 JENKINS_URL로 표시했습니다.)<br />
<br /></p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
  </span><span class="nl">"displayName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test-01"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fullDisplayName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test-01"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fullName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test-01"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test-01"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"buildable"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"builds"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/2/"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/1/"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="nl">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"firstBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/1/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"inQueue"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"keepDependencies"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lastBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"lastCompletedBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"lastFailedBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/2/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"lastStableBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"lastSuccessfulBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"lastUnstableBuild"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lastUnsuccessfulBuild"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_class"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hudson.model.FreeStyleBuild"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/2/"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"nextBuildNumber"</span><span class="p">:</span><span class="w"> </span><span class="mi">4</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><br />
Job API에서 눈여겨 볼 정보들은 다음과 같습니다.</p>

<ul>
  <li>name
    <ul>
      <li>Job 이름</li>
    </ul>
  </li>
  <li>buildable
    <ul>
      <li>활성화 여부 (<code class="language-plaintext highlighter-rouge">빌드 안함</code> 체크 여부)</li>
    </ul>
  </li>
  <li>lastBuild, lastCompletedBuild, lastFailedBuild
    <ul>
      <li>최신 빌드 URL, 최신 성공 빌드 URL, 최신 실패 빌드 URL</li>
    </ul>
  </li>
</ul>

<p><br />
두 번째로는 Build에 대한 정보를 받아오는 API 입니다.<br />
<code class="language-plaintext highlighter-rouge">${Jenkins_URL}/job/${job_name}/${build_id}/api/json</code> 으로 요청할 수 있습니다. (상세 Build 화면에서 <code class="language-plaintext highlighter-rouge">/api/json</code> 을 붙여서 확인해보실 수 있습니다.)<br />
마찬가지로 주요한 필드만 기술해보면 아래와 같습니다.<br />
<br /></p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"building"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"displayName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#3"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"duration"</span><span class="p">:</span><span class="w"> </span><span class="mi">34</span><span class="p">,</span><span class="w">
  </span><span class="nl">"estimatedDuration"</span><span class="p">:</span><span class="w"> </span><span class="mi">116</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fullDisplayName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test-01 #3"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"3"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"keepLog"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"number"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"SUCCESS"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timestamp"</span><span class="p">:</span><span class="w"> </span><span class="mi">1616924008157</span><span class="p">,</span><span class="w">
  </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://JENKINS_URL/job/test-01/3/"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><br />
Build API에서 눈여겨 볼 정보는 다음과 같습니다.</p>

<ul>
  <li>building
    <ul>
      <li>현재 수행중인지 여부</li>
    </ul>
  </li>
  <li>duration
    <ul>
      <li>수행된 시간</li>
    </ul>
  </li>
  <li>result
    <ul>
      <li>빌드 결과</li>
    </ul>
  </li>
  <li>timestamp
    <ul>
      <li>수행 시작 시간</li>
      <li>timestamp에 duration을 더해서 환산하면 수행 종료 시간이 됩니다.</li>
    </ul>
  </li>
</ul>

<p>(위 2개 API를 제외한 다른 API가 궁금하시면 Jenkins API wrapping 라이브러리인 <a href="https://github.com/cdancy/jenkins-rest">Jenkins-rest</a>를 참고해보셔도 좋습니다!)</p>

<p><br />
마찬가지로 Jenkins API와 위 요구사항을 매칭해보니, 다음과 같은 문제점들이 보였습니다.</p>

<ul>
  <li>Trigger Job은 다른 배치를 Trigger만 하고 종료되기 때문에, 정확한 수행시간 등을 모니터링할 수 없다.</li>
  <li>하나의 배치 당 2번의 API 조회가 필요하다.</li>
</ul>

<p><br />
Jenkins API를 사용하는 방법에서 가장 큰 문제는, 하나의 API만 가지고는 우리가 필요한 모든 정보를 얻을 수 없다는 것입니다.<br />
즉, Job API에서는 어디로 가야 Build 정보가 있는지 Build 번호와 URL만 던져줄 뿐이고, 그렇게 찾아간 Build API에서는 반대로 Job에 대한 상세 정보(활성화 여부 등)를 확인할 수 없습니다.<br />
이렇게 되면 하나의 배치 당 Job API 한번, Build API 한번, 총 2번 API를 찔러야 하고, 결국 모니터링하려는 수십 개의 배치의 2배 만큼 API 호출을 해야하는 상황이었습니다.<br />
아니 집사님… 친절하게 한번에 다 알려주시면 안됩니까…</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/07_jenkins_cute.png" style="width: 200px" />
  <span style="display: block; color:#808080; margin-top: 10px;">안알랴줌ㅋ</span>
</div>

<p>Spring Batch Metadata Tables와 Jenkins API 중 고민하다가, 어차피 활성화 여부는 API를 통해 얻어와야 하고, 정보를 조합하기에도 API 쪽이 더 낫다고 생각해 후자를 선택하게 되었습니다.<br />
장단점에 따라 두 방법을 섞어서 쓰기에는 개발 기간이나 복잡도 측면에서 적합하지 않다고 판단하였습니다.</p>

<p>집사가 일을 대충하면 목마른 주인이 우물을 파야죠. 연장 가져오겠습니다. ⛏</p>

<h3 id="해보자-조회">해보자, 조회!</h3>

<p>전체적인 배치 모니터링플로우는 다음과 같습니다.</p>

<ol>
  <li>운영자가 모니터링하고 싶은 배치를 어드민에 Job 이름/관리용 이름/작업주기/조회유무 정보와 함께 등록한다.</li>
  <li>등록할 때 Job 이름(batchId)을 기준으로 Jenkins API를 찔러서, 실제 운영되고 있는 배치인지 확인한다.</li>
  <li>배치가 존재한다면, monitoring_batch라는 별도의 모니터링용 배치 관리 테이블에 저장한다.</li>
  <li>조회 시에는 등록한 batchId와 작업주기를 기준으로 당일 조회 대상인 배치 리스트를 가져와 일괄 조회한다.</li>
</ol>

<p>먼저, 필요한 API 정보에 맞게 JobInfo와 BuildInfo를 정의했습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ToString</span>
<span class="nd">@Getter</span>
<span class="nd">@NoArgsConstructor</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JobInfo</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">description</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">displayName</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">buildable</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">url</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">BuildUrl</span><span class="o">&gt;</span> <span class="n">builds</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">firstBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastCompletedBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastFailedBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastStableBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastSuccessfulBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastUnstableBuild</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BuildUrl</span> <span class="n">lastUnsuccessfulBuild</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isLastBuildEmpty</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">lastBuild</span> <span class="o">==</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Long</span> <span class="nf">getLastBuildNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nf">isLastBuildEmpty</span><span class="o">()</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">lastBuild</span><span class="o">.</span><span class="na">getNumber</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>

<span class="nd">@ToString</span>
<span class="nd">@Getter</span>
<span class="nd">@NoArgsConstructor</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BuildUrl</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">url</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">long</span> <span class="n">number</span><span class="o">;</span>

<span class="o">}</span>
</code></pre></div></div>

<p><br />
Build 조회 API URL에 Job 이름이 포함되어 있기 때문에 너무 당연해서 그런지 API에서 Job의 이름을 제공하고 있지 않아서, BuildInfo에서는 추후 활용도를 높이기 위해 조회 후 이미 가지고 있는 Job 이름 정보를 업데이트하기로 했습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ToString</span>
<span class="nd">@Getter</span>
<span class="nd">@NoArgsConstructor</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BuildInfo</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">batchId</span><span class="o">;</span> <span class="c1">// 해당 빌드의 Job Name. API에서 제공하고 있지 않아 수동으로 update 한다.</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">long</span> <span class="n">number</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">url</span><span class="o">;</span>

    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">building</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">description</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">displayName</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">result</span><span class="o">;</span>

    <span class="kd">private</span> <span class="kt">long</span> <span class="n">timestamp</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">long</span> <span class="n">duration</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">updateBatchId</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">batchId</span> <span class="o">=</span> <span class="n">batchId</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">LocalDateTime</span> <span class="nf">getBuildStartTime</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">Timestamp</span><span class="o">(</span><span class="n">timestamp</span><span class="o">).</span><span class="na">toLocalDateTime</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">LocalDateTime</span> <span class="nf">getBuildEndTime</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">Timestamp</span><span class="o">(</span><span class="n">timestamp</span> <span class="o">+</span> <span class="n">duration</span><span class="o">).</span><span class="na">toLocalDateTime</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p><br />
정산시스템에서는 이미 Jenkins API를 통해 특정 배치를 단건 실행하는 JenkinsConnector라는 모듈이 있었기 때문에, 해당 모듈에 조회 로직을 추가하기로 했습니다.<br />
RestTemplate을 사용해서 Job의 존재 유무를 확인하는 메서드와 JobInfo, BuildInfo를 조회하는 메서드를 각각 작성했습니다.</p>

<blockquote>
  <p>젠킨스 API를 사용하기 위해서는 젠킨스 환경설정에서 사용자별 토큰을 발급하고, Request에 <code class="language-plaintext highlighter-rouge">사용자ID:토큰</code> 의 형태로 인증 헤더를 보내면 됩니다.</p>
</blockquote>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// JenkinsConnector.java</span>

<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">existsJob</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">requestUrl</span> <span class="o">=</span> <span class="n">createJobUrl</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span> <span class="c1">// Job 조회 API URL</span>

        <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">JobInfo</span><span class="o">&gt;</span> <span class="n">responseEntity</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">restTemplate</span>
                <span class="o">.</span><span class="na">exchange</span><span class="o">(</span><span class="n">requestUrl</span><span class="o">,</span> <span class="no">GET</span><span class="o">,</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;&gt;(</span><span class="s">""</span><span class="o">,</span> <span class="n">createAuthHeaders</span><span class="o">()),</span> <span class="nc">JobInfo</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

        <span class="nc">HttpStatus</span> <span class="n">statusCode</span> <span class="o">=</span> <span class="n">responseEntity</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">statusCode</span><span class="o">.</span><span class="na">is2xxSuccessful</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="nc">JobInfo</span> <span class="nf">getJobInfo</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"address: {}, batchId: {}"</span><span class="o">,</span> <span class="n">address</span><span class="o">,</span> <span class="n">batchId</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">requestUrl</span> <span class="o">=</span> <span class="n">createJobUrl</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span> <span class="c1">// Job 조회 API URL</span>

        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">restTemplate</span>
                <span class="o">.</span><span class="na">exchange</span><span class="o">(</span><span class="n">requestUrl</span><span class="o">,</span> <span class="no">GET</span><span class="o">,</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;&gt;(</span><span class="s">""</span><span class="o">,</span> <span class="n">createAuthHeaders</span><span class="o">()),</span> <span class="nc">JobInfo</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
                <span class="o">.</span><span class="na">getBody</span><span class="o">();</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">JenkinsExecuteException</span><span class="o">(</span><span class="s">"Job Info Fetching Exception! "</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="nc">BuildInfo</span> <span class="nf">getBuildInfo</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">,</span> <span class="kt">long</span> <span class="n">buildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"address: {}, batchId: {}, buildNumber: {}"</span><span class="o">,</span> <span class="n">address</span><span class="o">,</span> <span class="n">batchId</span><span class="o">,</span> <span class="n">buildNumber</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">requestUrl</span> <span class="o">=</span> <span class="n">createBuildUrl</span><span class="o">(</span><span class="n">batchId</span><span class="o">,</span> <span class="n">buildNumber</span><span class="o">);</span> <span class="c1">// Build 조회 API URL</span>

        <span class="nc">BuildInfo</span> <span class="n">buildInfo</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">restTemplate</span>
                <span class="o">.</span><span class="na">exchange</span><span class="o">(</span><span class="n">requestUrl</span><span class="o">,</span> <span class="no">GET</span><span class="o">,</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;&gt;(</span><span class="s">""</span><span class="o">,</span> <span class="n">createAuthHeaders</span><span class="o">()),</span> <span class="nc">BuildInfo</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
                <span class="o">.</span><span class="na">getBody</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">buildInfo</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">buildInfo</span><span class="o">.</span><span class="na">updateBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">buildInfo</span><span class="o">;</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">JenkinsExecuteException</span><span class="o">(</span><span class="s">"Build Info Fetching Exception! "</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">HttpHeaders</span> <span class="nf">createAuthHeaders</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">credentials</span> <span class="o">=</span> <span class="n">username</span> <span class="o">+</span> <span class="s">":"</span> <span class="o">+</span> <span class="n">token</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">base64Credentials</span> <span class="o">=</span> <span class="nc">Base64</span><span class="o">.</span><span class="na">getEncoder</span><span class="o">().</span><span class="na">encodeToString</span><span class="o">(</span><span class="n">credentials</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>

    <span class="nc">HttpHeaders</span> <span class="n">httpHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpHeaders</span><span class="o">();</span>
    <span class="n">httpHeaders</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"Basic "</span> <span class="o">+</span> <span class="n">base64Credentials</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">httpHeaders</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
그리고 서비스 로직에서 이 JenkinsConnector를 사용하여 배치 하나 당 Job 조회, Build 조회를 순차적으로 진행하도록 했습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MonitoringBatchService.java</span>

<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">MonitoringBatchResponse</span><span class="o">&gt;</span> <span class="nf">search</span><span class="o">(</span><span class="nc">MonitoringBatchSearchRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">LocalDate</span> <span class="n">workingDate</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getWorkingDate</span><span class="o">();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">MonitoringBatchResponse</span><span class="o">&gt;</span> <span class="n">monitoringBatchResponses</span> <span class="o">=</span> <span class="n">monitoringBatchServerRepository</span><span class="o">.</span><span class="na">searchByCondition</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
 
    <span class="k">for</span> <span class="o">(</span><span class="nc">MonitoringBatchResponse</span> <span class="n">monitoringBatchResponse</span> <span class="o">:</span> <span class="n">monitoringBatchResponses</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">updateBuildInfo</span><span class="o">(</span><span class="n">monitoringBatchResponse</span><span class="o">,</span> <span class="n">workingDate</span><span class="o">);</span> <span class="c1">// DB에서 조회한 배치 리스트를 반복문을 돌면서 하나씩 Job, Build 조회</span>
    <span class="o">}</span>
    
    <span class="c1">// ...</span>
<span class="o">}</span>
 
<span class="kd">private</span> <span class="kt">void</span> <span class="nf">updateBuildInfo</span><span class="o">(</span><span class="nc">MonitoringBatchResponse</span> <span class="n">monitoringBatchResponse</span><span class="o">,</span> <span class="nc">LocalDate</span> <span class="n">workingDate</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">batchId</span> <span class="o">=</span> <span class="n">monitoringBatchResponse</span><span class="o">.</span><span class="na">getBatchId</span><span class="o">();</span>
 
    <span class="k">try</span> <span class="o">{</span>
        <span class="nc">JobInfo</span> <span class="n">jobInfo</span> <span class="o">=</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getJobInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span> <span class="c1">// Job 조회</span>
        <span class="c1">// ...</span>
 
        <span class="nc">BuildUrl</span> <span class="n">lastBuild</span> <span class="o">=</span> <span class="n">jobInfo</span><span class="o">.</span><span class="na">getLastBuild</span><span class="o">();</span> <span class="c1">// 최신 Build 번호 확인</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">lastBuild</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">BuildInfo</span> <span class="n">buildInfo</span> <span class="o">=</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getBuildInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">,</span> <span class="n">lastBuild</span><span class="o">.</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// Build 조회</span>
             
            <span class="c1">// ... 상태 업데이트</span>
        <span class="o">}</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JenkinsExecuteException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Jenkins 에서 조회할 수 없는 배치 Job 입니다. batchId={}"</span><span class="o">,</span> <span class="n">batchId</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
음, 아주 조회가 잘 되는 것을 확인했습니다. 배포! 👏</p>

<h2 id="비동기로-로직-개선">비동기로 로직 개선</h2>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/08_completable_fetch.png" style="width: 700px" />
</div>

<p>네, 지금까지 과거 회상 씬이었고요.<br />
이제 서문에서의 상황으로 돌아가서 이 무지막지한 API 호출을 손볼 차례입니다.</p>

<p>사실 배치 모니터링은 대시보드의 여러가지 지표 중 지분이 작고 활용도가 적은 부분이라 뒤늦게 인지한 측면도 있었고, 개선 우선순위가 낮기도 했었습니다. <del>핑계</del><br />
확인한 당시에는 등록한 배치 수도 50여 개 가까이 되면서 1회 진입 시 호출하는 API 횟수가 100회에 가까웠습니다.<br />
API 호출 100회를 동기식으로 조회하니 속도가 안나오는건 당연할수밖에요.</p>

<p>그래서 비동기 방식으로 슥삭 개선해보기로 했습니다.<br />
비동기 요청을 처리하기 위해 Java8에 등장한 CompletableFuture를 사용하기로 했고, 그전까지 CompletableFuture를 제대로 써본 적이 없었기에 진행에 앞서 <a href="https://wbluke.tistory.com/50">개인 블로그</a>에 정리도 해보았는데요.<br />
아래 나올 CompletableFuture의 API를 몇 개만 간단히 정리해보면 다음과 같습니다.</p>

<ul>
  <li>supplyAsync
    <ul>
      <li>Supplier 타입을 파라미터 콜백으로 받아서 비동기 요청을 수행하고 반환값을 리턴하는 메서드입니다.</li>
    </ul>
  </li>
  <li>join
    <ul>
      <li>위 supplyAsync는 콜백의 반환값을 CompletableFuture가 감싼 형태로 리턴을 하는데요. 받은 CompletableFuture가 끝나기를 기다리고 싶다면 join()으로 Blocking을 걸어서 비동기 작업이 끝나기를 기다릴 수 있습니다.</li>
    </ul>
  </li>
  <li>handleAsync
    <ul>
      <li>비동기 작업이 끝난 이후, 해당 결과물과 (혹시나 실패했다면) 예외를 파라미터로 받아 종합적으로 후속 작업을 지정할 수 있는 메서드입니다.</li>
    </ul>
  </li>
  <li>allOf
    <ul>
      <li>여러 CompletableFuture를 한번에 Blocking 할 때 사용하는 메서드입니다.</li>
    </ul>
  </li>
</ul>

<p>CompletableFuture까지 훑어봤으니, 이제 동기 로직을 비동기 로직으로 전환해보도록 하겠습니다!<br />
먼저 기존 어드민 시스템에서 비동기 작업을 담당하고 있던 스레드 풀(Executor)의 설정을 변경했습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// AsyncConfig.java</span>
 
<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ADMIN_DEFAULT_EXECUTOR_NAME</span> <span class="o">=</span> <span class="s">"threadPoolTaskExecutor"</span><span class="o">;</span>
<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">POOL_SIZE</span> <span class="o">=</span> <span class="mi">30</span><span class="o">;</span>
 
<span class="nd">@Bean</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="no">ADMIN_DEFAULT_EXECUTOR_NAME</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">Executor</span> <span class="nf">threadPoolTaskExecutor</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">ThreadPoolTaskExecutor</span> <span class="n">executor</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ThreadPoolTaskExecutor</span><span class="o">();</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setCorePoolSize</span><span class="o">(</span><span class="no">POOL_SIZE</span><span class="o">);</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setMaxPoolSize</span><span class="o">(</span><span class="no">POOL_SIZE</span><span class="o">);</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setThreadNamePrefix</span><span class="o">(</span><span class="s">"admin-default-async-"</span><span class="o">);</span>
     
    <span class="c1">// ...</span>
    <span class="k">return</span> <span class="n">executor</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
다들 아시겠지만 위에 나온 threadPoolTaskExecutor의 속성들을 간단하게 정리해보자면 다음과 같습니다.</p>

<ul>
  <li>corePoolSize
    <ul>
      <li>스레드의 최소 유지 개수</li>
    </ul>
  </li>
  <li>maxPoolSize
    <ul>
      <li>스레드가 최대로 만들어질 수 있는 개수</li>
    </ul>
  </li>
  <li>threadNamePrefix
    <ul>
      <li>해당 스레드 풀 내의 스레드 이름 prefix</li>
    </ul>
  </li>
</ul>

<p>원래 어드민에서 사용하던 비동기 작업은 단건 메일 전송, 위의 JenkinsConnector를 이용한 단건 배치 수행 등의 단순 작업만 존재했기에 스레드 풀 설정이 default 값으로 되어 있었습니다.<br />
즉, executor의 corePoolSize는 1, maxPoolSize는 Integer.MAX_VALUE 였습니다.<br />
이를 배치 조회를 위한 다수의 API 호출을 위해 corePoolSize, maxPoolSize를 30개로 상향 조정하였습니다.</p>

<p>다음으로는 젠킨스의 조회를 담당하는 객체를 두고, CompletableFuture를 사용하여 비동기 조회 방식으로 로직을 구성하였습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// BatchJobInfoFetcher.java</span>
 
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">Executor</span> <span class="n">threadPoolTaskExecutor</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="nf">fetch</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">batchIds</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;&gt;</span> <span class="n">batchJobItemFutures</span> <span class="o">=</span> <span class="n">batchIds</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
            <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="k">this</span><span class="o">::</span><span class="n">fetchBatchJobItemFuture</span><span class="o">)</span>
            <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
 
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">allOf</span><span class="o">(</span><span class="n">batchJobItemFutures</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="nc">CompletableFuture</span><span class="o">[</span><span class="mi">0</span><span class="o">]))</span> <span class="c1">// (1) 전체 Blocking</span>
            <span class="o">.</span><span class="na">thenApply</span><span class="o">(</span><span class="nc">Void</span> <span class="o">-&gt;</span> <span class="n">batchJobItemFutures</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="nl">CompletableFuture:</span><span class="o">:</span><span class="n">join</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="nl">Objects:</span><span class="o">:</span><span class="n">nonNull</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">()))</span>
            <span class="o">.</span><span class="na">join</span><span class="o">();</span>
<span class="o">}</span>
 
<span class="c1">// 하나의 스레드에서 JobInfo 조회가 끝나면, 다른 스레드가 BuildInfo 조회 작업을 진행할 수 있도록 handleAsync()를 사용</span>
<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="nf">fetchBatchJobItemFuture</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="n">batchId</span><span class="o">)</span> <span class="c1">// (2) 비동기로 Job 조회</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">jobInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (3) Job 조회 후 Build 조회</span>
                <span class="nc">Long</span> <span class="n">lastBuildNumber</span> <span class="o">=</span> <span class="n">jobInfo</span><span class="o">.</span><span class="na">getLastBuildNumber</span><span class="o">();</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">lastBuildNumber</span><span class="o">);</span>
            <span class="o">},</span> <span class="n">threadPoolTaskExecutor</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">JobInfo</span><span class="o">&gt;</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getJobInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>
 
<span class="kd">private</span> <span class="nc">BatchJobItem</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="nc">JobInfo</span> <span class="n">jobInfo</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">lastBuildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="n">batchJobItemFuture</span> <span class="o">=</span> <span class="n">getBuildInfoAsync</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">lastBuildNumber</span><span class="o">)</span> <span class="c1">// (4) 비동기로 Build 조회</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">buildInfo</span><span class="o">,</span> <span class="n">buildInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (5) Build 조회 후 가공</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="k">new</span> <span class="nf">BatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">buildInfo</span><span class="o">);</span>
            <span class="o">},</span> <span class="n">threadPoolTaskExecutor</span><span class="o">);</span>
 
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">allOf</span><span class="o">(</span><span class="n">batchJobItemFuture</span><span class="o">)</span> <span class="c1">// Blocking</span>
            <span class="o">.</span><span class="na">thenApply</span><span class="o">(</span><span class="nc">Void</span> <span class="o">-&gt;</span> <span class="n">batchJobItemFuture</span><span class="o">.</span><span class="na">join</span><span class="o">())</span>
            <span class="o">.</span><span class="na">join</span><span class="o">();</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BuildInfo</span><span class="o">&gt;</span> <span class="nf">getBuildInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">,</span> <span class="kt">long</span> <span class="n">buildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getBuildInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">,</span> <span class="n">buildNumber</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">logErrorWithBatchId</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (6)</span>
    <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Jenkins에서 조회할 수 없는 배치 Job입니다. batchId={}"</span><span class="o">,</span> <span class="n">batchId</span><span class="o">);</span> <span class="c1">// log.error로 슬랙 알람 발송</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
코드가 조금 복잡할 수는 있는데요, 크게는 다음과 같은 흐름입니다. (주석 번호 참조)</p>

<ul>
  <li>(1) 모든 비동기 요청은 결국 각 요청의 결과값이 모두 다 도착해야 화면 응답을 내려줄 수 있기 때문에, 조회가 끝나고 최종적으로는 CompletableFuture.allOf()로 Blocking을 걸어서 모든 응답이 끝났음을 보장해 줬습니다.</li>
  <li>(2) 먼저 조회해야 하는 batchId 리스트를 보고 순차적으로 Job을 조회하는 비동기 요청을 보냅니다.
    <ul>
      <li>Supplier 타입을 파라미터로 받는 CompletableFuture.supplyAsync()를 사용했습니다.</li>
    </ul>
  </li>
  <li>(3) Job을 비동기로 조회한 뒤 Build를 조회하는 후속작업을 지정합니다.</li>
  <li>(4) Job 조회에서 얻은 최신 buildId를 사용해 Build를 조회합니다.</li>
  <li>(5) (3)에서와 동일하게 Build를 비동기로 조회한 뒤 Job과 Build를 가공하는 후속작업을 지정합니다.</li>
  <li>(6) 만약 Job이나 Build 조회 시 예외가 발생하면, <code class="language-plaintext highlighter-rouge">log.error</code> (Slf4j)를 남기고 null을 반환하도록 했습니다.
    <ul>
      <li>정산시스템은 log.error가 발생하면 ELK에서 감지 후 슬랙에 에러 알람을 보내도록 되어있습니다.</li>
      <li>null 반환은 기본적으로 안티 패턴이지만, private 메서드로 내부에서만 사용하기 때문에 에러 시 null을 반환하도록 하고, public 메서드에서 필터링하는 용도로 사용했습니다. 한 건의 조회를 실패하더라도 나머지 정상적인 조회 결과는 보여줘야 하기 때문입니다.</li>
    </ul>
  </li>
</ul>

<p>이 로직에서 눈여겨봐야 하는 부분은, <strong>(2) ~ (5)의 과정에서 모두 같은 스레드 풀(threadPoolTaskExecutor)을 사용하도록 했다</strong>는 점입니다.<br />
이렇게 개선을 마치고, 베타 서버에서 조회 속도의 드라마틱한 향상을 체감한 뒤 운영 배포를 진행했습니다! 👏</p>

<h2 id="1차-배포-후">1차 배포 후</h2>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/09_monitoring_batch_failed.png" style="width: 500px" />
</div>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/10_noooooo.png" style="width: 500px" />
  <span style="display: block; color:#808080; margin-top: 10px;">아..안돼!</span>
</div>

<p>장애가 났습니다.<br />
배포 직후에는 화면에 반응이 없길래 ‘왜 속도가 안나오지?’ 했는데, 알고보니 아예 동작을 하지 않았던 것이었습니다.<br />
더 큰 문제는, 단순히 배치 모니터링 지표만 안나오면 그나마 괜찮은데 <strong>어드민의 다른 기능까지 같이 동작하지 않는</strong> 이슈가 발생하기 시작했습니다.</p>

<p>이유인즉슨, 스레드 풀에서 데드락이 발생했고, 같은 스레드 풀을 사용하고 있던 몇 없는 비동기 로직(위에서 언급한 메일 전송, 단건 배치 실행 등)까지도 같이 동작하지 않았던 것이었습니다.<br />
위 로직대로라면, <code class="language-plaintext highlighter-rouge">조회 배치 수 &gt;= 스레드 수</code> 의 조건에서는 데드락 현상이 발생합니다.<br />
구체적인 설명을 위해 <del>중복이지만 여러분의 스크롤은 소중하기 때문에</del> 위의 코드를 다시 가져와 보겠습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// BatchJobInfoFetcher.java</span>
 
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">Executor</span> <span class="n">threadPoolTaskExecutor</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="nf">fetch</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">batchIds</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;&gt;</span> <span class="n">batchJobItemFutures</span> <span class="o">=</span> <span class="n">batchIds</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
            <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="k">this</span><span class="o">::</span><span class="n">fetchBatchJobItemFuture</span><span class="o">)</span>
            <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
 
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">allOf</span><span class="o">(</span><span class="n">batchJobItemFutures</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="nc">CompletableFuture</span><span class="o">[</span><span class="mi">0</span><span class="o">]))</span> <span class="c1">// (1) 전체 Blocking</span>
            <span class="o">.</span><span class="na">thenApply</span><span class="o">(</span><span class="nc">Void</span> <span class="o">-&gt;</span> <span class="n">batchJobItemFutures</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="nl">CompletableFuture:</span><span class="o">:</span><span class="n">join</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="nl">Objects:</span><span class="o">:</span><span class="n">nonNull</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">())</span>
            <span class="o">)</span>
            <span class="o">.</span><span class="na">join</span><span class="o">();</span>
<span class="o">}</span>
 
<span class="c1">// 하나의 스레드에서 JobInfo 조회가 끝나면, 다른 스레드가 BuildInfo 조회 작업을 진행할 수 있도록 handleAsync()를 사용</span>
<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="nf">fetchBatchJobItemFuture</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="n">batchId</span><span class="o">)</span> <span class="c1">// (2) 비동기로 Job 조회</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">jobInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (3) Job 조회 후 Build 조회</span>
                <span class="nc">Long</span> <span class="n">lastBuildNumber</span> <span class="o">=</span> <span class="n">jobInfo</span><span class="o">.</span><span class="na">getLastBuildNumber</span><span class="o">();</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">lastBuildNumber</span><span class="o">);</span>
            <span class="o">},</span> <span class="n">threadPoolTaskExecutor</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">JobInfo</span><span class="o">&gt;</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getJobInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>
 
<span class="kd">private</span> <span class="nc">BatchJobItem</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="nc">JobInfo</span> <span class="n">jobInfo</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">lastBuildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="n">batchJobItemFuture</span> <span class="o">=</span> <span class="n">getBuildInfoAsync</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">lastBuildNumber</span><span class="o">)</span> <span class="c1">// (4) 비동기로 Build 조회</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">buildInfo</span><span class="o">,</span> <span class="n">buildInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (5) Build 조회 후 가공</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="k">new</span> <span class="nf">BatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">buildInfo</span><span class="o">);</span>
            <span class="o">},</span> <span class="n">threadPoolTaskExecutor</span><span class="o">);</span>
 
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">allOf</span><span class="o">(</span><span class="n">batchJobItemFuture</span><span class="o">)</span> <span class="c1">// Blocking</span>
            <span class="o">.</span><span class="na">thenApply</span><span class="o">(</span><span class="nc">Void</span> <span class="o">-&gt;</span> <span class="n">batchJobItemFuture</span><span class="o">.</span><span class="na">join</span><span class="o">())</span>
            <span class="o">.</span><span class="na">join</span><span class="o">();</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BuildInfo</span><span class="o">&gt;</span> <span class="nf">getBuildInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">,</span> <span class="kt">long</span> <span class="n">buildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getBuildInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">,</span> <span class="n">buildNumber</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">logErrorWithBatchId</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (6)</span>
    <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Jenkins에서 조회할 수 없는 배치 Job입니다. batchId={}"</span><span class="o">,</span> <span class="n">batchId</span><span class="o">);</span> <span class="c1">// log.error로 슬랙 알람 발송</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
예를 들어 조회할 배치 2개, 스레드 풀의 스레드 수를 2개라고 가정해 보겠습니다.<br />
2개의 스레드가 2개의 배치를 조회 및 가공하는 (2) ~ (3) 번 과정을 수행합니다.
문제는 fetchBatchJobItem() 이라는 (4) ~ (5)의 과정이 (3)의 과정에 포함되는 작업이기 때문에, (2)번 과정에 모든 스레드가 물려있는 상황에서 새로운 (4) ~ (5)번 작업을 위한 스레드를 요청하게 되고, 이는 곧 각자의 스레드가 서로가 끝나기만을 기다리는 데드락 현상으로 이어집니다.</p>

<p>당시 운영에서 등록해 조회하고 있던 배치는 47개 정도여서, 해당 이슈는 <strong>핫픽스 배포로 스레드 풀의 개수를 초기 설정 30개에서 50개로 상향 조정하여 임시 조치</strong>하는 방식으로 해소하였습니다.</p>

<p>이후 정확한 원인 파악을 진행하고, 두 가지 후속조치를 진행하였는데요.<br />
첫 번째는 <strong>어드민의 기존 기능들이 사용하는 스레드 풀과 대시보드 전용 스레드 풀을 분리</strong>하였습니다.<br />
후에 대시보드에서 또 다른 스레드 이슈가 발생하더라도 다른 기능들은 영향을 받지 않게끔 하기 위해서입니다.</p>

<p>두 번째는 <strong>(2), (4)번 과정의 네트워크 조회 로직만 대시보드 전용 스레드 풀을 사용</strong>하게 하고, (3), (5)번 과정의 애플리케이션 단에서의 단순 가공 로직은 기본 제공되는 Tomcat의 NIO 스레드 풀을 자연스럽게 이용할 수 있도록 <strong>특별한 스레드 풀 지정을 하지 않았습니다.</strong><br />
(지금 생각해보면 스레드 풀 지정을 하지 않는 것보다, 또 다른 스레드 풀을 두고 별도로 지정하는 것이 더 좋았을 것 같습니다. 톰캣의 스레드 풀은 스레드 생성 제한이 없어서 자칫하면 위험할 수 있기 때문입니다.)<br />
이렇게 하면 대시보드 스레드 풀의 스레드들이 정확히 네트워크 리소스에만 투입되고, 서로의 작업 간에 pending 되는 일이 없게 됩니다.<br />
위 후속 조치에 따라 2차 개선한 코드는 다음과 같습니다.<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// AsyncConfig.java</span>
 
<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ADMIN_DEFAULT_EXECUTOR_NAME</span> <span class="o">=</span> <span class="s">"adminExecutor"</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">MONITORING_BATCH_EXECUTOR_NAME</span> <span class="o">=</span> <span class="s">"monitoringBatchExecutor"</span><span class="o">;</span>
<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">MONITORING_BATCH_THREAD_POOL_SIZE</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
 
<span class="nd">@Bean</span>
<span class="nd">@Qualifier</span><span class="o">(</span><span class="no">ADMIN_DEFAULT_EXECUTOR_NAME</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">Executor</span> <span class="nf">adminExecutor</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">ThreadPoolTaskExecutor</span> <span class="n">executor</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ThreadPoolTaskExecutor</span><span class="o">();</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setThreadNamePrefix</span><span class="o">(</span><span class="s">"admin-async-"</span><span class="o">);</span>
 
    <span class="c1">// ...</span>
    <span class="k">return</span> <span class="n">executor</span><span class="o">;</span>
<span class="o">}</span>
 
<span class="nd">@Bean</span>
<span class="nd">@Qualifier</span><span class="o">(</span><span class="no">MONITORING_BATCH_EXECUTOR_NAME</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">Executor</span> <span class="nf">monitoringBatchExecutor</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">ThreadPoolTaskExecutor</span> <span class="n">executor</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ThreadPoolTaskExecutor</span><span class="o">();</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setCorePoolSize</span><span class="o">(</span><span class="no">MONITORING_BATCH_THREAD_POOL_SIZE</span><span class="o">);</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setMaxPoolSize</span><span class="o">(</span><span class="no">MONITORING_BATCH_THREAD_POOL_SIZE</span><span class="o">);</span>
    <span class="n">executor</span><span class="o">.</span><span class="na">setThreadNamePrefix</span><span class="o">(</span><span class="s">"monitoring-async-"</span><span class="o">);</span>
 
    <span class="c1">// ...</span>
    <span class="k">return</span> <span class="n">executor</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br />
AsyncConfig.java에서는 스레드 풀을 2개로 분리하고, 대시보드 스레드 풀의 크기를 10개로 조정하였습니다. (필요 이상으로 스레드가 많을 필요도 없기 때문에 운영 상황을 보면서 조절하는 것이 좋습니다.)<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// BatchJobInfoFetcher.java</span>
 
<span class="c1">// ...</span>
 
<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="nf">fetchBatchJobItemFuture</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="n">batchId</span><span class="o">)</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">jobInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (3) Job 조회 후 Build 조회</span>
                <span class="nc">Long</span> <span class="n">lastBuildNumber</span> <span class="o">=</span> <span class="n">jobInfo</span><span class="o">.</span><span class="na">getLastBuildNumber</span><span class="o">();</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">lastBuildNumber</span><span class="o">);</span>
            <span class="o">});</span> <span class="c1">// 별도의 스레드 풀 지정하지 않음</span>
<span class="o">}</span>
 
<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">JobInfo</span><span class="o">&gt;</span> <span class="nf">getJobInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getJobInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span> <span class="c1">// 기존처럼 스레드 풀 지정</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>
 
<span class="kd">private</span> <span class="nc">BatchJobItem</span> <span class="nf">fetchBatchJobItem</span><span class="o">(</span><span class="nc">JobInfo</span> <span class="n">jobInfo</span><span class="o">,</span> <span class="nc">Long</span> <span class="n">lastBuildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BatchJobItem</span><span class="o">&gt;</span> <span class="n">batchJobItemFuture</span> <span class="o">=</span> <span class="n">getBuildInfoAsync</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">lastBuildNumber</span><span class="o">)</span>
            <span class="o">.</span><span class="na">handleAsync</span><span class="o">((</span><span class="n">buildInfo</span><span class="o">,</span> <span class="n">buildInfoException</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="c1">// (5) Build 조회 후 가공</span>
                <span class="c1">// ... 검증</span>
 
                <span class="k">return</span> <span class="k">new</span> <span class="nf">BatchJobItem</span><span class="o">(</span><span class="n">jobInfo</span><span class="o">,</span> <span class="n">buildInfo</span><span class="o">);</span>
            <span class="o">});</span> <span class="c1">// 별도의 스레드 풀 지정하지 않음</span>
 
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">allOf</span><span class="o">(</span><span class="n">batchJobItemFuture</span><span class="o">)</span> <span class="c1">// Blocking</span>
            <span class="o">.</span><span class="na">thenApply</span><span class="o">(</span><span class="nc">Void</span> <span class="o">-&gt;</span> <span class="n">batchJobItemFuture</span><span class="o">.</span><span class="na">join</span><span class="o">())</span>
            <span class="o">.</span><span class="na">join</span><span class="o">();</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">CompletableFuture</span><span class="o">&lt;</span><span class="nc">BuildInfo</span><span class="o">&gt;</span> <span class="nf">getBuildInfoAsync</span><span class="o">(</span><span class="nc">String</span> <span class="n">batchId</span><span class="o">,</span> <span class="kt">long</span> <span class="n">buildNumber</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">jenkinsConnector</span><span class="o">.</span><span class="na">getBuildInfo</span><span class="o">(</span><span class="n">batchId</span><span class="o">,</span> <span class="n">buildNumber</span><span class="o">),</span> <span class="n">threadPoolTaskExecutor</span><span class="o">)</span> <span class="c1">// 기존처럼 스레드 풀 지정</span>
            <span class="o">.</span><span class="na">exceptionally</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">logErrorWithBatchId</span><span class="o">(</span><span class="n">batchId</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">});</span>
<span class="o">}</span>

<span class="c1">// ...</span>
</code></pre></div></div>

<p><br />
젠킨스 로직에서는 (3), (5)번 과정에서 대시보드 스레드 풀을 지정하던 부분을 제거하였습니다.<br />
다음 로그를 보시면, 빨간색 박스의 비동기 로직을 요청하는 메인 스레드는 톰캣의 스레드 풀(NIO)을 사용하고 있는 것을 볼 수 있고, 파란색 박스의 실제 Jenkins API 요청은 직접 지정한 스레드 풀(monitoring-async)을 사용하는 것을 확인할 수 있습니다.<br />
메인 스트림 스레드와 API 요청 스레드가 분리되었기 때문에 데드락이 걸리지 않게 된 것이죠.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/11_log_batch_job_info_fetcher.png" style="width: 900px" />
</div>

<p>여러 케이스를 테스트하면서 안전성을 두번 세번 확인 후, 다시 2차 배포를 진행했습니다! 👏</p>

<h2 id="2차-배포-후">2차 배포 후</h2>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-04-06/12_async_is_comfortable.png" style="width: 500px" />
</div>

<p>추가 배포 후 다행히 10개의 스레드로도 기능은 잘 동작했고, 조회 속도도 기대한만큼 나와주었습니다.<br />
기존 <strong>90초 걸리던 로직이 2초 이내로 개선</strong>이 되어 무려 <code class="language-plaintext highlighter-rouge">44배</code>의 성능 개선율을 보여주었습니다.</p>

<h2 id="추가-개선-예정--outro">추가 개선 예정 + Outro</h2>

<p>개발 당시에는 비동기 호출 구조에만 정신이 팔려서 인지하지 못하고 있었는데, 이번에 글을 다시 작성하면서 정리하다보니 위 내용은 다음과 같이 개선 가능하다는 사실을 깨달았습니다.</p>

<p>현재는 하나의 배치를 기준으로 보면 Job 조회 → 최신 Build Id 얻음 → Build 조회 로 <strong>항상 Job을 조회한 후 Build를 조회하도록</strong> 순차적으로 진행하고 있는데요.<br />
꼭 Job 정보를 찔러서 최신 Build Id를 알아낸 뒤에 해당 Id 값을 사용해 조회하지 않아도, Jenkins API URL에 <code class="language-plaintext highlighter-rouge">lastBuild</code>, <code class="language-plaintext highlighter-rouge">lastCompletedBuild</code> 등과 같이 고정된 문자열을 사용해서 최신 Build에 대한 조회가 가능하다고 합니다. <del>이럴수가?</del><br />
이렇게 되면 <code class="language-plaintext highlighter-rouge">${Jenkins_URL}/job/${job_name}/lastBuild/api/json</code> 로 특정 Job에 대한 최신 Build 조회가 가능하니, 굳이 Build를 조회하기 전에 Job을 조회하지 않아도 되고, 같은 레벨에서 Job과 Build를 동시에 조회하고 조합하는 구조로 개선할 수 있겠다는 생각이 들었습니다.<br />
즉, 지금은 Job 50개를 먼저 다 조회한 후, Blocking을 걸어 작업 완료가 보장되면 그 다음 순서로 Build 50개를 조회하는데, 위 구조대로라면 총 100개의 요청을 <strong>순서 상관없이 동시 요청</strong>하고, 조회 완료 후에는 Map 등으로 가공 로직을 거쳐 원하는 형태의 Job + Build 응답값을 구성할 수 있겠다고 판단을 했습니다.<br />
요 3차 개선 구조는 조만간 시간이 나면 바로 개선을 진행해볼 예정입니다. 조회 시간도 기대만큼 1초 대로 좀 더 단축이 되면 좋겠네요.</p>

<p><br />
만들고 개선하고 장애내고 다시 개선하는 일련의 과정을 거치면서, 비교적 친숙하지 않았던 비동기 로직의 맛을 슬쩍 볼 수 있어서 <del>다 끝나고 나서는</del> 즐거웠습니다.<br />
무엇보다 미리 데드락 상황을 로컬에서 충분히 재현하고 예측할 수 있었는데 그러지 못한 점이 가장 아쉬웠고요.<br />
이런 경험을 통해, 또 몇 달 시간이 지났지만 글로 한번 더 정리하면서, 조금 더 <a href="https://woowabros.github.io/experience/2020/03/02/pilot-project-wbluke.html">Real-정산지기</a>를 향해 한걸음 더 나아갔다고 되돌아볼 수 있는 소중한 경험이었습니다.<br />
긴 글 읽어주셔서 감사합니다-! 😉</p>
, 
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.007 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.008 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.009 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.010 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.010 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 우아한테크코스 한 달 생활기, https://woowabros.github.io/techcourse/2021/04/02/techcourse-level1-retrospective.html, , , 2021-04-02, , 0, <p>안녕하세요. 테크코스교육개발팀 이원미입니다.</p>

<p>우아한테크코스(이하, 우테코)도 어느덧 3년 차에 접어들었습니다 : ) 새로운 기수를 맞이할 때면 언제나 설레는 것 같아요.</p>

<p>아참, 3기에는 커다란 변화가 생겼는데요! <del>(언제나 변화가 일상인 우테코지만..)</del></p>

<p>지난 기수는 웹 백엔드 과정만을 운영했다면, 이번 3기에는 웹 프론트엔드 과정이 신설되어 우테코에 새로운 활력을 불어넣어 주고 있답니다. (New 바람 ~)</p>

<p><br /></p>

<p><img src="/img/2021-04-02/wooteco-front.jpg" /></p>

<p><br /></p>

<p>그리고 프론트엔드 크루들과 더불어 새로운 프론트엔드 캡틴과 코치들도 합류했습니다. 로이드, 포코, 공원 모두 환영합니다 ❤️</p>

<p>새로운 과정뿐만 아니라, 기존의 과정들도 차근차근 업그레이드하면서 우테코는 나날이 발전해가고 있어요.
프로그래밍 미션과 글쓰기 미션 모두 열심히 따라와 주고있는 크루들에게도 박수를 보냅니다.</p>

<p><br /></p>

<p><img src="/img/2021-04-02/wooteco-back.jpg" /></p>

<p><br /></p>

<p>레벨 1 글쓰기 주제는 <b>우아한테크코스 한 달 생활기</b>입니다.</p>

<p>백엔드 크루들의 글, 프론트엔드 크루들의 글이 적절히 섞여있으니 읽는 재미가 있으실 거예요.</p>

<p>우리 크루들은 우테코에서의 첫 생활을 어떻게 보냈을까요?</p>

<p>우테크루즈, 다시 한번 힘차게 출항합니다. : )</p>

<p><br /></p>

<p><br /><br /><br /></p>

<h1 style="font-size:40px; border-bottom: 1px solid gainsboro;">신세한탄(신세희)의 글</h1>

<h2 id="자기-의심과-극복-그-사이에서">자기 의심과 극복, 그 사이에서</h2>

<p>한 번도 치열하게 살아본 적 없었다. 모두가 열심히 공부하는 고3 때도, 남들이 스펙이다 대외활동이다 바쁘게 사는 대학 때도 그랬다.
치열하게 살지 않았기 때문에 미래가 무서웠고, 그래서 회피했다.
미래를 이야기하는 분위기에는 언제나 입을 꾹 닫았다.</p>

<p>이력서와 자기소개서, 채용 시험, 몇 차례의 면접까지 거쳐서 입사하는 기업은 쳐다도 보지 않았다. 도전할 용기도 열정도 없었다.
겨우 한 장의 자기소개서와 한 번의 면접만으로 작은 스타트업에 입사했다. 1년 넘게 일했지만 한 번도 살아있다고 느낀 적 없었다.
눈 씻고 찾아봐도 멋진 구석이라고는 찾아볼 수 없는 삶을 인정하고 싶지 않아서 야근 없는 게 어디냐며 자기 위로를 하곤 했다.</p>

<p>코로나가 극심해지던 시기, 회사에서 무급휴가를 통보했다. 그제야 정신이 들었다.
‘나 이렇게 살면 안 되겠구나.’
당시에는 급작스레 닥친 상황을 받아들이기 힘들었다. 하지만 이런 상황이 없었다면 스스로 구렁텅이에서 빠져나올 수 없었을 것이다.
지금 와서 되돌아보면 그저 감사할 뿐이다.</p>

<p>그렇게 회사를 그만뒀고, 개발 공부를 시작했다. 몇 개월을 공부하다가 우아한테크코스에 지원했고, 운 좋게 합격했다.
코딩 테스트도, 프리코스 기간도 나에게는 쉽지 않았기 때문에 얼떨떨했다. 기쁨과 설렘보다는 두려움과 부담감이 컸다.
10개월 동안 내가 과연 해낼 수 있을까? 시작 전 며칠은 숨이 잘 안 쉬어지는 증상을 겪기까지 했다.</p>

<p><br /><br /></p>

<p>우아한테크코스에서의 한 달은 우려한 만큼 힘들었다. 기본기가 부족하다는 것을 매일 실감했다.
미션을 진행하는 것이 버거워 보충 학습이 간절했다. 그렇지만 일주일 내내 페어 프로그래밍만 해도 시간이 부족했다.
부족한 개념을 미처 채우지 못한 채 다음 미션으로 넘어가는 일이 반복됐다.</p>

<p>모르는 것은 쌓여만 가는데 다른 크루들이 ‘웹 접근성 파악하기’, ‘구조도 그리기’ 등 미션 외의 이벤트에 참여하는 것을 보면 조바심이 났다. 당장 추가적인 학습을 하지 못하는 것에 대한 조바심은 아니었다.
앞으로 점점 더 커져 갈 격차가 두려움으로 다가왔다.
그리고 그 격차를 끝내 감당하지 못하는 순간이 오면 포기하고 싶어질까 봐 그게 가장 겁났다.</p>

<p>‘다른 크루들과 나를 비교하지 말자. 나의 성장에만 집중하자.’ 많이도 되뇌었지만 쉽지 않았다. 크루들이 남긴 질문에 답변을 남기거나 의견을 나누는 일은 둘째 치더라도, 질문조차 이해하지 못하고 있는 나.
모르는 게 있어 물어보고 싶어도 창피해서 말을 삼키고 마는 나.
이렇게 초라한 나를 매일같이 직면해야 하는 상황에서 작아지지 않기란 어려웠다.</p>

<p><br /><br /></p>

<p>그렇다고 한 달 동안 그저 괴롭기만 했던 것은 아니었다.
지난 한 달은 내가 살면서 가장 생기있게 살아낸 한 달이었다. 열정 넘치는 크루들과 함께 진심을 다해 무언가에 몰입할 수 있는 시간이 소중하고 행복했다.
무엇보다 평생 나를 지배했던 무기력에서 조금씩 벗어나고 있다는 게 좋았다.
우아한테크코스 이전에는 그 흔한 스터디 한 번 해본 적 없었다.
귀찮고, 시간을 내야하고, 내 부족함이 드러날 수 있는 상황들을 회피해왔기 때문이다.
그런데 한 크루가 기초 스터디를 연다는 글을 보고 큰 고민 없이 메시지를 보냈다.</p>

<p>물론 나는 여전히 나를 다 내려놓지 못했다. 주저하고, 머뭇거리다가 놓쳐버린 기회도 많다.
그렇지만 아주 천천히, 감당할 수 있는 범위 내에서 나를 내려놓고, 부족한 나를 드러내는 연습을 하고 있다.</p>

<p>아직도 하루하루가 자기 의심과 극복의 반복이다.
앞으로의 성장이 기대되다가도, 자려고 누워서 눈을 감으면 울컥울컥 조급함과 부담감이 올라온다.
그래도 밤늦게까지 남아 공부하다가 크루들과 함께 집에 돌아가던 길에 느낀,
손끝까지 퍼지던 그 ‘살아있음’의 감정으로 남은 날들을 버텨보려고 한다.</p>

<p><img src="/img/2021-04-02/wooteco.001.jpeg" width="50%" /></p>

<p><br /><br /><br /></p>

<h1 style="font-size:40px; border-bottom: 1px solid gainsboro;">하루(김하루)의 글</h1>

<h2 id="하루-한-달-체험기">‘하루’ 한 달 체험기</h2>

<p>사실 나는 최근에 실제 이름을 바꾸었다. 원래는 평범한 한자 이름이었다. 사전에 가족들의 동의를 얻긴 했지만 이름을 바꾼 것은 온전히 나의 선택이었다. 꽤 오래전부터 이름을 바꾸고 싶은 마음은 있었는데, 그와 별개로 이름에 담고 싶었던 나의 뜻 또는 의지가 있었다.</p>

<p>사람들은 흔히 시간을 ‘과거’, ‘현재’, ‘미래’ 세 가지로 분류한다. 그리고 저마다 다른 가중치를 둔다. 나는 마음으로는 ‘현재’가 가장 중요하다고 생각하면서도, 습관적으로 항상 ‘미래’부터 챙기곤 했다. 지금, 이 순간을 놓치고 있다는 생각이 들 때면 환기 차원에서 ‘오늘을 찾아요’, ‘지금이 우리의 전부’와 같은 노래를 찾아 듣곤 했다. 이 노래들의 가사처럼 ‘오늘 하루’를 소홀히 하지 않고자 하는 나의 바람을 이름에 담았다.</p>

<p>코로나 여파로 집에만 있어서 바뀐 이름으로 불릴 일이 많이 없었다. 그렇다 보니 나도 모르게 옛날 이름을 쓰는 경우도 더러 있었다. 우테코 시작 전에 문의해보니 본명을 닉네임으로 정해도 된다는 답변을 받았다. 그래서 바꾼 이름인 ‘하루’를 닉네임으로 사용하기로 했다. 줌으로 하는 데일리 미팅이나, 슬랙 메신저에도 항상 ‘하루’라는 사용자 이름이 따라붙고, 코치님, 크루들, 리뷰어님까지 모두 나를 당연하게 ‘하루’라고 불러주셨다. 덕분에 이제는 나의 새로운 이름에 완벽 적응했다. 닉네임을 본명으로 정한 건 잘한 결정이었다.</p>

<p><br /></p>

<h2 id="블로그-할-맛-난다">블로그 ‘할 맛 난다’</h2>

<p>작년 12월 프리코스를 진행하면서 처음 블로그를 만들었다. 느낀 점과 배운 점을 기록해두고 싶어서 만들긴 했는데, 당시에 내 글을 불특정 다수에게 공개할 용기는 없었다. 그래서 나만 볼 수 있도록 비공개로 설정해놓고 프리코스 후기를 작성했다. 순수하게 ‘저장소’ 역할만 하는 블로그였다. 그러다 올해 1월 말, 알 수 없는 용기가 생겨 블로그를 새로 단장해서 오픈했다. 그리고 나의 일상과 학습 내용을 하나하나 담아나갔다.</p>

<p>우테코 과정을 시작한 이후에도 과정에서 배운 내용을 블로그에 틈틈이 포스팅했다. 돌아보니 다루고 싶은 주제를 모두 다루지 못한 점이 아쉬움으로 남는다. 개인적으로 정말 구미가 당기고 더 탐구해서 글로 풀어보고 싶은 주제인데, 생각보다 자료 찾기가 쉽지 않아 포스팅을 포기한 글이 적지 않다. 또, 미션을 진행하면서 시간 관리를 잘 못해서, 정리해야겠다는 생각으로 제목만 써놓고 아예 건드리지 못한 주제도 많다.</p>

<p>그래도 틈틈이 계속 글을 써왔다는 점은 스스로 칭찬해주고 싶다. 돌아보니 그 사이 10개가 넘는 글을 남겼다. 작성한 글을 크루들에게 소개한 날에는 조회수가 폭발하기도 했다. <em>(FE크루들 영업 당해줘서 고마워요.)</em> 나의 글이 누군가에게 도움이 되고 피드백을 받는 경험은 이전에 느껴보지 못한 성취감과 만족감을 가져다주었다. 최근에는 감사하게도 한 리뷰어님께서 SNS에 내 블로그를 공유해주신 덕분에, 조회수 최대치를 경신하는 즐거운 경험도 할 수 있었다. 우테코 과정에 참여하지 못했다면 이 모든 새로운 경험을 놓쳤을지도 모른다. 즐거운 마음으로 남은 9개월의 여정도 블로그에 차곡차곡 기록해보려고 한다.</p>

<p><br /></p>

<h2 id="우테코가-판타지인-이유">우테코가 ‘판타지’인 이유</h2>

<p>흔히 말하는 대학 과제의 팀플을 떠올려보면, 팀에 속한 ‘모두’가 열심히 한다는 것이 얼마나 비현실적인 이야기인지 알 수 있다. 그런데 그 비현실적인 일이 우테코에서는 벌어지고 있다. 그런 점에서 우테코는 현실보다 판타지에 가깝다고 표현하고 싶다. 주변 사람들이 물으면, 나는 판타지 같은 우테코에서의 생활에 200% 만족한다고 대답한다.</p>

<p>조직생활을 하는 사람들은 대개 조직 내 불합리한 의사결정을 경험하며 자괴감을 느낀다. 나도 그런 사람 중 하나였다. 퇴사를 결심하며 정했던 단 하나의 목표는 ‘열심히, 즐겁게 일할 수 있는 조직에 속하는 것’이었다. 당시에는 이 목표가 실현 가능한 것인지 확신할 수 없었지만, 우테코 과정에 합류하면서 나는 이 목표를 완벽하게 달성했다. 합리적이고 배려 넘치는 우테코 시스템을 경험할 때, 그리고 열정적인 크루들과 함께할 때, 나는 말로 다 할 수 없는 만족감을 느낀다. 내가 현재 이 조직에 속할 수 있음에, 이 동료들이 나와 함께 해줌에 감사하고 또 감사하다.</p>

<p>앞서 말한 것처럼 나는 목표를 이미 이루었다. 하지만 우테코는 영원한 과정이 아니다. 그래서 다음 목표는 ‘내년에도 내가 지향하는 조직에 속할 수 있도록, 그 조직에서 필요로 하는 인재가 되는 것’으로 정했다. 우테코에서 한 달 생활을 마친 지금은, 내가 다분히 노력한다면 앞으로도 이 판타지를 이어나갈 수 있으리라는 확신이 든다. ‘열심히, 즐겁게 일할 수 있는 곳’에서 기꺼이 나를 받아줄 수 있도록, 앞으로 더 열심히 나를 단련 시키고 성장해 나갈 것이다.</p>

<p>시간 내어 읽어주셔서 감사합니다. 🙏</p>

<p><img src="/img/2021-04-02/wooteco.002.jpeg" width="50%" /></p>

<p><br /><br /><br /></p>

<h1 style="font-size:40px; border-bottom: 1px solid gainsboro;">피케이(박유진)의 글 </h1>

<h2 id="기억보단-추억을---우아한테크코스-한-달-생활기">기억보단 추억을 - 우아한테크코스 한 달 생활기</h2>

<h3 id="나-요즘-안-바빠-그냥-조금-정신이-없네">“나? 요즘 안 바빠… 그냥 조금 정신이 없네.”</h3>
<p>‘기억보단 기록을’. 다들 한 번쯤 들어보셨죠?
유명한 블로그의 이름이기도 하고, 개발자들 사이에선 이제 불문율이잖아요.
맞아요. 워낙 공부하는 내용이 많은 우리이기에, 기억에만 의존해서는 모든 것을 알고 있기 쉽지 않아요.</p>

<p>그래서 개발과는 별개로 시간 관리를 철저히 합니다.
습관을 형성하려고 매일 서로 인증하기도 하죠.
블로그나 노트를 작성하기 위해 시간을 투자하기도 해요.
그 와중에 다른 크루와 소통하는 건 또 얼마나 재미있는지…!
정신을 차리고 보면 사람들로 꽉 찬 2호선을 타고 퇴근하는 중이네요. 그렇게 며칠 지내다 보니 한 달 하고도 몇 주가 벌써 지나갔어요.</p>

<p>우아한테크코스 한 달 생활기…
요즘 그렇지 않아도 주변 사람들이 얼마나 바쁘길래 그렇게 연락이 안 되냐고 묻습니다.
사실은 키보드 좀 만지작거리고 크루들과 직화 제육볶음 몇 번 먹었을 뿐인데…
난 아직 해야 할 것들이 산더미처럼 쌓였는데…
이렇게 빠르게 시간이 흐르다니! 저는 즐겼던 순간밖에 없는데 말이죠.
그래서 바쁘다고 말하기 부끄러워 이렇게 대답합니다.</p>

<p>“나? 요즘 안 바빠… 그냥 조금 정신이 없네.”</p>

<p><br /></p>

<h3 id="오히려-좋아">“오히려 좋아!”</h3>
<p>왜 정신이 없냐고요?
우아한테크코스에 들어오기 전까지는 이렇게 짧은 시간 동안 많은 활동을 해본 적이 없었어요.
제게 프로그래밍을 알려주는 존재는 대부분 이름 모를 🇮🇳인도🇮🇳 출신 유튜버들이었거든요.
보통 혼자서 ‘개발할 때 듣기 좋은 플레이리스트’ 들으면서 새벽에 컴퓨터를 붙잡고 있었습니다.
모든 활동이 제 머릿속에서 이루어졌죠.</p>

<p>이제는 상황이 다릅니다.
요즘 평생 먹지도 않던 아침밥을 챙겨 먹어요.
멀티스레딩을 공부하며 프로그래밍에 입문했다는 크루와 함께 먹는데, 그 크루와 얘기하다 보면 아침밥보다도 든든한 힘을 얻곤 합니다.</p>

<p>동네 형 같은 어떤 크루는 만날 때마다 매번 새로운 시간 관리 팁이나 기록 관련 노하우를 공유하며 저를 응원해줘요.</p>

<p>또 다른 크루는 아재 개그와 호탕한 웃음으로 엉뚱한 모습이었다가도, 지식을 공유할 때 교수님과 같은 지적인 모습을 보여주죠.</p>

<p>“고양이가 최고야… 개발은 힘들다…“라며 매일 본인의 실력을 의심하는 한 크루는 다른 사람의 코드를 기가 막히게 디버깅하며 모두를 놀라게 합니다.</p>

<p>이렇게 훌륭한 개발자들과 끊임없이 소통하는데 정신이 있을 리가 있나요.
<strong>다행히 요즘 새로 습득하는 지식은 이런 경험들과 함께 추억이 되어 제 머릿속에 들어옵니다.</strong>
약간 ‘너드’처럼 들릴 수도 있겠지만, 여러분과 함께한 즐거운 시간을 떠올리면 자연스레 그날 주고받았던 대화의 주제가 떠올라요.
요즘 한 크루가 밀고 있는 표현이 생각나네요.</p>

<p>“오히려 좋아!”.</p>

<p><br /></p>

<h3 id="잠깐-피케이가-지금-무슨-말을-할지-알-것-같은데-저는-95-정도-반대해요-ㅎ">“잠깐, 피케이가 지금 무슨 말을 할지 알 것 같은데… 저는 95% 정도 반대해요. ㅎ”</h3>
<p>페어 프로그래밍을 하며 한 크루가 제게 했던 말입니다.
그러고는 자세를 고쳐 앉고 한 마디 툭 던지네요.</p>

<p><strong>“설득해보세요.”</strong></p>

<p>사실 성격상 아직 프로그래밍에 관련해서 제 주장을 마음껏 펼치기가 굉장히 힘들어요.
스스로의 실력을 의심하고 있는 것도 한몫하죠.
그런데 이곳에서는 본인의 생각을 말해야 할 상황이 늘 생깁니다.
그뿐만 아니라 다른 사람과 함께 실시간으로 코딩을 하며 누구에게나 그 코드가 열려있어요.
와… 다들 어찌 그리 잘하는지. 말 한마디 하고 나면 저도 모르게 눈치를 계속 보게 됩니다.
지금 내가 말하는 내용이 맞나? 나는 왜 이렇게 구현하려고 하는 거지? 그리고 상대방을 설득해야 합니다.
지금 제 옆에 자세를 고쳐 앉은 페어가 대답을 기다리고 있으니까요.</p>

<p>무려 10시간 동안 이어지는 치열한 토론과 구현.
제가 페어의 의견을 존중하듯 페어도 제 의견을 존중해주는 것이 느껴집니다.
그래서 머릿속에 있는 생각을 점점 더 자주 공유하기 시작해요.
정신을 차리고 보면 어느새 저녁을 먹을 시간이 다가오죠. 주장을 마음껏 펼치기 힘들다고 해놓고 정신없이 얘기하다니.
이 모든 과정마저도 용기 내어 꺼내 보는 말 한마디에 추억으로 바뀝니다.</p>

<p>“근처에 제가 가는 단골 치킨집 있는데 같이 갈래요? 100% 만족 확실해요.”</p>

<p><br /></p>

<h3 id="고생하셨어요-이만-머지할게요-다음-미션-파이팅입니다">“고생하셨어요. 이만 머지할게요. 다음 미션 파이팅입니다!”</h3>
<p>코드 리뷰를 받다 보면, 리뷰의 마지막에 자주 보이는 표현입니다.
열정적으로 미션을 진행하고 난 후에 이 문장을 보면 기분이 좋아지죠.
여러분과 함께 많은 것을 배우면서 느끼는 감정과 비슷한 것 같아요.</p>

<p>앞으로 누군가 제게 왜 그리 바빠 보이냐고 묻는다면 대답이 달라지지는 않을 것입니다.</p>

<p>“나? 요즘 안 바빠… 그냥 조금 정신이 없네.”</p>

<p>하지만 우아한테크코스 한 달 생활기를 묻는다면 이렇게 대답할 거예요.</p>

<p><strong>“요즘 추억을 쌓아가며 정신없이 성장하고 있어.”</strong></p>

<p>허술한 주장이라도 같이 생각해보며 바로잡아 주는 크루들. 그리고 과분하다 싶을 정도로 칭찬을 해주는 크루들.
아직 부족한 점이 많지만, 덕분에 무럭무럭 성장한다는 게 느껴지네요. 정말 감사합니다.
그런데 우리는 이제 시작이니까, 앞으로 더 파이팅 해봐요!</p>

<p><img src="/img/2021-04-02/wooteco.003.jpeg" width="50%" />
<br /><br /><br /></p>

<h1 style="font-size:40px; border-bottom: 1px solid gainsboro;">소롱(최솔지)의 글 </h1>

<h2 id="무無의-미학">무無의 미학</h2>

<h3 id="우테코에는-내-이름이-없다"><strong>우테코에는 내 이름이 없다.</strong></h3>

<p>다른 크루들이 우테코에 합격하고 OT에 참여할 때까지 무엇을 했는지 궁금하다. 나에겐 그 기간이 없었다.</p>

<p>아침 9시, 백수로서는 꽤 이른 아침에 추가 합격 문자를 받았다. 처음 불합격했을 때는 그다지 아쉽지 않았다. 익숙해질 때도 됐다. 대신 합격 통보에는 익숙해질 기회가 없었다. 아침 먹는 내내 설렜다가, 당일 오후 2시가 OT라는 말을 듣고 당황했다.</p>

<p>OT 시작 전, 크루들의 사진과 닉네임, 좌우명이 지나갔다. 그 안에 내가 있어서 참 다행이었다.</p>

<p>무엇이 <code class="language-plaintext highlighter-rouge">있어서</code> 좋다고 설명하기는 쉽다. 그렇다고 없는 게 항상 나쁘지만은 않다. 없으면, 다른 좋은 일이 또 생기기 마련이다. 이번 기회에 <code class="language-plaintext highlighter-rouge">없어서</code> 좋다고 말해보려고 한다.</p>

<h3 id="우테코에는-규칙이-없다">우테코에는 규칙이 없다.</h3>

<p>우테코의 기본 생활 규칙은 단순하고 쉽다. 현대인으로서 무던하게 살아갈 만한 예의를 가지고 있다면야 어길 일이 없다. 데일리 스크럼과 수업, 특강 등을 제외하면 별다른 일정도 없다. 온라인일 때는 내가 언제 쉬러 가는지 확인할 사람도 없다. 중간에 산책하러 가거나 심지어 낮잠을 자도 된다.</p>

<p>지금까지는 모든 일정을 정형화하려고 노력해왔다. 딱딱 나눈 시간표를 봐야 안심했다. 눈앞에 과제가 있으면 다른 모든 일과가 사치스럽게 느껴졌다. 일과 쉼의 분리가 있는 삶이 열심히 사는 인생 같았다. 하지만 정해진 일정을 하나라도 지키지 못하면 내 삶으로 돌아갈 시간이 미뤄졌고, 결국 나는 더 불안해졌다.</p>

<p>그래서 처음에는 방종이 참으로 낯설었다. <em>진짜 이렇게 살아도 되나? 진짜 이렇게 살아도 되는구나!</em></p>

<p>시간표가 없어지니 나는 오히려 워커홀릭이 되었다. 끝없는 몰입과 집중이 탁 풀리는 사이의 순간을 사랑하게 됐다. 이제야 겨우 코딩과 내 삶이 어떤 균형을 찾아가는 기분이 든다. 학생이 아닌지도 오래되었는데 그동안 나는 왜 스스로를 옭아맬 규칙을 찾아다녔을까?</p>

<h3 id="우테코에는-경쟁이-없다">우테코에는 경쟁이 없다.</h3>

<p>어린 시절부터 인생은 경쟁의 연속이었다. 무의식중에 남의 실력을 점쳐보고, 이길 수 있을지 가늠하는 나쁜 습관을 길러왔다. 내가 우테코에서 가장 많이 한 말 중의 하나는 ‘저 사람은 왜 여기 있어?’ 아닐까. 그만큼 잘하는 사람이 많고, 자꾸 나와 비교하게 된다. 우테코는 나처럼 열등감 많은 사람이 스트레스 받기 아주 좋은 곳이다.</p>

<p>초반에는 강의가 너무 무서웠다. 나는 강의 내용을 따라잡기도 벅찬데, 채팅창에는 온갖 모르는 단어들이 난무했다. 알지도 못하면서 적어두기만 한 말들이 늘어갔다. 언제 다 공부해서 남들만큼 할 수 있게 될지 참 아득했다. 포비가 아무리 비교하지 말라고 해도 그게 잘 안됐다. 솔직히 말하면 2주차 즈음 울었다.</p>

<p>울고 나서 다시 2주 뒤에 포비의 멘탈 강의가 또 있었다. 그때 정말 감동받아서 딱 세 문장을 일기장에 적어놓았다.</p>

<p><em>작은 성공을 반복적으로 경험한다. 한 가지라도 꾸준히 지속하자. 위안으로 삼을 거리를 만들어라.</em></p>

<p>매일 미션과 추가 학습 목표를 세우는데 달성하기 쉽지 않았다. 마음먹은 만큼 못하면 또 우울해지곤 했다. 기준이 남에게 있으니 부담감만 더욱 늘어났다.</p>

<p>그래서 포비의 조언에 따라 사고를 조금 바꿨다. 온전히 나만의 기준을 만들었다. 책을 한 권을 읽든 한 줄을 읽든 <em>일단 읽었다고 치는 것이다.</em> 그리고 ‘오늘 뭐 그렇게 막살지는 않았어’하고 안심하며 잠들면 꽤 괜찮다.</p>

<p>이 글을 쓰면서 포비가 말하는 성공과 나의 성공이 다르리라는 생각을 잠깐 했다. 그래도 조금은 더 해야하지 않을까, 압박감이 자꾸 생겼지만 이내 접어두었다. 애초에 포비는 이런 부담을 주려고 한 의도가 아니라고 믿기 때문이다. 적어도 나는 ‘안 한 것보단 낫지’라는 위안으로 우테코 생활을 지탱해가고 있다. 처음에는 와닿지 않았던 말대로, 지금의 나는 어제의 나보다 나아졌으니까.</p>

<p>오롯이 나에게 집중하면 더 이상 남은 보이지 않는다. 이제 그들을 남이 아니라 다른 말로 칭하고 싶다. 우테코의 크루들은 나에게 도움을 주고, 내가 도움 줄 사람들이지 나의 적이 아니다. 이제 남이 없어졌으니 또 무엇이 생길지 기대된다. 없으면, 다른 좋은 일이 또 생기기 마련이다.</p>

<p><img src="/img/2021-04-02/wooteco.004.jpeg" width="50%" />
<br /><br /><br /></p>

<h1 style="font-size:40px; border-bottom: 1px solid gainsboro;">바다(조아라)의 글 </h1>

<h2 id="우아한테크코스-한-달-생활기">우아한테크코스 한 달 생활기</h2>

<h4 id="질문에도-용기가-필요하다">질문에도 용기가 필요하다.</h4>
<p>요즘 가장 절실히 느끼고 있는 말이다. 우아한테크코스에는 용기 있는 크루들이 많다.<br />
슬랙에서도 주저 없이 질문과 토론을 주고받고 강의 중에도 모르는 것이 생기면 바로바로 질문한다.<br />
사실 처음에는 이것 때문에 많이 힘들었다. 나에겐 <strong>두 가지 용기</strong>가 없었다.</p>

<h4 id="첫-번째-모르는-것을-모른다고-말할-수-있는-용기">첫 번째, 모르는 것을 모른다고 말할 수 있는 용기</h4>
<p>첫 번째 용기는 타인과의 관계에서 필요한 용기다.<br />
리뷰어에게 DM을 보낼 때도 초안을 쓰고 있는 날 보며 한 페어는 나에게 왜 이렇게 모든 일에 신중하냐고 물었다.<br />
상대가 한 말을 내가 잘 이해한 것이 맞는지, 내 질문이 이상하게 들리지는 않는지, 모든 것이 신경 쓰였다.</p>
<blockquote>
  <p>내가 이걸 몰라도 되는 걸까? ‘왜 이런 걸 물어보지?’라고 생각하면 어떡하지?</p>
</blockquote>

<p>질문할 용기가 없어서 모르는 것이 있어도 혼자 찾아서 해결하려고 했다.</p>

<p>코치와의 면담에서 고민을 얘기할 기회가 있어 이 얘기를 했다.<br />
워니는 어차피 학습을 위해 모인 곳이고 가르쳐주려고 있는 사람들이니 끊임없이 질문하라고 하셨다.<br />
그리고 <code class="language-plaintext highlighter-rouge">일주일에 두 번씩 코치들에게 질문하기</code> 라는 미션을 주셨다.<br />
<em>“제 닉네임 아세요?”</em> 같은 것도 질문에 포함된다면 이 미션은 성공한 것이라 할 수 있다.<br />
사소한 질문이어도 일단 대화를 시작하면 더 많은 질문을 할 수 있었다. 질문은 질문을 낳았다.</p>

<h4 id="두-번째-나의-지식수준을-정확히-마주할-용기">두 번째, 나의 지식수준을 정확히 마주할 용기</h4>
<p>두 번째 용기는 자신에게 필요한 용기다.<br />
질문을 하기 위해선 생각을 잘 정리해야 한다. 그러다 보면 자연스레 나의 지식들과 마주하게 된다.</p>
<blockquote>
  <p>이걸 왜 이렇게 했냐고 물어보면 어떻게 설명하지?</p>
</blockquote>

<p>어설프게 알고 있는 것들과 정확히 마주할 용기가 없었다. 그냥 일단 회피하고 싶었다.</p>

<p>페어 프로그래밍은 코드를 구현하는 시간보다 토론을 하는 시간이 더 긴 프로그래밍 방법이다.<br />
페어 프로그래밍을 하면 내 의견을 <strong>잘 말하는 법</strong>과 상대의 의견을 <strong>잘 듣는 법</strong>을 배울 수 있다.<br />
처음에는 갈등을 피하려고 토론을 피했다. 하지만 내 생각을 얘기했더니 의외로 갈등은 일어나지 않았다.<br />
그리고 토론을 통해 내가 어설프게 알고 있던 것들을 하나씩 채울 수 있었다.</p>

<h4 id="괜찮지-않아도-괜찮아">괜찮지 않아도 괜찮아</h4>
<p>미션을 진행할수록 조급하고 불안한 마음이 자주 들어 마음의 여유를 갖는 연습을 했다.<br />
햇살이 좋은 날, 혼자 걸으며 머릿속으로 스스로에 대해 회고를 하는 것이다.<br />
조급해하지 말자. 불안해하지 말자. 남들과 비교하지 말자.<br />
너무 괜찮은 사람이 되려고 하지 말자. 사람은 누구나 실수를 하고 부족한 부분이 있다.<br />
가끔은 이상한 질문을 해도 괜찮고, 괜찮지 않아도 괜찮다.</p>

<p>솔직히 말하면, 레벨 1을 마무리하는 지금도 내 의견을 말하는 것이 어렵다. 불안한 마음은 쉽게 없어지지 않는다. <br />
하지만, <em>‘지금 잘 가고 있는 걸까?’</em> 라는 생각은 당분간은 하지 않기로 했다. 일단 <strong>‘가고 있음’</strong> 에 집중하자.</p>

<p><img src="/img/2021-04-02/wooteco.005.jpeg" width="50%" /></p>
, 
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.016 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.017 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.018 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.018 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 우아한테크캠프 Pro 후기, https://woowabros.github.io/techcourse/2021/03/15/wootecamp-pro.html, , , 2021-03-15, , 0, <h2 id="2021년-대한민국-소프트웨어-업계-이야기">2021년. 대한민국 소프트웨어 업계 이야기</h2>
<p>지금까지 개발자가 이렇게 좋은 대우를 받았던 적이 있을까? 내가 개발자의 길을 걷기 시작했던 1990년대 후반에서 2000년 초반 벤처 붐이 일면서 잠깐 반짝했던 것 같다.</p>

<p>하루가 멀다 하고 “전 직원에게 몇 백만 원의 연봉을 인상하기로 했다.”, “몇 백만 원의 복지 포인트를 지원한다.”, “100% 원격 근무로 전환한다.”와 같은 뉴스가 들려오고 있다. 이 모든 뉴스들이 가리키는 것은 역량 있는 좋은 개발자를 유지하고 채용하고자 하는 간절함의 표현이다.</p>

<p>이와 같은 개발자의 처우 개선은 일반 사용자용 소프트웨어를 개발하는 서비스 개발 회사에 집중되고 있다. 물론 비서비스 개발 회사의 개발자에 대한 처우도 조금씩 나아지고 있지만 서비스 개발 회사의 처우 개선에 비해서는 부족한 현실이다. 그렇다 보니 서비스 개발 회사의 개발자와 솔루션, SI 개발자의 처우에 대한 격차가 점점 더 벌어지고 있다.</p>

<blockquote>
  <p>글 전개의 편의성을 위해 일반 사용자용 소프트웨어를 개발하는 회사로 사용자의 피드백을 받아 지속적으로 서비스를 개선해 나가는 회사, 소프트웨어가 회사의 매출에 기여하는 부분이 가장 큰 회사를 서비스 개발 회사로 지칭했으며, 그렇지 않은 SI, 업무용 소프트웨어를 개발 회사 등을 묶어 비서비스 개발 회사로 글을 전개했다.</p>
</blockquote>

<p>그렇다면 비서비스 개발 회사에서 일하는 개발자의 처우가 부족한 것이 개발자들의 열정과 역량이 부족해서 일까? 나는 그렇지 않다고 생각한다. 개발자의 길을 걷기 시작할 때의 열정과 역량은 서비스 개발 회사의 개발자와 비서비스 개발 회사 개발자의 비슷한 수준이다. 하지만 시간이 지나면서 역량의 차이가 발생하고, 처우 또한 열악한 상황이 많다 보니 열정 또한 떨어질 수밖에 없다.</p>

<p>비서비스 개발 회사의 개발자들의 역량 차이가 발생하는 가장 큰 이유는 개개인의 역량이 부족하기 때문이 아니라 일하는 환경 때문이다. 어떻게 성장하는 것이 좋은 개발자로 성장할 것인지에 대한 로드맵을 보고 배울 선배가 부족하며, 성장하려는 열정이 있더라도 어디서부터 어떻게 시작해야 할지 막막한 것이 현실이다. 물론 개인의 노력을 통해 극복할 수 있는 것 아니냐고 반문할 수 있지만 주어진 환경의 틀을 깨고 다른 길을 걷는 것은 상당한 용기와 혜안이 필요하다. 그만큼 역량 있는 개발자로 성장하는데 주변 환경이 중요하다.</p>

<p>앞에서 잠시 언급했지만 서비스 개발 회사들은 개발자를 채용하기 위해 정말 다양한 수단과 방법을 동원하고 있다. 네이버, 카카오와 같은 업계 1, 2위 회사도 개발자를 구하지 못하는 상황이다 보니 스타트업의 어려움은 말로 표현하기 힘들 정도다.</p>

<p>개발자에 대한 처우는 계속해서 개선되고 있지만 개발자 채용은 점점 더 힘들어지고 현실이다. 개발자의 처우가 개선되고 있다는 뉴스는 자주 보이지만 상당 수의 개발자는 피부로 체감하기 힘들다. 이 둘의 불일치를 어떻게 해소하면 좋을 것인가가 교육자로서 고민이었고, 이에 대한 한 가지 해결책이 “<a href="https://edu.nextstep.camp/c/lqsBs7x0">NEXTSTEP for Enterprise Pro</a>라는 채용 연계형 교육 과정을 운영하는 것이었다.</p>

<h2 id="우아한테크캠프-pro-시작">우아한테크캠프 Pro 시작</h2>
<p>나는 교육자의 길을 걷기 시작하기 전부터 대한민국 소프트웨어 생태계의 역량을 한 단계 높이려면 재직자에 대한 재교육이 필요하다고 생각했다. 지금까지 정부, 기업이 지원하는 거의 모든 교육은 취업자 교육에 집중되어 있다. 특히 국비지원 과정을 통해 무분별하게 많은 개발자들이 양산되고 있다. 정부, 기업 주도로 많은 소프트웨어 교육 과정을 운영하는 것도 의미 있다. 단, 이 같은 교육 과정을 통해 배출되는 교육생들의 역량이다. 짧은 기간 동안 집중적으로 학습한 소프트웨어 역량만으로 소프트웨어 회사들이 요구하는 역량을 갖추는 데는 한계가 있다. 단순히 취업만 성공했다고 끝나는 것이 아니라 이렇게 취업한 친구들이 다음 단계로 성장할 수 있는 환경을 만들어 주어야 한다. 계속해서 취업생 교육에만 집중할 것이 아니라 취업자 교육과 재직자 교육을 병행해 운영하는 것이 지금의 소프트웨어 개발자의 품귀 현상을 해소할 수 있는 방법 중의 하나이다.</p>

<p>2020년. 기업이 교육비를 지원하는 재직자에 대한 재교육 과정을 개설해 볼 수 있는 환경이 무르익었다고 생각했다. 오히려 더 일찍 시작했었어야 할 수도 있다.</p>

<p>교육생 입장에서는 교육비에 대한 부담을 최소화하면서 역량을 키우고, 좋은 회사로 이직할 수 있는 기회를 얻을 수 있고, 회사 입장에서는 부족한 개발자를 합리적인 비용으로 채용할 수 있다는 확신이 드는 순간 우아한형제들에 이 과정을 제안했다. 그렇지 않아도 개발자 채용에 대한 어려움을 호소하고 있던 상황이라 빠른 속도로 승인을 받을 수 있었다. 그렇게 우아한테크캠프 Pro 과정을 시작했다.</p>

<p><img src="/img/2021-03-15/wootecamp-pro-poster.jpg" alt="우아한테크캠프 pro 포스터" /></p>

<h2 id="우아한테크캠프-pro-교육-운영">우아한테크캠프 Pro 교육 운영</h2>
<p>우아한테크캠프 Pro 교육 과정을 통해 달성하고 싶었던 학습 목표는 크게 두 가지였다. 첫째는 짧은 9주 동안 많은 지식을 전달하는 데는 한계가 있기 때문에 꾸준하게 자기 주도적으로 학습함으로써 프로그래밍에 대한 즐거움을 느끼도록 하는 것이다. 즉, 약간은 떨어져 있는 열정을 다시금 되살리고 싶었다. 둘째는 소프트웨어 장인으로 성장해 나가기 위한 로드맵을 제시하는 것이었다.</p>

<p>교육 진행 방식은 NEXTSTEP의 모든 교육이 그러하듯 미션 기반, 코드 리뷰 방식으로 진행해 별반 다르지는 않았다. 단, 위 두 개의 목표를 달성하기 위해 몇 가지 장치를 두어 운영했다. 나는 100% 무상으로 지원하는 것이 교육 효과 측면에서 좋지 않을 수도 있다고 생각한다. 이런 철학 하에서 교육비에 대한 지원을 2단계로 나눠 운영했다. 프리코스라는 과정을 통해 선발된 교육생에 대해 50%의 교육비를 지원한다. 교육 과정을 마치고 40명 중 20명을 우수 수료생으로 선발해 30%의 교육비를 추가로 지원하는 구조로 운영했다. 이 같은 구조로 운영하는 것이 교육에 대한 참여도를 높여 학습 효과를 높일 수 있다고 생각한다.</p>

<p>또 다른 장치는 지식을 전달하기 위한 강의 외에 개발자의 삶, 커리어 패스와 개발자의 로드맵 설계, 현재 겪고 있는 고민들을 공유하고 소통할 수 있는 네트워킹 데이를 별도로 운영했다. 교육생들의 설문 피드백을 보면 이론 강의도 좋았지만 다른 개발자와 소통할 수 있는 이 네트워킹 시간을 통해 많은 공감과 자신감을 얻을 수 있었다고 한다. 앞으로 어떻게 성장해야 할 것인지, 살아가야 할 것인지에 대한 방향을 설정하는데 도움을 얻었다고 한다. 지금까지 함께 소통할 선배, 동료 개발자가 부족했던 개발자들에게 작으나마 도움이 되었다는 피드백은 교육자로 살아가는 나에게도 큰 보람으로 다가왔다.</p>

<h2 id="우아한테크캠프-pro-결과">우아한테크캠프 Pro 결과</h2>
<p>위와 같이 몇 개의 내적인 동기부여, 외적인 동기부여를 위한 장치를 만들고 교육을 운영한 결과는 내 기대 이상이었다. <a href="https://brunch.co.kr/@javajigi/19">Next Step - 온라인 후기</a> 글에서 볼 수 있듯이 NEXTSTEP은 몇 개의 데이터를 통해 교육생의 교육에 대한 만족도와 교육 효과를 측정하고 있다.</p>

<p>기존 재직자 과정 중의 하나인 <a href="https://edu.nextstep.camp/c/8fWRxNWU">클린코드를 위한 TDD with Java</a>의 NPS(Net Promoter Score)는 65 ~ 80%, 미션 완료율은 평균 20% 내외이다.</p>

<p><img src="/img/2021-03-15/cleancode-with-java.png" alt="cleancode-with-java" /></p>

<p>“클린코드를 위한 TDD with Java” 과정은 오프라인으로 진행할 경우 5주 동안 4개의 미션, 온라인은 8주 동안 4개의 미션을 진행해야 한다. 회사 생활과 병행해야 하기 때문에 교육 기간 동안 4개의 미션을 완료하기가 생각보다 쉽지 않다. “우아한테크캠프 Pro”는 이 보다 미션 난이도가 높고, 9주 동안 6개의 미션을 완료해야 하는 과정이라 모든 미션을 완료해 수료하기 훨씬 더 어려운 과정이다. 그럼에도 불구하고 “우아한테크캠프 Pro”에 대한 미션 완료율은 77.5%에 달한다. 이 과정을 시작할 때 50%만 넘겨도 의미 있겠다 생각했는데 무려 77.5%다.</p>

<p><img src="/img/2021-03-15/wootecamp-pro.png" alt="우아한테크캠프 pro" /></p>

<p>미션을 구현하고, 리뷰 요청을 하고 피드백을 받은 경험이 많으면 많을수록 교육에 대한 만족도가 높아진다. 그만큼 교육 과정을 통해 많이 배우고 성장했다고 생각하기 때문이다. 그래서일까? “본 과정을 다른 개발자에게 추천할 의향이 있는가?”라는 설문 결과를 통해 추출한 NPS 점수가 97%에 달한다. 지금까지 재직자 과정을 여러 번 운영해 봤지만 90%를 넘은 적은 처음이다. 그것도 가장 난이도가 높은 과정에서 말이다.</p>

<p>교육 결과는 좋았다. 그렇다면 이런 좋은 교육의 결과로 몇 명의 개발자가 우아한형제들 입사에 성공했을까? 최종 합격한 개발자의 수는 6명이다. 많다면 많고, 적다면 적은 수이다. 합격자의 수가 더 많았다면 우아한형제들도, 교육생들도 더 좋았겠지만 꼭 채용에 성공한 것만으로 우아한테크캠프 Pro 교육의 효과를 논하기는 힘들 것 같다.</p>

<p><strong>우아한테크캠프 Pro 교육 과정에 참여하면서 9주 동안 얻은 자신감, 프로그래밍에 대한 즐거움, 소프트웨어 장인에 도전하려는 개발자들이 남았다.</strong> 이 개발자들이 좋은 개발자로 성장해 대한민국 소프트웨어 생태계에 기여하는 모습을 보는 것이 우아한테크캠프 Pro 교육이 진정 효과가 있었다는 것을 증명할 수 있을 것이다. 그런 효과를 볼 수 있는 날이 오기를 기대해 본다.</p>

<h2 id="교육-과정-후기">교육 과정 후기</h2>
<blockquote>
  <p>“열정적으로 코딩을 할 수 있다.” 때문에 추천할 거 같습니다. 이번 2달 동안 코드리뷰를 받으면서 정말 열정적으로 코딩할 수 있는 경험이었습니다</p>
</blockquote>

<blockquote>
  <p>이렇게 몰입하며 즐겁게 코딩해볼 수 있는 과정이 우리나라에 없기 때문입니다.</p>
</blockquote>

<blockquote>
  <p>처음엔 본인이 알고 있던 것을 버리고 다시 새로 받아들이는 과정이 힘들 순 있지만, 힘든 만큼 모든 과정이 끝난 후 코드에 대한 관점이 바뀐 걸 느낄 수 있었습니다. 교육비는 배움에 비해 정말 적은 편이고, 2개월 동안의 짧은 과정이지만 개발 인생이 달라질 거라고 기대합니다.</p>
</blockquote>

<blockquote>
  <p>자기 성장이나 좋은 코딩 습관을 들이고 싶은데 어떻게 시작해야 할지 막막할 때, 혹은 구체적인 방법을 몰라 가이드가 필요하다면 아주 적절한 교육일 것 같아요. 하나의 주제를 가지고 다양한 사람들의 다양한 시각을 접할 수 있는 부분도 좋았습니다.</p>
</blockquote>

<blockquote>
  <p>확장성, 생산성, 신뢰성 높은 코드를 생성하면서 개발에 대한 자신감도 생기고, 유익함도 매우 큰 과정이다.</p>
</blockquote>

<blockquote>
  <p>앉아서 가만히 듣는 수업보다 직접 미션 기반 프로젝트를 진행하면서 교육을 들어서 수업 효과가 배가 된 거 같습니다.</p>
</blockquote>

<blockquote>
  <p>겉만 자바 개발자, 프로그래머가 아닌 진정한 소프트웨어 개발 전문가로서 자바를 사용하는 프로그래머로서 성장할 수 있는 좋은 교육이었습니다.</p>
</blockquote>

<blockquote>
  <p>대부분의 회사들이 개발을 잘하는 방법보다는 빨리하는 것을 원하는데 그 고정관념을 좀 깨줄 수 있을 것 같다.</p>
</blockquote>

<blockquote>
  <p>자신의 한계로 도전해볼 수 있는 좋은 기회라서 적극 추천하고 싶습니다. 항상 강의를 들으면서 100%를 배우진 못하지만 성장할 수 있는 계기, 생각의 틀을 깰 수 있는 계기를 만들어주는 기회라서 꼭 추천하고 싶습니다.</p>
</blockquote>

<blockquote>
  <p>이렇게 많은 시간을 꽉 차게 헛되지 않은 공부에 투자할 수 있는 건 인생에서 그리 많지 않은 기회라 생각합니다. 스스로 공부할 방법을 몰랐던 개발자에게 이정표가 되어주는 과정이고, 앞으로도 스스로 공부할 수 있는 힘을 길러주는 과정이었습니다.</p>
</blockquote>
, 
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.020 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.022 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.023 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.023 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.023 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.023 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.023 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 프로모션용 웹앱 빌더, 만다오, https://woowabros.github.io/woowabros/2021/03/08/mandao.html, , , 2021-03-08, , 0, <div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/blog-banner.png" />
  <span style="display: block; color:#808080; margin-top: 10px;">만다오 로고. 에디터임을 떠올릴 수 있는 펜촉에서 영감을 얻었습니다.</span>
</div>

<p>안녕하세요, 웹프론트개발그룹의 장해민입니다.</p>

<p>우아한 테크캠프를 무사히 마치고 입사 후 약 세달간 민태님, 은정님, 그리고 찬호님과 함께 프로모션용 웹앱 빌더 <strong>만다오</strong>를 만든 이야기를 공유하려고 합니다.</p>

<p><strong>만다오(Mandao)</strong>는 웹프론트개발그룹에서 즐겨하는 <em>카트라이더 러쉬 플러스</em>의 대표 캐릭터인 <strong>다오</strong>에서 이름을 따왔으며 <strong>만들어다오</strong>라는 뜻을 가지고 있습니다.</p>

<h2 id="프로모션용-웹앱-빌더가-무엇인가요">프로모션용 웹앱 빌더가 무엇인가요?</h2>

<p>배달의민족, 비마트 등 우아한형제들 서비스에서는 매일 다양한 프로모션이 진행됩니다. 쿠폰을 다운받거나 동영상을 시청하고 메뉴를 좌우로 스와이프하는 등 다양한 기능과 형태로 화면이 제작되고 있습니다.</p>

<p>지금까지는 디자인된 이미지를 잘라서 이어붙이고 쿠폰 다운로드 코드, 앱스킴 등의 연결 링크들을 직접 HTML 코드를 수정해가며 만들었습니다. 필요에 따라서는 프론트엔드 개발자가 직접 개발하기도 하죠.</p>

<p>코드를 복사하는 과정에서 실수가 발생할 수도 있고 동일한 작업을 베타와 운영 두 번에 걸쳐 진행하는 번거로움도 있었습니다. 또한 화면에 사용될 이미지와 배포될 결과물 파일도 직접 CDN 서버에 수동으로 올려야 했습니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/previous-workflow.png" />
  <span style="display: block; color:#808080; margin-top: 10px;">기존 워크플로우</span>
</div>

<h2 id="웹앱을-만드는-웹앱">웹앱을 만드는 웹앱</h2>

<p><strong>만다오</strong>는 이런 문제점들을 해결하기 위해 탄생한 <a href="https://ko.wikipedia.org/wiki/%EC%9C%84%EC%A7%80%EC%9C%84%EA%B7%B8" target="_blank">WYSIWYG</a> 방식의 웹 에디터입니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/preview.gif" />
</div>

<h3 id="주요-기능">주요 기능</h3>

<ul>
  <li>워크스페이스에서 캘린더뷰로 프로모션을 열람하고 관리할 수 있습니다.</li>
  <li>텍스트, 이미지, YouTube, Lottie, 회전목마 등의 블록 단위로 화면을 구성하고 스타일링할 수 있습니다.</li>
  <li>그룹을 사용하여 복잡한 형태의 레이아웃을 만들 수 있습니다.</li>
  <li>쿠폰 다운로드 코드를 생성하고 버튼에 연결할 수 있습니다.</li>
  <li>프로모션 화면에 사용될 이미지 등의 파일을 자동으로 S3에 업로드합니다.</li>
  <li>베타와 운영 두 가지 배포를 재작업 없이 동시에 할 수 있습니다.</li>
  <li>배포 후 프로모션 URL을 제공합니다.</li>
  <li>… 더욱 다양한 기능이 앞으로 계속 추가될 예정입니다.</li>
</ul>

<h2 id="단순하고-직관적인-작업-빠른-결과">단순하고 직관적인 작업, 빠른 결과</h2>

<p>사용자에게 단순한 프로그램을 만들기 위해서 개발자는 복잡한 과정을 거쳐야합니다. 개발자가 편해지면 사용자가 불편해지기 마련입니다.</p>

<p>만다오로 프로모션을 진행하는 과정은 매우 간단합니다. 화면을 구성하고 배포하면 끝. 많은 과정들이 생략되고 일일이 검증할 필요가 없어지죠. 지금까지 직접 했던 수작업들이 만다오에서는 자동으로 이루어집니다. 구성 작업이 끝나고 만다오에서 배포하면 최종적으로 이벤트 웹서버에 프로모션 앱을 구성하는 메타 정보가 저장됩니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/mandao-promotion-workflow.png" />
</div>

<h3 id="만다오-블록">만다오 블록</h3>

<p>만다오에서는 화면을 구성하는 요소 하나를 <strong>블록</strong>이라고 부릅니다. 메타 정보에는 쿠폰 등의 프로모션 데이터뿐만 아니라 가장 중요한 화면을 구성하는 블록 데이터가 저장되는데요, 모든 블록은 동일하게 Base를 상속하며 크게 Container와 Container가 아닌 것 두 가지로 구분됩니다. Container는 다른 블록을 자식으로 가질 수 있는 블록이며 Container를 자식으로 가질 수도 있습니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/mandao-blocks-structure.png" />
</div>

<p>프로모션 페이지 제작에 특화되었기 때문에 디자인 도구급의 자유도는 제공하지 않고 document flow에 따라 쌓이는 방식을 채택했습니다. 하지만 flex의 유연함 덕분에 Container를 중첩하여 이론상 모든 형태의 레이아웃을 만다오에서 만들 수 있습니다.</p>

<blockquote>
  <p>복잡한 사용성을 배제하고 진입 장벽을 낮추기 위해 현재는 한 단계까지만 에디터에서 지원합니다.</p>
</blockquote>

<p>만다오 블록은 DOM 구조와 매우 유사하지만 개발자가 아닌 사람들도 쉽게 사용하고 이해할 수 있게 캡슐화했으며 스타일은 CSS의 그것을 그대로 사용하지 않고 Web 이외의 환경에서도 렌더링할 수 있게 일반화했습니다.</p>

<p><strong>회전목마</strong></p>

<p>만다오 회전목마는 WYSIWYG 방식을 가장 잘 활용한 부분이라고 할 수 있습니다. 코드 작성이나 복잡한 설정 없이 회전목마를 손쉽게 구성할 수 있습니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/carousel.gif" />
</div>

<p><strong>YouTube</strong></p>

<p>요즘 핫한 배민 선물하기를 비롯해 이벤트에 YouTube 영상을 자주 삽입하는데요, 만다오에서는 YouTube URL만 있으면 임베드 코드 생성부터 미리보기까지 한 번에 가능합니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/youtube.gif" />
</div>

<h3 id="숨겨진-또-하나의-만다오-만다오-러너">숨겨진 또 하나의 만다오, 만다오 러너</h3>

<p>만다오에서 배포 후 제공되는 URL을 통해 프로모션 화면을 바로 확인해볼 수 있는데요, 만다오 러너가 배포된 메타 정보를 읽어와 화면을 렌더링하고 쿠폰 다운로드 등의 로직을 실행하게 됩니다. 만다오 러너는 에디터에서 편집 기능을 모두 제거한 형태의 렌더러 버전이라고 볼 수 있습니다. 런타임 크기를 줄이기 위해 만다오 러너에서는 React가 아닌 Preact를 사용합니다.</p>

<h2 id="uiux">UI/UX</h2>

<p><a href="https://blog.jhaemin.com/frontend-designer" target="_blank">모든 사람이 디자인을 해야 한다는 신념</a>이 있고 웹프론트개발그룹에 디자이너가 없기도 해서 만다오를 최대한 아름답고 사용하기 쉽게 만들기 위해 신경 썼습니다. 사용자 경험을 고려할 때 팀원들과 민태님의 의견이 많은 도움이 되었습니다.</p>

<p>모든 UI는 최소한의 형태로 유지됩니다. 필요할 때 모습이 나타나고 그렇지 않을 때 사라지죠. 평면처럼 보이지만 다들 저마다의 깊이를 가지고 있습니다. 사용자는 자연스럽게 각 UI의 계층 구조를 감각적으로 이해할 수 있습니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/tabs.gif" />
  <span style="display: block; color:#808080; margin-top: 10px;">탭</span>
</div>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/toolbar.gif" />
  <span style="display: block; color:#808080; margin-top: 10px;">툴바</span>
</div>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/dialog.gif" />
  <span style="display: block; color:#808080; margin-top: 10px;">만다오 다이얼로그</span>
</div>

<h3 id="만다오-핸들">만다오 핸들</h3>

<p>복잡한 DOM 구조를 WYSIWYG으로 편집할 때 좋은 사용자 경험을 제공하기 위해 많은 고민을 했습니다. 트리 형태로 중첩되는 HTML 특성상 각 계층간의 간격이 없으면 마우스 포인터로 요소를 선택하는 것은 불가능합니다. 트리의 깊이가 깊어질수록 상태는 더욱 심각해지죠. 이런 문제를 해결하기 위해 만다오 핸들을 디자인했습니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/handle.gif" />
</div>

<p>만다오 핸들은 최소한의 UI로 전체적인 페이지의 형태를 유지하면서 각 요소를 선택할 수 있는 방법을 제공합니다. 핸들에 호버하면 요소의 이름을 힌팅하면서 어떤 영역이 선택될 지 보여줍니다. 미리보기 화면에서 핸들은 사라지며 온전한 페이지를 확인할 수 있습니다. 이 외에도 사용자 경험을 향상시키기 위해 많은 고민을 한 흔적들이 구석구석 숨어있고 앞으로 더욱 섬세하게 다듬어갈 예정입니다.</p>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/promotion-screenshots.png" />
  <span style="display: block; color:#808080; margin-top: 10px;">그동안 배민앱을 이용하면서 지나쳤을 수 있는 다양한 프로모션이 만다오로 제작되었습니다.</span>
</div>

<h2 id="마케터님들의-만다오-사용-후기">마케터님들의 만다오 사용 후기</h2>

<p><strong>이다하 (배민마케팅팀)</strong></p>

<blockquote>
  <p>마케터가 기본적으로 따로 따로 하고 있던 쿠폰 업무, 이미지 업로드, 서버 배포 등의 캠페인 실행의 전 과정이 하나로 통합 되었다는 부분이 가장 좋았어요. 번거로운 일이 줄어드니까 일의 효율이 올라가고, 정말 필요한 일에 더 집중도 할 수 있게 되었습니다. 또 사용자의 편의를 생각한 UI 구성 덕분에 새로운 마케터가 와도 쉽게 적응할 수 있다는 점도 너무 좋습니다.</p>
</blockquote>

<p><strong>박지영 (배민마케팅팀)</strong></p>

<blockquote>
  <p>만다오는 마케터가 수동으로 하던 업무를 손쉽게 해결할수 있도록 해준다는 점에서 업무의 효율성에 많은 기여를 하고 있습니다. 직관적인 UI와 편리한 사용성도 좋지만, 저는 개인적으로 메인에 이벤트 일정을 한데 모아 보여주는 달력 지면이 참 좋았습니다.
프로모션이 날이 갈수록 많아지고 복잡해져서 과거 프로모션을 참고하거나, 지금 운영 중인 프로모션이 어떤 것이 있는지 한 번에 파악하기 어려웠는데 그 부분을 해소시켜주었어요. 추후에 만다오로 모든 프로모션 페이지를 만들게 된다면 누구든 만다오에 들어와서 이벤트 일정을 살필 수 있을 것 같아 더욱 기대가 됩니다.</p>
</blockquote>

<p><strong>이동민 (배민마케팅팀)</strong></p>

<blockquote>
  <p>만다오가 있기 전에는 이벤트를 운영하는 데 시간이 많이 필요했습니다. 한정된 시간 중 마케터가 이벤트 기획을 하는 시간이 상대적으로 줄어들 수 밖에 없었는데요. 만다오가 이벤트 세팅과 운영 시간을 줄여 주니까 더 중요한 것에 집중할 수 있게 된 것 같습니다. 또한 유저에게 실제 어떻게 노출되는지를 만다오에서 미리 미리 확인할 수 있다는 점이 참 좋은 것 같아요! 만다오는 매주 업데이트가 되고 있는데요. 더 좋은 기능을 위해 노력해주시는 분들께 정말 감사드립니다.</p>
</blockquote>

<p><strong>최혜영 (배민마케팅팀)</strong></p>

<blockquote>
  <p>만다오 덕분에 이벤트 페이지 노출까지 각기 따로 따로 진행했던 4~5개의 과정이 만다오 페이지 안에서 모두 가능해졌어요. 별개로 이벤트페이지 어드민 같은 딱딱한 이름이 아니라 만다오라는 귀여운 이름도 맘에 쏙 듭니다. 메인의 달력 지면에서 페이지별 미리보기가 가능한 것 뿐만 아니라 각 설정 복사, 디바이스 목업 미리보기, 배포 담당자 상세와 배포 시간 목록까지 이벤트 페이지 배포 자체의 본 기능 뿐만 아니라 직접 설정하고 운영하는 측면에서도 더욱 편의성을 살려주신 디테일에 감동했습니다. (최고에요)</p>
</blockquote>

<p><strong>이수진 (배민마케팅팀, 만다오 팬)</strong></p>

<blockquote>
  <p>만다오를 처음 접했을 때 그야말로 ★신.세.계★였습니다. 그동안 이벤트 세팅을 위해 여러 프로그램 (Cyberduck, Filezilla, Jenkins…) 을 열고 닫기를 반복했습니다. 긴급하게 이벤트 수정을 하거나 세팅이 필요할 때도, 오랜 시간이 소요되어 민첩하게 대응하기 어려웠습니다.
하지만 이제는 만다오 덕분에 누구나 쉽고 빠르게 이벤트 세팅이 가능해졌고 업무 효율도 증대되었습니다. 이외 기종별 프리뷰, 캘린더, 복사하기 등과 같이 사용자를 배려해주신 섬세한 기능들은 늘 이용하면서 감동받고 있습니다. 만다오를 만들어주신 모든 분들께 진심으로 감사 인사를 드리며 앞으로도 잘 부탁드리겠습니다!!!!!</p>
</blockquote>

<h2 id="마치며">마치며</h2>

<p>오래 전부터 에디터 개발에 대한 깊은 갈망이 있었는데요, 만다오를 만들며 해소가 되고 있습니다. 만다오는 이제 버전 <strong>1.0</strong>으로 막 출발을 한 상태이며 앞으로 다양하고 재미있는 에디터 기능과 타 서비스와의 연동 계획이 많이 준비되어있으니 기대해주세요!</p>

<p><del>나중에 만다오로 만다오를 만들어ㅂ…</del></p>

<hr />

<h3 id="다음은-각각-만다오의-워크스페이스캘린더뷰와-인프라를-도맡아-개발해주신-이찬호님과-전은정님의-글입니다">다음은 각각 만다오의 워크스페이스(캘린더뷰)와 인프라를 도맡아 개발해주신 이찬호님과 전은정님의 글입니다.</h3>

<h2 id="이찬호님의-글">이찬호님의 글</h2>

<ul>
  <li>우아한 형제들에 입사하기위해 진행한 우아한 테크캠프에서는 2개월동안 4개의 프로젝트를 진행했습니다. 프론트엔드 정수를 갈고 닦기 위해 진행하는 모든 프로젝트에서는 라이브러리 사용이 금지되었죠. 그 덕에 저희는 드래그앤 드롭, store를 위한 pub/sub 패턴, routing등을 직접 javascript로 구현하고, 화면에서 보여주는 모든 컴포넌트 디자인을 css로 해야했습니다.</li>
  <li>이 과정을 거치고 입사한 신입개발자들이 처음 진행하게된 프로젝트가 만다오입니다. 어떤 기능을 구현하기 위해 이것과 비슷한 기능을 하는 잘 만들어진 라이브러리가 있는지 확인하기 전에 <strong>어떻게 하면 구현할 수 있을까</strong>? 고민하기 시작했습니다.</li>
</ul>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/timeline.png" />
</div>

<h3 id="타임라인-블럭-쌓기">타임라인 블럭 쌓기</h3>

<ul>
  <li>드디어 개발자로 입사하기위해 갈고 닦았던 알고리즘 실력을 보여줄 때가 됐습니다.</li>
  <li>알고리즘 문제와 개발상황에서 문제를 해결하기 위한 알고리즘은 시작부터 달랐습니다.</li>
</ul>

<div style="text-align: center; margin: 50px 0;">
  <img src="/img/2021-03-08/mandao/algorithm.png" />
</div>

<blockquote>
  <p>(백준에 없는 문제입니다)</p>
</blockquote>

<ul>
  <li>이런식으로 문제를 명확하게 정의해주지 않고, 테스트케이스를 제공해주지도 않으며, 이 문제의 치명적인 엣지 케이스도 알려주지 않았습니다.</li>
  <li>문제 정의부터 필요했습니다.
    <ul>
      <li>시간순으로 보여야 한다. 이벤트 시작시간 순으로, 시작시간이 같다면 끝나는 시간 순으로</li>
      <li>겹치면 다음칸으로</li>
      <li>최대 이벤트 개수는 몇 개가 될까? → 배민에서 평생동안 프로모션을 몇개 진행 할까? → 최대로 배치해야하는 블록의 개수가 몇개가 될까?</li>
    </ul>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Visit</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="c1">// 1.정렬</span>
<span class="nx">sortArray</span><span class="p">(</span><span class="nx">blockList</span><span class="p">)</span>
 
<span class="nx">blockList</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">block</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span> 
    <span class="c1">// 2.예외 처리</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">block</span><span class="p">.</span><span class="nx">endIndex</span> <span class="o">&lt;</span> <span class="nx">timeLineFirstDateIndex</span><span class="p">)</span>
      <span class="k">return</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">block</span><span class="p">.</span><span class="nx">startIndex</span> <span class="o">&gt;</span> <span class="nx">timeLineEndDateIndex</span><span class="p">)</span>
      <span class="k">return</span>
 
    <span class="c1">// 3.블록 배치</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">index</span> <span class="o">&lt;</span> <span class="nx">Visit</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">index</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">block</span><span class="p">.</span><span class="nx">startIndex</span> <span class="o">&gt;=</span> <span class="nx">Visit</span><span class="p">[</span><span class="nx">index</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">Visit</span><span class="p">[</span><span class="nx">index</span><span class="p">]</span> <span class="o">=</span> <span class="nx">block</span><span class="p">.</span><span class="nx">endIndex</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">newVisit</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">block</span><span class="p">.</span><span class="nx">endIndex</span><span class="p">)</span>
        <span class="k">break</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>

<ul>
  <li>문제는 거창했지만 코드는 간단하네요.</li>
  <li>저는 블럭을 쌓기 위해 각 층의 상태를 나타내는 1차원 number배열인 visit을 선언하고, 모든 블럭을 돌면서 검사를 진행했습니다.</li>
</ul>

<ol>
  <li>정렬입니다. 들어오는 블럭들을 시작시간순으로 정렬, 시작시간이 같다면 끝나는 시간으로 정렬 해줍니다.</li>
  <li>예외처리입니다. 블럭들이 타임라인 밖으로 나간 경우입니다. 이런 블럭들은 타임라인에서 보여주지 않아야하므로 제외했습니다.</li>
  <li>예외처리를 하고 남은 블록들은 새로 들어오는 블럭의 시작 index가 현재 층의 index보다 크거나 같으면 그 자리에 블록을 넣습니다. 블럭을 넣고 현재 층의 index를 넣은 블럭의 끝나는시간index로 바꿔주면 끝입니다.
    <ul>
      <li>만약 시작 index가 더 작다면 (겹치는 상황) 새로운 층에 블럭을 넣어줍니다</li>
    </ul>
  </li>
</ol>

<ul>
  <li>이렇게 타임라인에 블록은 예쁘게 쌓이게 됐습니다.</li>
</ul>

<h2 id="전은정님의-글">전은정님의 글</h2>

<p>안녕하세요!</p>

<p>웹프론트개발그룹의 신입 개발자 전은정입니다. 개발자로의 전직을 희망한지 14개월차, 입사한지는 4개월차 🤣 에 불과한 꼬마 개발자이기에 <del>기술블로그이지만</del> 기술적인 내용을 논하기엔 벅차다는 생각이 드네요. 입사 후 첫 프로젝트를 진행하며 느낀 점 위주의 회고를 풀어볼까 합니다.</p>

<h3 id="-웹프론트개발그룹-을-살짝-홍보합시다">😇 웹프론트개발그룹 을 살짝 홍보합시다</h3>

<p>일단 저는 우아한형제들에 소속된 대부분의 프론트엔드 개발자분들과는 달리 웹프론트개발그룹 에만 소속되어 있는데요, 여러 가지 역할 중에 하나가 공통 도구 개발이라고 할 수 있을 거 같아요.</p>

<p>현업 개발자가 된 지 얼마 되지 않았긴 하지만 우형이 아니더라도 다양한 서비스의 최전선에서 개발을 하고 계신 분들은 하루하루 개발하고 처리해야 할 피처, 이슈, 버그 들이 가득하다고 알고 있어요.</p>

<p>그런데 회사 차원에서는 꼭 불특정 다수의 고객을 마주하게 되는 서비스와 직접 연걸된 것은 아니더라도 프론트엔드 개발이 필요한 부분이 많이 있을거에요. 여러가지 이유로 우형에서는 서비스를 하는 팀에는 소속되지 않은 프론트엔드 개발자로 구성된 이러한 조직을 꾸리게 되었는데, 그 중 하나가 공통 도구 개발이고, 점차 디자인시스템 등으로 확장되어 갈 거 같아요.</p>

<h3 id="-백오피스-개발은-생각보다-훨씬-즐거운-거였어요">🤩 백오피스 개발은 생각보다 훨씬 즐거운 거였어요</h3>

<p>사실 저는 개발자를 준비하면서 서비스를 하는 회사에 가고 싶다는 생각만 갖고 있었지 백오피스 개발에 대해서는 특별히 관심을 가져본 적이 없었어요. 아는 건 쥐뿔도 업으면서 ‘백’오피스라고 하니 왠지 모르게 지루하고 무료하지 않을까 라는 막연하고 어리석은 생각만 가지고 있었던 거 같아요. 하지만 실제로 만다오 프로젝트를 진행하면서 이런 생각이 모두 뒤집히게 되었는데, 다음의 이유들이 큰 역할을 했다고 생각해요.</p>

<ol>
  <li>
    <p>서비스에 대한 니즈가 너무나 정확해</p>

    <p>해민님이 배민 앱에서 프로모션 화면이 제작되는 기존의 방식을 소개해주었는데요, 처음 만다오 프로젝트를 시작하면서 꼬마 개발자로 가득한 우리 팀의 정신적, 기술적 지주인 민태님한테 이러한 상황을 공유받았을 때는 정말 충격 그 자체였던 거 같아요. 지금까지 수고해오신 디자이너와 마케터 분들이 존경스럽고 왠지 모르게 죄송한 마음이 들었어요.</p>

    <p>제가 서비스의 일선에서 개발을 해본 적은 없지만 상상을 해본다면, 앱에 대한 후기로 니즈를 파악할 수도 있겠지만 대부분의 경우에는 고객들에게 이런 것이 필요할거야, 이런건 불편할 거 같아 라는 추측에 기반하게 되지 않을까 싶어요.</p>

    <p>백오피스 서비스는 사용자 수가 많진 않아도 우리가 바로 옆에서 함께 하는 분들을 위한 서비스인만큼 현재의 상태가 어떤 불편함을 야기하고 있는지에 대한 명확한 인지가 가능해서인지 서비스에 대해 더욱 주체적으로 고민하는 개발자가 잠시라도 되어볼 수 있는 좋은 기회가 되었다고 생각해요.</p>
  </li>
  <li>
    <p>고객의 피드백이 바로 옆에서</p>

    <p>만다오를 개발하면서 손에 꼽을만한 기억에 남는 순간 중 하나는 단연코 마케팅 팀에 만다오를 처음으로 시연했던 순간이라고 할 수 있어요 (오프라인으로 진행하지 못한 것이 천추의 한이에요). 당시에 만다오는 여전히 갈 길이 먼 상태였음에도 불구하고 마케터 분들의 반응은 가히 폭발적이었어요. 온라인 시연을 마친 후에 팀원들끼리 마케터와 개발자는 다른 종족이구나, 그들의 텐션은 저 세상에 있구나 하며 우스갯소리를 했었는데 딱히 틀린 말은 아니겠지만 그만큼 만다오에 대한 니즈가 넘치고 있었다는 반증이었구나 싶어요.</p>

    <p>개발자를 꿈꾸며 자체 서비스를 하는 회사에 들어가고 싶다는 생각을 했던 이유 중에 하나가 고객의 생생한 피드백 에 있었는데, 이번 만다오 개발은 그보다 훨씬 더 선명하고 즉각적인 피드백을 전달받을 수 있는 행복한 기회였던 거 같아요.</p>

    <p>( 열화와 같은 성원으로 개발 동력을 채워주신 마케팅 팀에 감사 인사드려요 🥰 )</p>
  </li>
  <li>
    <p>서비스의 효과가 내 눈 앞에</p>

    <p>만다오를 런칭한 뒤에 디자이너와 마케터 분들이 만다오를 통해 작업하는 상황을 저희는 가끔씩, 몰래몰래 지켜보곤 했어요. 누가 어떻게 사용하고 있고, 이전에는 어떤 문제가 있었는데 만다오를 통하니까 어떤 변화들이 있는지를 직접 보고 알 수 있으니까 너무나 뿌듯했어요.</p>

    <p>사용자가 모두 같은 회사 식구들이다보니 편리하다는 감사 인사, 추가적인 요청, 우리 팀도 이용하고 싶다는 문의 등등이 팀장님을 통해 직접적으로 들려왔고, 저희도 모르는 사이에 새로운 프로모션이 만다오에 추가되어서 고객들을 맞이하고 있었어요.</p>

    <p>우리의 결과물이 고객들을 잘 만족시키고 있는걸까? 에 대한 답이 직접적으로 확인이 된다니 말해 뭐해, 참말로 즐겁네요.</p>
  </li>
</ol>

<h3 id="-백오피스-개발은-즐거웠지만-인프라는-어려워-어디까지-퍼블릭하게-오픈되어도-되는지-모르겠다">🤯 백오피스 개발은 즐거웠지만 인프라는 어려워 (어디까지 퍼블릭하게 오픈되어도 되는지 모르겠다)</h3>

<p>입사 후 첫 프로젝트였던 백오피스 개발이 좋고 행복하고 즐거운 기회였다고 열심히 얘기했지만 쓴 맛도 그만큼 가득했던 것 또한 참트루입니다.</p>

<p>만다오 핵심 역할이 몇 가지 있겠지만 그 중에서도 핵심은 ‘자동화’에 있다고 생각합니다. 베타/운영 환경에 따른 중복 업무를 제거하여 생산성를 올리고 오류 가능성을 줄이는 것이지요. 이는 보안을 위해 베타/운영 환경이 분리되어 있기 때문에 필연적으로 발생하는 이슈였습니다.</p>

<p>만다오를 런칭하더라도 이 부분이 해결되지 않으면 결국 마케터 분들은 코드로부터 해방될 뿐, 같은 작업을 두 번 해야하는 운명은 피할 수 없는 것이었어요. 이를 해결하기 위해 인프라, 보안팀 등 어벤저스와 같은 여러 유관 부서와의 논의가 진행되었고, 만다오 서비스의 특성과 필요가 인정되어 새로운 인프라를 개척하기까지에 이르게 되었어요.</p>

<p>이전까지는 사내 시스템이라고 해봐야 공통인증시스템을 사용해 본 것이 전부였는데, 아예 새로운 인프라를 구축하는 과정은 정말 신세계였어요. 신입 개발자인 저에게는 외계어를 엿들으며 역사적인 순간 (?) 의 산 증인이 되는 좋은 기회가 되었어요. AMI, Security Group, 다양한 권한 설정 등 이번 기회가 아니었으면 최소 몇 달 간은 존재의 여부도 모르고 관심도 갖지 않았을 여러 개념들을 접하게 되었습니다. 언젠가는 제가 이런 것들을 설명할 수 있는 그 날이 오면 좋겠어요.</p>

<p>하지만 어벤저스와 같은 유관 부서의 지원에도 불구하고 인프라 이슈는 런칭 전 날까지 이어졌는데요. 우아한 테크캠프의 커다란 교훈, ‘배포를 미리, 자주 하자’ 를 뼛 속 깊이 새기게 되었습니다. 배포를 계속 실패하다가 드디어 성공! 하고 나면 서비스의 이쪽에서 문제가 터지고, 해결! 집에 가자 하면 저쪽이 부서지고, 도장깨기를 하며 하마터면 밤을 지새울 뻔 했습니다. 정말 많은 분들이 도움을 주셨지만 그 중에서도 특히 밤 늦게 까지 도움주신 채용님께 감사 인사를 전하고 싶습니다..</p>

<h3 id="-만다오는-아직까지-순항중">🎊 만다오는 아직까지 순항중</h3>

<p>만다오를 런칭한 지 이제 겨우 일주일 째입니다. 아직까지는 순항하고 있네요. 런칭하는 날에 모니터링보드를 십수번씩 드나들었던 것을 생각하면 이제 정신 건강도 잘 지켜지고 있습니다.</p>

<p>첫 프로젝트 시작의 설렘부터 기쁨, 고난과 역경, 런칭 전후의 초조함까지 4개월이 안되는 시간동안 개발자로서의 한 사이클을 진하게 경험한 기분이 들어요. 먼 훗날 이 글과 만다오 소스코드를 보며 이불킥 할 날이 오겠지만 지금은 일단 기쁘고 뿌듯한 마음만 가지고 앞으로도 만다오가 열심히 일 해 주기를 바랄 뿐입니다.</p>
, 
01:45:49.030 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.031 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.033 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.034 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.037 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.038 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.039 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.039 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 검색을 위한 데이터 다루기, https://woowabros.github.io/woowabros/2021/03/02/search-system.html, , , 2021-03-02, , 0, <blockquote>
  <p>안녕하세요. 우아한형제들 검색개발팀 정철입니다.</p>

</blockquote>

<p>배달의민족 검색시스템에서 검색에 사용되는 데이터를 적재하면서 경험했던 어려움과 해결했던 방법을 공유하고자 합니다.</p>

<h2 id="검색시스템이란">검색시스템이란?</h2>
<p><code class="language-plaintext highlighter-rouge">먹고 싶은 음식을 찾는 첫 단계</code> <br />
배달의민족에서 검색시스템은 주문하고 싶은 가게 또는 메뉴를 빠르게 찾을 수 있도록 도와주는 여러 기능을 개발하고 있습니다.</p>
<ul>
  <li>검색 기능</li>
  <li>인기검색어</li>
  <li>1인분, 채식 등의 테마 지면 리스팅</li>
  <li><code class="language-plaintext highlighter-rouge">배달 빠른 순, 배달팁 낮은 순</code>과 같은 정렬과 <code class="language-plaintext highlighter-rouge">최소주문금액, 쿠폰, 예약</code>등의 필터 기능</li>
</ul>

<div style="text-align: center;">
  <img src="/img/2021-03-03/s1.jpg" /> <span style="display: block; color:#808080;">검색개발팀이 제공하는 서비스</span>
</div>
<p><br /></p>

<p>단순하다고 생각될 수 있는 시스템이지만 실시간으로 가게에 대한 정보를 동기화하기 위해서 십여개의 외부시스템으로부터 실시간 정보를 저장해야 하며, 시간, 위치를 기반으로 복잡한 수식으로 가게의 여러정보를 계산해야하는 복잡한 시스템입니다.<br /><br /></p>

<h2 id="추가되는-서비스-늘어나는-과부하">추가되는 서비스, 늘어나는 과부하</h2>
<p>검색시스템은 위의 소개했던 것과 같은 서비스를 제공하기 위해서 광고, 메뉴, 리뷰, 통계… 등 십여 개의 데이터를 aws의 SQS를 사용하여 수신하고 이를 검색엔진 <code class="language-plaintext highlighter-rouge">Elasticseach</code>에 저장하고 있습니다.<br /></p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s2.jpg" /><span style="display: block; color:#808080;">데이터 수신 구조</span>
</div>

<p><br />
초기 시스템 설계 시 들어오는 데이터의 양이 그렇게 많지 않았고 예측 가능했기 때문에 개별적으로 들어오는 이벤트를 건바이건으로 update request를 만들어서 반영하였습니다.<br /></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 가게 이벤트 수신</span>
<span class="nd">@SqsListener</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"shopSqs"</span><span class="o">,</span> <span class="n">deletionPolicy</span> <span class="o">=</span> <span class="no">NEVER</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">tagsUpdateListen</span><span class="o">(</span><span class="nd">@Payload</span> <span class="nc">ShopChangeEvent</span> <span class="n">shopChangeEvent</span><span class="o">,</span> <span class="nc">Acknowledgment</span> <span class="n">acknowledgment</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">shopElasticsearch</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">createUpdateRequest</span><span class="o">(</span><span class="n">shopChangeEvent</span><span class="o">));</span>
<span class="o">}</span>
<span class="o">...</span>
<span class="c1">// 리뷰 이벤트 수신</span>
<span class="nd">@SqsListener</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"reviewSqs"</span><span class="o">,</span> <span class="n">deletionPolicy</span> <span class="o">=</span> <span class="no">NEVER</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">tagsUpdateListen</span><span class="o">(</span><span class="nd">@Payload</span> <span class="nc">ReviewChangeEvent</span> <span class="n">reviewChangeEvent</span><span class="o">,</span> <span class="nc">Acknowledgment</span> <span class="n">acknowledgment</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">shopElasticsearch</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">createUpdateRequest</span><span class="o">(</span><span class="n">reviewChangeEvent</span><span class="o">));</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">POST</span><span class="w"> </span><span class="err">baemin-search/_update/</span><span class="mi">1234567</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"doc"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"shopName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"배민의 맛집가게"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"송파구 방이동 44-2"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>하지만 가게가 증가함에 따라 가게가 오픈하는 시간대나 주문이 많아서 메뉴 품절 등의 상황이 많이 발생하는 경우에는 이벤트를 많이 수신하게 되었고 그에 따라 모든 부담이 Elasticsearch에 집중되면서 Elasticsearch Writer Thread Pool이 가득 차서 request가 rejected 되는 문제와 Disk I/O 문제로 cpu 수치가 기하급수적으로 상승하는 문제가 발생하였습니다.<br /></p>

<p>이런 상황 속에 현재 상태를 유지하기도 어려워졌고 더불어 <code class="language-plaintext highlighter-rouge">배달 빠른 순, 배달팁 낮은 순</code>정렬/필터와 같이 사용자에게 편의를 줄 수 있는 여러 feature를 저희 시스템 문제로 개발이 지연되는 문제가 발생하였습니다.<br /><br /></p>

<h2 id="원인-분석">원인 분석</h2>
<h3 id="문제-1-잦은-변경에-의한-disk-io-이슈">문제 1. 잦은 변경에 의한 Disk I/O 이슈</h3>
<p>Elasticsearch의 Index는 Lucene 기반의 작은 segment 파일로 구성되어 있습니다. 이 segment는 검색 요청을 빠르게 처리하기 위해서 여러 개로 생성이 되어있습니다. 하지만 이 segment는 속도, 성능, 동시성 이슈, 압축 등의 이유로 immutable 한 속성을 가지고 있기 때문에 Index에 대한 업데이트 요청이 오게 되면 기존 segment에 mark만 하고 새로운 segment를 생성하여 데이터를 기록하는 동작을 진행합니다.</p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s3.jpg" /><span style="display: block; color:#808080;">이미지 출처 구글</span>
</div>
<p><br /></p>

<p>저희에 문제는 바로 여기에 있었습니다. 잦은 업데이트로 인해 다량의 segment가 생성되면서 Disk I/O가 증가하게 되었고 그 결과 cpu가 동반 상승했으며, 삭제 대상 segment를 지우고 단편화 해소를 위해 동작하는 force merge 시에도 부하가 발생하는 문제가 확인되었습니다. <br /></p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s4.jpg" /><span style="display: block; color:#808080;">문제의 cpu 상태</span>
</div>
<p><br /></p>

<h3 id="문제-2-건바이건-요청으로-인한-thread-pool-초과">문제 2. 건바이건 요청으로 인한 thread pool 초과</h3>
<p>가게에 해당하는 속성 변경 이벤트가 몰리는 시간대에는 최대 수십만 건 이상의 이벤트가 발생합니다. 이 이벤트를 건바이건으로 업데이트를 하면서 Elasticsearch의 write thread pool을 모두 점유하고 queue까지 가득 차게 되면서 일부 이벤트가 정상적으로 업데이트 되지 못하고 rejected 되는 경우가 빈번하게 발생하였습니다.</p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s5.jpg" /><span style="display: block; color:#808080;">rejected request 개수</span>
</div>
<p><br /><br /></p>

<h2 id="정답은-언제나-기본에-있다">정답은 언제나 기본에 있다</h2>
<blockquote>
  <p>To optimize insert speed, combine many small operations into a single large operation. Ideally, you make a single connection, send the data for many new rows at once, and delay all index updates and consistency checking until the very end.<br />
출처 : https://dev.mysql.com/doc/refman/8.0/en/insert-optimization.html</p>

  <p><code class="language-plaintext highlighter-rouge">insert 성능을 높이기 위해서는 작은 여러 연산을 큰 하나의 연산으로 만들어라.</code> 라는 말을 위의 mysql doc에서 볼 수 있듯이 그렇게 배웠고 그렇게 개발을 진행했었습니다.<br /></p>
</blockquote>

<p>Elasticsearch 또한 같은 개념을 가지고 있으며 단건 request 수행 보다 Bulk request의 효능이 큰 것은 여러 벤치마킹을 통해서도 입증이 되었습니다.<br /></p>

<p>그럼 우리도 이 문제를 해결하기 위해 bulk로 동작을 시키는 방법을 적용해보기로 했습니다. 하지만 언제나 문제는 쉽게 해결되지 않듯이 역시 문제가 있었습니다.
검색의 현재 구조는 모든 이벤트를 별도의 sqs를 listen 하여 받고 있기 때문에 서로 다른 sqs에서 데이터를 받아서 처리하기에는 무리가 있었습니다.</p>

<p>그러다 Elasticsearch의 resthighlevelclient java api에서 <a href="https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-docs-bulk-processor.html">Bulk processor</a> 라는 기능을 사용하여 request를 모아서 업데이트하는 기능을 발견하게 되었습니다.
Bulk Processor는 하나의 독립적인 프로세스를 실행시키고 request를 buffer에 모아서 정해진 시간, 크기 등에 맞게 Elasticsearch에 데이터를 Bulk request를 만들어서 flush하도록 동작하고 있습니다.</p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s6.jpg" /><span style="display: block; color:#808080;">Bulk processor 구조</span>
</div>
<p><br /></p>

<p>이걸 사용해서 저희의 문제를 풀어보기로 했으며 있는 그대로 사용하지 않고 조금 더 나은 성능을 만들기 위해 튜닝도 함께 진행했습니다.<br /></p>

<h3 id="튜닝-1">튜닝 1.</h3>
<p>기존 Bulk processor는 DocWriteRequest를 담는 List를 가지고 있는 BulkRequest라는 Buffer용 객체를 사용하여 데이터를 담고 시간, 사이즈 등의 flush 타이밍이 되면 해당 버퍼를 BulkProcessorHandler를 통해 전달하고 Elasticsearch에 Bulk request를 요청하는 구조로 되어있습니다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// BulkRequest (Buffer 역할을 하는 객체)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BulkRequest</span> <span class="kd">extends</span> <span class="nc">ActionRequest</span> <span class="kd">implements</span> <span class="nc">CompositeIndicesRequest</span><span class="o">,</span> <span class="nc">WriteRequest</span><span class="o">&lt;</span><span class="nc">BulkRequest</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">REQUEST_OVERHEAD</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>

    <span class="cm">/**
     * Requests that are part of this request. It is only possible to add things that are both {@link ActionRequest}s and
     * {@link WriteRequest}s to this but java doesn't support syntax to declare that everything in the array has both types so we declare
     * the one with the least casts.
     */</span>
    <span class="kd">final</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">DocWriteRequest</span><span class="o">&lt;?&gt;&gt;</span> <span class="n">requests</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
    <span class="o">..</span>
    <span class="o">..</span>
    <span class="o">..</span>

    <span class="cm">/**
     * Adds a list of requests to be executed. Either index or delete requests.
     */</span>
    <span class="kd">public</span> <span class="nc">BulkRequest</span> <span class="nf">add</span><span class="o">(</span><span class="nc">DocWriteRequest</span><span class="o">&lt;?&gt;...</span> <span class="n">requests</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">DocWriteRequest</span><span class="o">&lt;?&gt;</span> <span class="n">request</span> <span class="o">:</span> <span class="n">requests</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">add</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// BufferProcessor add메소드를 통해 BulkRequest에 request를 만들어서 담는 부분</span>
<span class="n">bulkProcessor</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">(</span><span class="s">"twitter"</span><span class="o">,</span> <span class="s">"_doc"</span><span class="o">,</span> <span class="s">"1"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="cm">/* your doc here */</span><span class="o">));</span>
<span class="n">bulkProcessor</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">DeleteRequest</span><span class="o">(</span><span class="s">"twitter"</span><span class="o">,</span> <span class="s">"_doc"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">));</span>

<span class="c1">// BulkProcessor Handler</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">BulkRequest</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="kt">long</span> <span class="n">executionId</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">Runnable</span> <span class="n">toRelease</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{};</span>
    <span class="kt">boolean</span> <span class="n">bulkRequestSetupSuccessful</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">listener</span><span class="o">.</span><span class="na">beforeBulk</span><span class="o">(</span><span class="n">executionId</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">);</span>
        <span class="n">semaphore</span><span class="o">.</span><span class="na">acquire</span><span class="o">();</span>
        <span class="n">toRelease</span> <span class="o">=</span> <span class="nl">semaphore:</span><span class="o">:</span><span class="n">release</span><span class="o">;</span>
        <span class="nc">CountDownLatch</span> <span class="n">latch</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">CountDownLatch</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">retry</span><span class="o">.</span><span class="na">withBackoff</span><span class="o">(</span><span class="n">consumer</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="k">new</span> <span class="nc">ActionListener</span><span class="o">&lt;</span><span class="nc">BulkResponse</span><span class="o">&gt;()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onResponse</span><span class="o">(</span><span class="nc">BulkResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="n">listener</span><span class="o">.</span><span class="na">afterBulk</span><span class="o">(</span><span class="n">executionId</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
                    <span class="n">semaphore</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
                    <span class="n">latch</span><span class="o">.</span><span class="na">countDown</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="n">listener</span><span class="o">.</span><span class="na">afterBulk</span><span class="o">(</span><span class="n">executionId</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
                    <span class="n">semaphore</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
                    <span class="n">latch</span><span class="o">.</span><span class="na">countDown</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="n">bulkRequestSetupSuccessful</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">concurrentRequests</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">latch</span><span class="o">.</span><span class="na">await</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">interrupt</span><span class="o">();</span>
        <span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="nc">ParameterizedMessage</span><span class="o">(</span><span class="s">"Bulk request {} has been cancelled."</span><span class="o">,</span> <span class="n">executionId</span><span class="o">),</span> <span class="n">e</span><span class="o">);</span>
        <span class="n">listener</span><span class="o">.</span><span class="na">afterBulk</span><span class="o">(</span><span class="n">executionId</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">logger</span><span class="o">.</span><span class="na">warn</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="nc">ParameterizedMessage</span><span class="o">(</span><span class="s">"Failed to execute bulk request {}."</span><span class="o">,</span> <span class="n">executionId</span><span class="o">),</span> <span class="n">e</span><span class="o">);</span>
        <span class="n">listener</span><span class="o">.</span><span class="na">afterBulk</span><span class="o">(</span><span class="n">executionId</span><span class="o">,</span> <span class="n">bulkRequest</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">bulkRequestSetupSuccessful</span> <span class="o">==</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// if we fail on client.bulk() release the semaphore</span>
            <span class="n">toRelease</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>저희는 이 부분에서 수신한 이벤트를 Bulk processor에 add 할 때 Update request를 만들어서 buffer에 밀어 넣는 부분이 번거로웠고 같은 index에 동일한 Update Request 규칙을 만들때도 모든 이벤트 수신부분에 일괄 적용하기 어려웠습니다. 그래서 buffer 역할을 하는 BulkRequest를 걷어내고 Update Request를 만들기 위한 Shop이라는 객체를 만들고 이 객체들을 담을 수 있는 Map으로 대체하였습니다<br /><br /> 
각 이벤트 수신위치에서는 Bulk Processor에 add 할 때 각 이벤트별 변경 부분만 전달할 수 있도록 별도의 객체(ShopMenu, ShopReview..)들을 구성하였고, 이 값들을 전달받은 Bulk processor는 Shop객체로 전환하여 buffer에 저장을 하도록 구성하였습니다.(<span style="color: red; weight: bold;">이 부분 코드 및 활용은 튜닝2에서 다룰 예정</span>) 그리고 별도의 serializer 정책을 적용해서 flush 주기에 BulkProcessorHandler에 데이터를 전달하여 필요한 부분만 업데이트 될 수 있도록 BulkRequest를 생성하는 등의 작업을 진행하였습니다.<br /><br /></p>

<p>Bulk processor 도입으로 인한 효과를 이론적으로 생각했던 부분이었고 테스트를 통해 검증도 해봤지만 실제 운영에서도 어느 정도 효과가 발생될지 궁금했었습니다. 기대감을 가지고 운영에서 확인해봤습니다.<br /></p>

<p>운영 데이터 기준 이벤트 수신 건수는 총 <em>9,261,187개</em> 였습니다.<br /></p>

<p>Bulk processor 도입전에는 모든 이벤트를 단건으로 처리하였기 때문에 총 update request는 이벤트 수신건수와 동일하게 9,261,185개 였습니다.<br />
Bulk processor 도입후에는 update request를 모아 Bulk request를 만들면서 request건수는 233,949건 발생하였습니다.</p>

<blockquote>
  <p>도입 전 : 9,261,185건<br />
도입 후 : 233,949건</p>

</blockquote>

<p>Elasticsearch에 요청하는 request 건수가 <span style="color:#d23c3c; font-weight:700"> 총 97.5% </span> 감소하였습니다.
이로 인해 write thread pool 감소로 많은 이벤트 수신 시 발생하던 rejected가 해소되었고, bulk로 단일 요청 대비 응답 대기 시간 및 네트워크 부하 감소 효과를 받았습니다.</p>

<h3 id="튜닝-2">튜닝 2.</h3>
<p>튜닝 1에서 얻은 효과도 좋았지만 조금 더 성능을 올려보고 싶었습니다. Bulk request가 single request보다 효능은 있지만 Bulk의 사이즈가 커질수록 오히려 Elasticsearch에 부담을 줄 수 있기 때문에 Bulk에 담기는 request를 더 줄여보고 싶었습니다.</p>

<p>데이터를 가만히 보니 검색에서 사용하는 모든 데이터는 shopId를 기준으로 업데이트 쿼리가 만들어졌습니다. 그럼 request를 add 하는 순간에 동일한 가게에 대한 request가 존재하면 변경되는 부분만 기존 request에 넣어주면 되겠다는 생각을 가지게 되었습니다.<br /></p>

<div style="text-align: center;">
  <img src="/img/2021-03-03/s11.jpg" /> <span style="display: block; color:#808080;">가게 중심으로 request 단일화 과정</span>
</div>
<p><br /><br /></p>

<p>그래서 다음과 같이 Bulk processor에 buffer역할을 하는 map의 키를 shopId로 부여하고 value를 Shop 객체로 부여를 하였고 각 이벤트를 통해 들어오는 요청을 하나의 Shop으로 묶어서 Bulk request를 만들도록 진행하였습니다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span> <span class="n">실제</span> <span class="n">코드는</span> <span class="n">더</span> <span class="n">복잡하여</span> <span class="n">예시</span> <span class="n">코드를</span> <span class="n">기재합니다</span><span class="o">.</span>

<span class="cm">/**
 * data는 유연하게 받을 수 있도록 제네릭을 사용하였고, 실제 검색에서는 Shop객체를 받고 있다.
 * acknowledgments는 수신된 이벤트들에 대한 정상 처리 여부에 따라 sqs에 ack 처리를 하기 위해 보관  
*/</span>
<span class="nd">@Getter</span>
<span class="nd">@Setter</span>
<span class="nd">@NoArgsConstructor</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BulkData</span><span class="o">&lt;</span><span class="no">T</span> <span class="kd">extends</span> <span class="nc">IndexDomain</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="no">T</span> <span class="n">data</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">Acknowledgment</span><span class="o">&gt;</span> <span class="n">acknowledgments</span><span class="o">;</span>

    <span class="nd">@Builder</span>
    <span class="kd">public</span> <span class="nf">BulkData</span><span class="o">(</span><span class="no">T</span> <span class="n">data</span><span class="o">,</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">Acknowledgment</span><span class="o">&gt;</span> <span class="n">acknowledgments</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">acknowledgments</span> <span class="o">=</span> <span class="n">acknowledgments</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="nd">@Getter</span>
<span class="nd">@Setter</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Shop</span> <span class="kd">extends</span> <span class="nc">IndexDomain</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Menu</span><span class="o">&gt;</span> <span class="n">menus</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">content</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">subject</span><span class="o">;</span>
    
    <span class="nd">@Builder</span>
    <span class="kd">public</span> <span class="nf">Shop</span><span class="o">(</span><span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Menu</span><span class="o">&gt;</span> <span class="n">menus</span><span class="o">,</span> <span class="nc">String</span> <span class="n">content</span><span class="o">,</span> <span class="nc">String</span> <span class="n">subject</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">shopNumber</span> <span class="o">=</span> <span class="n">shopNumber</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">menus</span> <span class="o">=</span> <span class="n">menus</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">subject</span> <span class="o">=</span> <span class="n">subject</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 이벤트 변경정보를 가지는 객체의 공통 추상 클래스</span>
<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">ShopUpdatableDomain</span> <span class="kd">extends</span> <span class="nc">UpdatableDomain</span><span class="o">&lt;</span><span class="nc">Shop</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Shop</span> <span class="nf">convert</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">Shop</span> <span class="n">shop</span> <span class="o">=</span> <span class="nc">Shop</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>
        <span class="n">convert</span><span class="o">(</span><span class="n">shop</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">shop</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 메뉴 변경정보를 가지고 있는 ShopMenu</span>
<span class="nd">@Getter</span>
<span class="nd">@Setter</span>
<span class="nd">@NoArguments</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ShopMenu</span> <span class="kd">extends</span> <span class="nc">ShopUpdatableDomain</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Menu</span><span class="o">&gt;</span> <span class="n">menus</span><span class="o">;</span>
    
    <span class="nd">@Builder</span>
    <span class="kd">public</span> <span class="nf">ShopMenu</span><span class="o">(</span><span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Menu</span><span class="o">&gt;</span> <span class="n">menus</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">shopNumber</span> <span class="o">=</span> <span class="n">shopNumber</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">menus</span> <span class="o">=</span> <span class="n">menus</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">convert</span><span class="o">(</span><span class="nc">Shop</span> <span class="n">shop</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">shop</span><span class="o">.</span><span class="na">setShopNumber</span><span class="o">(</span><span class="n">shopNumber</span><span class="o">);</span>
        <span class="n">shop</span><span class="o">.</span><span class="na">setMenus</span><span class="o">(</span><span class="n">menus</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 리뷰 변경정보를 가지고 있는 ShopReview</span>
<span class="nd">@Getter</span>
<span class="nd">@Setter</span>
<span class="nd">@NoArguments</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ShopReview</span> <span class="kd">extends</span> <span class="nc">ShopUpdatableDomain</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">content</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">subject</span><span class="o">;</span>

    <span class="nd">@Builder</span>
    <span class="kd">public</span> <span class="nf">ShopReview</span><span class="o">(</span><span class="nc">Long</span> <span class="n">shopNumber</span><span class="o">,</span> <span class="nc">String</span> <span class="n">content</span><span class="o">,</span> <span class="nc">String</span> <span class="n">subject</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">shopNumber</span> <span class="o">=</span> <span class="n">shopNumber</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">subject</span> <span class="o">=</span> <span class="n">subject</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">convert</span><span class="o">(</span><span class="nc">Shop</span> <span class="n">shop</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">shop</span><span class="o">.</span><span class="na">setShopNumber</span><span class="o">(</span><span class="n">shopNumber</span><span class="o">);</span>
        <span class="n">shop</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
        <span class="n">shop</span><span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="n">subject</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 이벤트 수신과 Bulk processor에 이벤트 내용 전달</span>
<span class="nd">@SqsListener</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"menu-sqs"</span><span class="o">,</span> <span class="n">deletionPolicy</span> <span class="o">=</span> <span class="no">NEVER</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">shopMenuV3UpdateListen</span><span class="o">(</span><span class="nd">@Payload</span> <span class="nc">ShopMenuEvent</span> <span class="n">eventDto</span><span class="o">,</span> <span class="nc">Acknowledgment</span> <span class="n">acknowledgment</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">bulkProcessor</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">BulkProcessorBucket</span><span class="o">.&lt;</span><span class="nc">ShopMenu</span><span class="o">&gt;</span><span class="n">builder</span><span class="o">()</span>
        <span class="o">.</span><span class="na">data</span><span class="o">(</span><span class="nc">ShopMenu</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">shopNumber</span><span class="o">(</span><span class="n">eventDto</span><span class="o">.</span><span class="na">getShopId</span><span class="o">())</span>
            <span class="o">.</span><span class="na">menus</span><span class="o">(</span><span class="n">eventDto</span><span class="o">.</span><span class="na">getMenus</span><span class="o">())</span>
        <span class="o">.</span><span class="na">build</span><span class="o">())</span>
    <span class="o">.</span><span class="na">build</span><span class="o">());</span>
<span class="o">}</span>
<span class="o">...</span>
<span class="nd">@SqsListener</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"reviewSqs"</span><span class="o">,</span> <span class="n">deletionPolicy</span> <span class="o">=</span> <span class="no">NEVER</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">tagsUpdateListen</span><span class="o">(</span><span class="nd">@Payload</span> <span class="nc">ReviewChangeEvent</span> <span class="n">reviewChangeEvent</span><span class="o">,</span> <span class="nc">Acknowledgment</span> <span class="n">acknowledgment</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">bulkProcessor</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">BulkProcessorBucket</span><span class="o">.&lt;</span><span class="nc">ShopReview</span><span class="o">&gt;</span><span class="n">builder</span><span class="o">()</span>
        <span class="o">.</span><span class="na">data</span><span class="o">(</span><span class="nc">ShopReview</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">shopNumber</span><span class="o">(</span><span class="n">eventDto</span><span class="o">.</span><span class="na">getShopId</span><span class="o">())</span>
            <span class="o">.</span><span class="na">content</span><span class="o">(</span><span class="n">eventDto</span><span class="o">.</span><span class="na">getContent</span><span class="o">())</span>
            <span class="o">.</span><span class="na">subject</span><span class="o">(</span><span class="n">eventDto</span><span class="o">.</span><span class="na">getSubject</span><span class="o">())</span>
        <span class="o">.</span><span class="na">build</span><span class="o">())</span>
    <span class="o">.</span><span class="na">build</span><span class="o">());</span>
<span class="o">}</span>


<span class="c1">// bulk processor add 코드</span>
<span class="nd">@Slf4j</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BulkProcessor</span><span class="o">&lt;</span><span class="no">S</span> <span class="kd">extends</span> <span class="nc">IndexDomain</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="nc">Closeable</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">BulkData</span><span class="o">&lt;</span><span class="no">S</span><span class="o">&gt;&gt;</span> <span class="n">datas</span><span class="o">;</span>
    <span class="o">...</span>
    <span class="o">..</span>
    <span class="o">...</span>
    <span class="kd">private</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">addData</span><span class="o">(</span><span class="nc">BulkProcessorBucket</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">idValue</span><span class="o">();</span>

        <span class="c1">// bulk buffer안에 동일한 가게가 존재하는지 조회</span>
        <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">datas</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">id</span><span class="o">))</span> <span class="o">{</span>
            <span class="nc">BulkData</span><span class="o">&lt;</span><span class="no">S</span><span class="o">&gt;</span> <span class="n">bulkData</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">datas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
            
            <span class="c1">// 들어온 이벤트 데이터를 기존 shop 변경분 정보의 매핑</span>
            <span class="n">request</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">convert</span><span class="o">(</span><span class="n">bulkData</span><span class="o">.</span><span class="na">getData</span><span class="o">());</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">this</span><span class="o">.</span><span class="na">datas</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="nc">BulkData</span><span class="o">.&lt;</span><span class="no">S</span><span class="o">&gt;</span><span class="n">builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">data</span><span class="o">((</span><span class="no">S</span><span class="o">)</span> <span class="n">request</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">convert</span><span class="o">())</span>
            <span class="o">.</span><span class="na">build</span><span class="o">());</span>
    <span class="o">}</span>
    <span class="o">...</span>
    <span class="o">..</span>
    <span class="o">.</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br />
해당 튜닝 포인트도 효과가 있었습니다. Bulk request를 만들어서 flush하는 주기에 같은 가게 아이디로 묶이는 이벤트 종류별 건수와 횟수에 대한 정보는 아래와 같이 적지 않은 수치를 볼 수 있었으며 실제로 이에 대한 효과도 볼 수 있었습니다.</p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s7.jpg" /><span style="display: block; color:#c2b4b4;"> request 군집 지표</span>
</div>
<p><br /><br /></p>

<h2 id="성능-테스트-및-실제-운영-리소스-변화">성능 테스트 및 실제 운영 리소스 변화</h2>
<h3 id="성능테스트-결과">성능테스트 결과</h3>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s8.jpg" /><span style="display: block; color:#c2b4b4;"> 27만건 무작위 이벤트 테스트 결과</span>
</div>
<p><br /></p>

<p>27만 건의 데이터를 무작위로 전송했고 리소스 변화량을 체크해봤습니다.
CPU 사용량은 15% 이상 감소되었고 request 단위가 작아지면서 write complete 수도 30배 정도 감소하는 효과를 얻었습니다.<br /></p>

<h3 id="운영-결과">운영 결과</h3>
<p>실제 운영에 적용 결과 위의 처음 문제가 발생하던 시기에 피크시간 기준 61%를 육박하던 cpu가 비교 대상 기준 이벤트가 수십만건이 더 추가되었음에도 불구하고 최대 29%정도의 안정적인 상태를 유지하고 있습니다.</p>
<div style="text-align: center;">
  <img src="/img/2021-03-03/s10.jpg" /> <span style="display: block; color:#c2b4b4;">안정된 시스템</span>
</div>
<p><br /><br /></p>

<p>이 문제 해결로 배달 빠른 순, 배달팁 낮은 순과 같이 실시간성 데이터가 들어가야하는 서비스가 적용될 수 있었고 고객에게 더 좋은 가치를 드리는게 가능해졌습니다.</p>

<p>2021년에는 검색창이 하단으로 옮겨지고 인기 검색어 지면 등 많은 기능들이 추가되고 있습니다. 이 글을 읽고 모든 코드를 보고 싶거나, 검색개발팀에 관심이 생겼다면 <a href="https://resume.woowahan.com/jobs/view.aspx?cc=244001&amp;jidx=105376&amp;pidx=10893&amp;bidx=166014">[배민서비스실] 검색서비스 개발자 모집</a> 에 많은 지원 부탁드립니다.</p>

<p>긴 글 읽어주셔서 감사드립니다.</p>
, 
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.048 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.049 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.049 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.049 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.049 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.049 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.050 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.050 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.050 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.053 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.054 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.054 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 가게 배달지역 관리방식 개편 프로젝트, https://woowabros.github.io/experience/2021/02/27/s2-project.html, , , 2021-02-27, , 0, <ul id="markdown-toc">
  <li><a href="#배달지역-관리방식-개편-s2" id="markdown-toc-배달지역-관리방식-개편-s2">배달지역 관리방식 개편 (S2)</a>    <ul>
      <li><a href="#배달지역" id="markdown-toc-배달지역">배달지역?</a></li>
      <li><a href="#왜-why-무엇이-문제인가" id="markdown-toc-왜-why-무엇이-문제인가">왜 why? 무엇이 문제인가?</a></li>
      <li><a href="#s2" id="markdown-toc-s2">S2?</a></li>
      <li><a href="#s2로-개편하기전---s2마이그레이션-실험실" id="markdown-toc-s2로-개편하기전---s2마이그레이션-실험실">S2로 개편하기전 - S2마이그레이션 실험실</a></li>
      <li><a href="#s2-마이그레이션-진행" id="markdown-toc-s2-마이그레이션-진행">S2 마이그레이션 진행</a></li>
      <li><a href="#겹치는-구간이-발생했다" id="markdown-toc-겹치는-구간이-발생했다">겹치는 구간이 발생했다.</a></li>
      <li><a href="#다른-레벨의-cell이-겹친다" id="markdown-toc-다른-레벨의-cell이-겹친다">다른 레벨의 Cell이 겹친다</a></li>
      <li><a href="#경계를-일정한-크기의-셀로-쪼개자" id="markdown-toc-경계를-일정한-크기의-셀로-쪼개자">경계를 일정한 크기의 셀로 쪼개자</a></li>
      <li><a href="#겹치는-셀을-갖게될-단-하나의-행정동-결정하기" id="markdown-toc-겹치는-셀을-갖게될-단-하나의-행정동-결정하기">겹치는 셀을 갖게될 단 하나의 행정동 결정하기</a></li>
      <li><a href="#결과는-어떻게-검증할-건데" id="markdown-toc-결과는-어떻게-검증할-건데">결과는 어떻게 검증할 건데?</a></li>
      <li><a href="#마이그레이션-과정-정리" id="markdown-toc-마이그레이션-과정-정리">마이그레이션 과정 정리</a></li>
      <li><a href="#결과" id="markdown-toc-결과">결과</a></li>
      <li><a href="#내게-있어" id="markdown-toc-내게-있어">내게 있어</a></li>
      <li><a href="#진짜-마지막으로" id="markdown-toc-진짜-마지막으로">진짜 마지막으로!</a></li>
    </ul>
  </li>
</ul>

<h1 id="배달지역-관리방식-개편-s2">배달지역 관리방식 개편 (S2)</h1>

<blockquote>
  <p>🙇🏻‍♂️ 안녕하세요. 우아한형제들에서 가게시스템을 개발하고 있는 윤찬명입니다.
2019년 말부터 2020년 상반기에 걸쳐 진행된 <strong>가게 배달지역 관리방식 개편 프로젝트</strong>(이하 ‘S2 프로젝트’)의 마이그레이션을 진행했던 경험을 공유하고자 합니다.</p>
</blockquote>

<h2 id="배달지역">배달지역?</h2>

<p>배달의민족 서비스에 입점한 가게가 배달하고자하는 영역(지역)을 의미합니다.</p>

<p>(설정한 배달지역 &amp; 가게의 광고 스팟)내의 사용자에게 가게가 노출되고 주문이 발생합니다.</p>

<h2 id="왜-why-무엇이-문제인가">왜 why? 무엇이 문제인가?</h2>

<p>자세한 내용에 들어가기에 앞서 기존에는 가게의 배달지역이 어떻게 관리되고 있었는지, 어떤 불편함이 있었는지를 말씀드리고자 합니다.</p>

<p>배달의민족 가게 배달지역은 ‘행정동’을 기반으로 관리되고 있었는데요. 가게 A가 방이1동, 방이2동 등 1개 이상의 행정동을 선택해 해당 지역에 배달할 수 있도록 하는 관리 방식이었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/delivery_region_dong_base.png" alt="행정동 기반 가게 배달지역 설정" /></p>

<p>기존의 행정동 배달지역 설정 방식을 활용한 예</p>

<p>이때 몇 가지 문제점이 발생합니다.</p>

<ol>
  <li>
    <p>법정동과 행정동의 명칭은 같은데 경계가 다르거나, 두 개 이상의 법정동이 하나의 행정동으로 운영되는 경우도 있어 경계에 대한 문의가 지속적으로 인입됩니다.</p>

    <p>법정동? 행정동?
법정동은 단어 그대로 ‘법으로 정한 동’이라는 뜻으로 법적으로 정해진 행정구역 단위입니다.
각종 법적인 서류(주민등록증 포함)에 기재되는 주소가 법정동 주소입니다.
따라서 변동이 거의 없습니다.</p>

    <p>행정동은 행정편의(행정업무 효율성)에 의해 설정된 행정구역 단위입니다.
방이2동주민센터와 같은 주민센터명 앞에 붙은 동 명칭이 행정동 명칭입니다.
주민 수의 증감에 따라 새로 생겨나기도, 합쳐지기도 하는 만큼 변동이 잦습니다.</p>
  </li>
  <li>행정동은 지속적으로 갱신이 일어나는 데이터입니다.
행정동 영역이 바뀌면 해당 행정동을 배달지역으로 포함하고있는 가게들에도 영향이 발생합니다.</li>
  <li>배달지역을 유연하게 설정할 수 없습니다.
근본적인 문제입니다. 교통이 원활하지 못하거나, 오토바이가 진입할 수 없는 지역 등 배달하기 어려운 행정동 영역도 배달하고싶은 영역을 포함한다면 추가해야합니다.</li>
</ol>

<p>그래서 이러한 문제점을 해결해줄 기술로서 ‘S2’를 검토해보기로 했습니다</p>

<h2 id="s2">S2?</h2>

<p>S2는 구글에서 개발한 지리 정보 시스템으로서 지구를 사각형 형태의 ‘Cell’로 쪼개어 넘버링한 시스템입니다.</p>

<p>각각의 Cell은 유니크한 id를 갖게 됩니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_earth.png" alt="S2 지구본" /></p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_cube.png" alt="S2 큐브" /></p>

<p>출처: <a href="https://s2geometry.io/devguide/s2cell_hierarchy">https://s2geometry.io/devguide/s2cell_hierarchy</a></p>

<p>S2의 기본적인 원리는 다음과 같습니다.</p>

<ol>
  <li>위 그림과 같이 지구를 정육면체로 보고 전개도로 나눕니다. (전개도를 역으로 조립하면 지구같아요!)
이때 0~5, 총 6개의 면이 생기는데요, 각 면을 face cell이라 합니다.</li>
  <li>face cell을 하나 선택해 다시 4개의 사각형(Cell)로 나눕니다.
이때 0~3, 총 4개의 사각형이 생깁니다.</li>
  <li>2 과정을 원하는 크기의 Cell을 선택할 때까지 재귀적으로 반복합니다. (이때 Cell을 선택하기까지의 depth를 level이라고 합니다. <strong>따라서 level이 높을수록 크기는 작아집니다. 중요.</strong>)</li>
  <li>
    <p>S2의 모든 셀은 64개의 bit (최대 30 level)로 표현할 수 있습니다.</p>

    <p><img src="https://woowabros.github.io/img/2021-02-27/s2_64bits.png" alt="S2 64비트 표현법" /></p>

    <ol>
      <li>시작 3개 bit는 face cell 을 표현하는데에 사용합니다.
010 = 2 이므로, face cell은 2입니다.</li>
      <li>이후 2개 bit씩 끊어 child cell을 결정합니다.
[11, 01] 이므로, 위 그림이 표현하는 cell은 face cell 2의 child cell 3, 다시 그 child cell 1입니다.</li>
      <li>cell을 표현한 직후의 bit를 1로 설정해 표현이 끝났음을 표시합니다.</li>
      <li>64개 bit 중에서 1~3의 과정을 거치고 남은 나머지 bit를 모두 0으로 채웁니다.</li>
      <li>위 과정을 거쳐 나온 64개 bit가 선택한 2-3-1 (face=2, level=2) cell의 id를 나타냅니다.</li>
    </ol>

    <p>아래는 공식 문서 원문입니다.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>where “face” is a 3-bit number (range 0..5) that selects a cube face,
 and each of the k “child” values is a 2-bit number that selects
 one of the 4 children during the subdivision process.
 The bit that follows the last child is always 1, and all other bits are zero.

For example:

010 10000...0         Face cell 2.
001 10 100...0        Subcell 2 of face cell 1.
100 11 01 1000...0    Subcell 1 of subcell 3 of face 4.

출처: https://s2geometry.io/devguide/s2cell_hierarchy
</code></pre></div>    </div>
  </li>
  <li>5번을 통해 비트로 표현한 Cell id를 hex string으로 바꾸면 S2 token이 됩니다.</li>
  <li>이밖에도 space-filling curve를 이용해 순회하는 등의 특징도 갖는데 자세한 내용은 <a href="https://s2geometry.io/devguide/s2cell_hierarchy">S2 공식문서</a>를 참고하시길 추천드립니다. (쪼끔 어렵습니다.)</li>
</ol>

<p>눈여겨 볼만한 S2의 장점은 다음과 같습니다. (공식문서에는 다양한 연산, 성능, 공간인덱싱에 유리함 등 여러 장점 서술되어 있지만 아래엔 제가 느낀 장점만 적어보았습니다.)</p>

<ol>
  <li>정밀함
→ 30level cell 기준 가로/세로 길이가 8~9mm이기 때문에 굉장히 작은 면까지 표현할 수 있습니다.</li>
  <li>라이브러리에서 셀 정규화 기능을 제공해 하위 4개의 cell을 상위 1개의 cell로 변환할 수 있습니다.
→ 이 기능을 사용하면 많은 양의 cell도 개수를 줄여 저장할 수 있습니다.</li>
</ol>

<p>특히 셀 정규화 기능을 제공하는 것이 큰 장점으로 여겨져 S2 적용을 결정했습니다.</p>

<h2 id="s2로-개편하기전---s2마이그레이션-실험실">S2로 개편하기전 - S2마이그레이션 실험실</h2>

<p>S2를 적용하기로 했으니 서비스에서 사용할 S2 level의 최소/최대 구간을 결정해야 했습니다.</p>

<p>따라서 기존에 서비스에서 사용하고 있던 행정동 데이터(Polygon)를 S2방식으로 변환할 경우 몇 개의 Cell이 되는지 테스트가 필요했고, 테스트 결과는 다음과 같았습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_migration_lab.png" alt="S2 마이그레이션 실험실" /></p>

<p>위 실험을 통해 알아낸 점은 다음과 같습니다.</p>

<ol>
  <li>최소레벨(최대크기)이 11레벨이냐 14레벨이냐
→ 개수 변화가 많지 않습니다. 이는 14레벨보다 셀을 다량 포함하는 행정동이 많지 않다는 걸 의미합니다.</li>
  <li>최대레벨(최소크기)이 19레벨이냐 20레벨이냐
→ 개수가 약 2배가량 차이납니다. 20레벨이 19레벨보다 영역을 훨씬 정밀하게 표현하기 때문에 발생한 결과입니다.</li>
</ol>

<p>따라서 어차피 개수 차이가 많지 않은 <strong>11, 14레벨 중에선 조금 더 정밀한 14레벨</strong>을 선택하고,
개수 차이가 많은 <strong>19, 20레벨 중</strong>에서는 갖은 성능테스트(프런트엔드에서 그릴 때의 성능, 배달 가능 여부를 체크하는 로직 성능테스트 등)를 거쳐 <strong>19레벨로 결정</strong>했습니다. (많은 도움 주신 타 팀 분들께 압도적 감사……)</p>

<h2 id="s2-마이그레이션-진행">S2 마이그레이션 진행</h2>

<p>14 ~ 19레벨로 최대/최소 레벨을 결정했으니 보유중인 행정동 데이터를 S2 토큰 기반으로 마이그레이션해야할 때가 왔습니다.</p>

<p>Spring Batch를 이용한 마이그레이션툴을 개발했고, 쓰기작업이 많아 전사 공통 개발 환경에서 직접 수행하기 꺼려져(<del>사실 한 번 해봤다가 CPU 튐</del>) 전사 공통 개발 환경의 데이터베이스 스냅샷을 복원해 독립적인 데이터베이스에서 마이그레이션을 진행했습니다. (* 개발과 운영 환경 행정동 데이터는 차이가 없습니다.)</p>

<p>Spring Batch에 대한 글은 갓동욱님께서 아주 전문적으로 다뤄주시므로 이 글에서는 로직만 다루겠습니다.</p>

<p>들어가기 전, 프로젝트에 s2-geometry 라이브러리 의존성을 추가합니다.</p>

<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dependencies</span> <span class="o">{</span>
    <span class="c1">// ...</span>
    <span class="n">api</span> <span class="nl">group:</span> <span class="s1">'io.sgr'</span><span class="o">,</span> <span class="nl">name:</span> <span class="s1">'s2-geometry-library-java'</span><span class="o">,</span> <span class="nl">version:</span> <span class="s1">'1.0.1'</span>
<span class="o">}</span>
</code></pre></div></div>

<p>각 행정동의 Polygon 데이터를 WKT(Well-Known Text)로 읽어들이고, Polygon을 커버하는 S2 Cell의 집합으로 변환한 후 셀들의 토큰을 저장합니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    <span class="nd">@Bean</span>
    <span class="nd">@StepScope</span>
    <span class="kd">public</span> <span class="nc">ItemProcessor</span><span class="o">&lt;</span><span class="nc">Geo</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="no">S2</span><span class="o">&gt;&gt;</span> <span class="nf">migrateProcessor</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">geo</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">dongCode</span> <span class="o">=</span> <span class="n">geo</span><span class="o">.</span><span class="na">getDongCode</span><span class="o">();</span>
            <span class="nc">Polygon</span> <span class="n">polygon</span> <span class="o">=</span> <span class="n">geo</span><span class="o">.</span><span class="na">getGeofence</span><span class="o">();</span>

            <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"동코드='{}'"</span><span class="o">,</span> <span class="n">geo</span><span class="o">.</span><span class="na">getDongCode</span><span class="o">());</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">tokens</span> <span class="o">=</span> <span class="n">s2GeometryService</span><span class="o">.</span><span class="na">toS2Tokens</span><span class="o">(</span><span class="n">polygon</span><span class="o">);</span>

            <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"동코드='{}' S2 token 개수='{}'"</span><span class="o">,</span> <span class="n">dongCode</span><span class="o">,</span> <span class="n">tokens</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
            <span class="k">return</span> <span class="n">tokens</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">token</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="no">S2</span><span class="o">(</span><span class="n">dongCode</span><span class="o">,</span> <span class="n">token</span><span class="o">)).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
        <span class="o">};</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>각 행정동은 다음 과정을 거쳐 S2 token 집합으로 변환됩니다.</p>

<h3 id="1-행정동-데이터polygon를-s2loop로-변환">1. 행정동 데이터(Polygon)를 S2Loop로 변환</h3>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_loop.png" alt="S2 loop" /></p>

<p>S2Loop는 구 형태의 S2 점 집합입니다.
점들로 구성된 체인이고, 처음 시작한 점이 마지막에도 한 번 더 오는 구조로 생각하시면 됩니다. 아래 점들도 S2Loop를 이룰 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 시작점인 (1, 2)가 마지막에도 한 번 더 왔습니다.</span>
<span class="o">[(</span>0, 0<span class="o">)</span>, <span class="o">(</span>1, 1<span class="o">)</span>, <span class="o">(</span>1, 1<span class="o">)</span>, <span class="o">(</span>0, 1<span class="o">)</span>, <span class="o">(</span>0, 0<span class="o">)]</span>
</code></pre></div></div>

<p>기본적으로 S2Loop는 CCW(Counter-Clock Wise, 반시계방향)으로 점을 가지도록 설계되어있어 CCW를 지키지 않는 경우 동작에 오류가 발생하기도 합니다. 따라서 뒤집어서 방향을 CCW로 바꾸는 정규화(라이브러리의 표현을 그대로 인용)과정을 한 번 거쳐야 합니다.</p>

<p>다시 돌아가서 Polygon 데이터의 점을 모두 꺼내어 S2Point로 변환하고, 변환된 S2Point들을 S2Loop로 만듭니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
    <span class="kd">public</span> <span class="nc">S2Loop</span> <span class="nf">polygonToS2Loop</span><span class="o">(</span><span class="nc">Polygon</span> <span class="n">polygon</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">S2Loop</span> <span class="n">s2Loop</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2Loop</span><span class="o">(</span><span class="n">getS2PointsFromPolygon</span><span class="o">(</span><span class="n">polygon</span><span class="o">));</span>
        <span class="n">s2Loop</span><span class="o">.</span><span class="na">normalize</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">s2Loop</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">protected</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2Point</span><span class="o">&gt;</span> <span class="nf">getS2PointsFromPolygon</span><span class="o">(</span><span class="nc">Polygon</span> <span class="n">polygon</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">Stream</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">polygon</span><span class="o">.</span><span class="na">getCoordinates</span><span class="o">()).</span><span class="na">map</span><span class="o">(</span><span class="n">c</span> <span class="o">-&gt;</span> <span class="nc">S2LatLng</span><span class="o">.</span><span class="na">fromDegrees</span><span class="o">(</span><span class="n">c</span><span class="o">.</span><span class="na">y</span><span class="o">,</span> <span class="n">c</span><span class="o">.</span><span class="na">x</span><span class="o">).</span><span class="na">toPoint</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>S2Loop를 만든 후 정규화합니다.</p>

<h3 id="2-s2looppolygon-영역를-덮는-cell들을-가져오기">2. S2Loop(Polygon 영역)를 덮는 Cell들을 가져오기</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
    <span class="c1">// covering cell을 구한 후 정규화함 -&gt; 사용할 수 없음</span>
    <span class="kd">protected</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="nf">getCoveringCellIdsWithNormalize</span><span class="o">(</span><span class="nc">S2Region</span> <span class="n">region</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">regionCoverer</span><span class="o">.</span><span class="na">getCovering</span><span class="o">(</span><span class="n">region</span><span class="o">).</span><span class="na">cellIds</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="c1">// covering cell을 구한 후 정규화하지 않음 -&gt; 사용가능</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="nf">getCoveringCellIdsWithoutNormalize</span><span class="o">(</span><span class="nc">S2Region</span> <span class="n">region</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">cellIds</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">this</span><span class="o">.</span><span class="na">regionCoverer</span><span class="o">.</span><span class="na">getCovering</span><span class="o">(</span><span class="n">region</span><span class="o">,</span> <span class="n">cellIds</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">cellIds</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>앞에서 변환한 S2Loop를 덮는 Cell들을 가져옵니다.</p>

<p>S2RegionCoverer의 getCovering 메서드를 통해 앞서 만든 S2Loop를 덮는 Cell들을 가져올 수 있는데요, 이때 메서드 사용에 주의해야합니다.</p>

<p>getCovering(S2Region region) 메서드는 Cell들을 구한 후 셀 정규화합니다. 셀 정규화를 진행하면 작은 4개 셀이 더 큰 1개의 셀로 표현되므로 예기치 못하게 minLevel(최대크기)보다 낮은 Level의 Cell들이 결과에 포함될 수 있습니다.</p>

<p>반면 getCovering(S2Region region, ArrayList<S2CellId> covering) 메서드는 정규화를 진행하지 않기 때문에 minLevel보다 낮은 레벨의 Cell이 포함되지 않습니다.</S2CellId></p>

<p>테스트를 통해 검증해보겠습니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">normalizeTest</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">ParseException</span> <span class="o">{</span>
        <span class="nc">Polygon</span> <span class="n">polygon</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Polygon</span><span class="o">)</span> <span class="k">new</span> <span class="nc">WKTReader</span><span class="o">().</span><span class="na">read</span><span class="o">(</span><span class="s">"POLYGON((125.12766320500009 34.07388744800005,125.12934443400002 34.09125975000006,125.10505848500009 34.10455268100003,125.10430372400003 34.115564762000076,125.06905232800011 34.12827447900003,125.06688174900012 34.12538607700003,125.07962229800012 34.09636242500005,125.08462558600002 34.082637258000034,125.07400239300011 34.07261400500005,125.08470359400008 34.04734345800006,125.10215830100003 34.05658256500004,125.11410312700002 34.038902079000025,125.14722905000008 34.04314643200007,125.14734230500005 34.05102778400004,125.12766320500009 34.07388744800005))"</span><span class="o">);</span>
        <span class="nc">S2Loop</span> <span class="n">s2Loop</span> <span class="o">=</span> <span class="n">s2GeometryService</span><span class="o">.</span><span class="na">polygonToS2Loop</span><span class="o">(</span><span class="n">polygon</span><span class="o">);</span>

        <span class="c1">// getCovering(S2Region region) 메서드 사용 -&gt; 정규화 O</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">withNormalize</span> <span class="o">=</span> <span class="n">s2GeometryService</span><span class="o">.</span><span class="na">getCoveringCellIdsWithNormalize</span><span class="o">(</span><span class="n">s2Loop</span><span class="o">);</span>
        <span class="c1">// getCovering(S2Region region, ArrayList&lt;S2CellId&gt; covering) 메서드 사용 -&gt; 정규화 X</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">withoutNormalize</span> <span class="o">=</span> <span class="n">s2GeometryService</span><span class="o">.</span><span class="na">getCoveringCellIdsWithoutNormalize</span><span class="o">(</span><span class="n">s2Loop</span><span class="o">);</span>

        <span class="c1">// 정규화한 결과와 정규화하지 않은 결과 모두 원본 폴리곤 위의 셀들이다.</span>
        <span class="n">assertTrue</span><span class="o">(</span><span class="n">withNormalize</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">cellId</span> <span class="o">-&gt;</span> <span class="n">s2Loop</span><span class="o">.</span><span class="na">mayIntersect</span><span class="o">(</span><span class="k">new</span> <span class="nc">S2Cell</span><span class="o">(</span><span class="n">cellId</span><span class="o">))));</span>
        <span class="n">assertTrue</span><span class="o">(</span><span class="n">withoutNormalize</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">cellId</span> <span class="o">-&gt;</span> <span class="n">s2Loop</span><span class="o">.</span><span class="na">mayIntersect</span><span class="o">(</span><span class="k">new</span> <span class="nc">S2Cell</span><span class="o">(</span><span class="n">cellId</span><span class="o">))));</span>

        <span class="c1">// 정규화한 결과보다 정규화하지 않은 결과의 셀 개수가 더 많다.</span>
        <span class="n">assertTrue</span><span class="o">(</span><span class="n">withNormalize</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">withoutNormalize</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>동일한 Polygon 데이터를 사용했음에도 불구하고 assertTrue(withNormalize.size() &lt; withoutNormalize.size()); 구절이 정상적으로 통과합니다. 이는 정규화를 진행해 17레벨 Cell 4개가 16레벨 Cell로 치환되면서 개수가 줄어들었기 때문입니다.</p>

<p>시각적으로도 검증 가능합니다. <a href="http://s2.sidewalklabs.com/regioncoverer">S2 token을 시각화하는 툴</a> 에 토큰을 시각화하자 차이가 확연히 드러났습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/migrate_with_normalize.png" alt="S2 정규화된 결과" /></p>

<p>정규화된 결과</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/migrate_without_normalize.png" alt="S2 정규화하지 않은 결과" /></p>

<p>정규화하지 않은 결과</p>

<p>정규화한 결과에서 중앙의 4개 Cell이 상위레벨 Cell로 치환되었음을 알 수 있었습니다.</p>

<p>마이그레이션에서는 minLevel(최대크기)보다 큰 크기의 Cell이 포함되면 안되기 때문에 <code class="language-plaintext highlighter-rouge">getCovering(S2Region region, ArrayList&lt;S2CellId&gt; covering)</code> 를 사용했습니다.</p>

<p>이로써 배치의 핵심 로직을 모두 작성했습니다 🙂</p>

<p>샘플로 몇 개 행정동을 마이그레이션했을 때 문제도 없었고, 배치도 문제없이 돌았겠다.</p>

<p>바로 검증에 들어갔습니다. 하지만..</p>

<h2 id="겹치는-구간이-발생했다">겹치는 구간이 발생했다.</h2>

<p>마이그레이션을 마치고 방이1동과 방이2동의 Cell을 시각화해봤습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/bangi_intersection.png" alt="방이 1동과 2동의 마이그레이션 결과" /></p>

<p>얼핏 예상하던 결과였습니다. 경계를 확대해서 보니</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/bangi_intersection_deep.png" alt="방이 1동과 2동의 마이그레이션 결과 (확대)" /></p>

<p>위 처럼 두겹으로 그려져 색이 더 진해져있었습니다.</p>

<p>interioring(속을 채우는, 경계를 넘어가지 않는)이 아닌 covering(완전히 덮는, 경계를 넘어갈 수 있는) 셀들로 변환했기 때문에 토큰(셀의 고유 id)이 겹치는 경우가 충분히 발생할 수 있었습니다.</p>

<p>겹치는 토큰이 몇 개 정도 되는지 뽑아봤습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">insert</span> <span class="k">into</span> <span class="n">s2_14to19_intersection</span> <span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="n">times</span><span class="p">)</span>
<span class="k">select</span> <span class="n">token</span><span class="p">,</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
<span class="k">from</span> <span class="n">s2_14to19</span>
<span class="k">group</span> <span class="k">by</span> <span class="n">token</span>
<span class="k">having</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div>

<p>결과는 약 1.3만개 토큰, 팀에 마이그레이션 결과를 리뷰하기 시작했고
리뷰중 한 가지 의문점이 발생했습니다.
<strong>“대한민국 전체를 마이그레이션했는데 겹치는 셀이 만삼천개밖에 안돼요?”</strong></p>

<h2 id="다른-레벨의-cell이-겹친다">다른 레벨의 Cell이 겹친다</h2>

<p>진짜 문제는 따로 있었습니다. 바로 <strong>서로 다른 레벨의 셀이 겹친다는 점</strong>인데요.
사실 위에서 보여드린 방이1동과 2동 사이의 경계에서도 자세히 보면 동일한 문제를 찾을 수 있습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/bangi_2_building.png" alt="방이2동의 풍원빌딩 인근 마이그레이션 결과" style="width:45%; display: block; margin-left: auto; margin-right: auto" /></p>

<p>방이2동의 풍원빌딩 인근 마이그레이션 결과</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/bangi_1_building.png" alt="방이1동의 풍원빌딩 인근 마이그레이션 결과" style="width:45%; display: block; margin-left: auto; margin-right: auto" /></p>

<p>방이1동의 풍원빌딩 인근 마이그레이션 결과</p>

<p>방이2동에서는 풍원빌딩 인근이 18레벨 셀 1개로 마이그레이션 되었지만 방이1동에서는 19레벨 셀 2개로 마이그레이션 되어 다른 레벨끼리 겹치고 있음을 알 수 있습니다.</p>

<p>동일한 레벨의 셀이 중복되어 겹치는 경우에는 앞서 시도한 것처럼 단순히 토큰이 같은 셀끼리 그룹핑하고 소유할 행정동을 선택하면 되지만
<strong>다른 레벨간 겹치는 경우에는 토큰 값이 완전히 다르기 때문에 단순 그룹핑이 불가능합니다.</strong> 따라서 다른 방법을 찾아야했습니다.</p>

<h2 id="경계를-일정한-크기의-셀로-쪼개자">경계를 일정한 크기의 셀로 쪼개자</h2>

<p>위 문제의 해결책으로 생각해낸 것이 행정동의 경계에 위치한 셀의 크기를 가장 작은 크기의 셀 (19레벨 셀)로 고정하는 것이었습니다. (<del>다소 원시적이긴 하지만요</del>) 이를 위해서는 한 번 covering 셀을 구한 후 경계선 위의 셀들을 상대로 후속처리해주어야 했습니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// 외곽 셀의 크기를 고정한 변환 결과를 반환하는 메서드</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">toBoundaryCellLevelFixedS2Tokens</span><span class="o">(</span><span class="nc">Polygon</span> <span class="n">polygon</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">cellIds</span> <span class="o">=</span> <span class="n">getCoveringCellIdsWithoutNormalize</span><span class="o">(</span><span class="n">polygonToS2Loop</span><span class="o">(</span><span class="n">polygon</span><span class="o">));</span>

        <span class="c1">// polygon의 외곽선 (boundary)을 구한다.</span>
        <span class="nc">S2Polyline</span> <span class="n">boundary</span> <span class="o">=</span> <span class="n">getBoundary</span><span class="o">(</span><span class="n">polygon</span><span class="o">);</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">boundaryCellIdsLessThanMaxLevel</span><span class="o">;</span>

        <span class="c1">// polygon의 경계 (boundary)위의 cell들 중 level이 maxLevel보다 낮은 cell을 추려 한 단계 작은 4개 셀로 치환한다.</span>
        <span class="k">while</span> <span class="o">(</span><span class="nc">CollectionUtils</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="o">(</span>
                <span class="n">boundaryCellIdsLessThanMaxLevel</span> <span class="o">=</span> <span class="n">cellIds</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">cellId</span> <span class="o">-&gt;</span> <span class="n">boundary</span><span class="o">.</span><span class="na">mayIntersect</span><span class="o">(</span><span class="k">new</span> <span class="nc">S2Cell</span><span class="o">(</span><span class="n">cellId</span><span class="o">))</span> <span class="o">&amp;&amp;</span> <span class="n">cellId</span><span class="o">.</span><span class="na">level</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">maxLevel</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">())</span>
        <span class="o">))</span> <span class="o">{</span>
            <span class="n">cellIds</span><span class="o">.</span><span class="na">removeAll</span><span class="o">(</span><span class="n">boundaryCellIdsLessThanMaxLevel</span><span class="o">);</span>
            <span class="n">cellIds</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">boundaryCellIdsLessThanMaxLevel</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">flatMap</span><span class="o">(</span><span class="n">cellId</span> <span class="o">-&gt;</span> <span class="n">to4ChildCells</span><span class="o">(</span><span class="n">cellId</span><span class="o">).</span><span class="na">stream</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">()));</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">cellIds</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">S2CellId:</span><span class="o">:</span><span class="n">toToken</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>이로써 경계의 셀들이 모두 동일한 레벨로 쪼개졌습니다.</p>

<p>이후 앞서 시도했던 대로 동일한 토큰끼리 그룹핑해 겹치는 셀의 개수를 뽑아보니</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">insert</span> <span class="k">into</span> <span class="n">s2_14to19_intersection</span> <span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="n">times</span><span class="p">)</span>
<span class="k">select</span> <span class="n">token</span><span class="p">,</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
<span class="k">from</span> <span class="n">s2_14to19</span>
<span class="k">group</span> <span class="k">by</span> <span class="n">token</span>
<span class="k">having</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>

<span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">s2_14to19_intersection</span><span class="p">;</span> <span class="o">#</span> <span class="mi">3517669</span>
</code></pre></div></div>

<p>약 350만개 토큰(셀)이 겹치는 정상적인 결과를 얻을 수 있었습니다.
또한 데이터도 아래처럼 예쁘게 들어갔습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/intersection_query_result.png" alt="겹치는 토큰 추출 결과" /></p>

<p>이제는 이 셀들을 어떤 기준으로 소유할 행정동을 결정할지 고민할 차례입니다.</p>

<h2 id="겹치는-셀을-갖게될-단-하나의-행정동-결정하기">겹치는 셀을 갖게될 단 하나의 행정동 결정하기</h2>

<p>겹치는 셀들은 해당 셀의 표면적을 가장 넓게 차지하고 있는 행정동이 갖도록 하는것이 가장 합리적이라 생각했습니다.</p>

<p>따라서 아래 과정을 통해 겹치는 셀을 클렌징했습니다.</p>

<ol>
  <li>겹치는 <strong>셀 + 행정동 코드 쌍</strong>을 읽고</li>
  <li>해당 셀을 보유중인 행정동중에서 셀과 가장 넓은 면적이 겹치는 행정동을 찾아</li>
  <li>찾은 행정동이 아닌 행정동의 셀 정보는 삭제</li>
</ol>

<p>아래는 핵심 로직을 포함한 코드입니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cm">/*
       영역이 겹치는 행정동 중에서 해당 cell과 가장 넓게 겹치는 행정동을 찾는다
     */</span>
    <span class="kd">public</span> <span class="nc">Polygon</span> <span class="nf">findLargestContainingPolygon</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Polygon</span><span class="o">&gt;</span> <span class="n">polygons</span><span class="o">,</span> <span class="nc">S2Cell</span> <span class="n">cell</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">CollectionUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">polygons</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">polygons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">max</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">comparingDouble</span><span class="o">(</span><span class="n">polygon</span> <span class="o">-&gt;</span> <span class="n">getIntersectionArea</span><span class="o">(</span><span class="n">polygon</span><span class="o">,</span> <span class="n">cell</span><span class="o">))).</span><span class="na">orElseThrow</span><span class="o">(</span><span class="nl">IllegalArgumentException:</span><span class="o">:</span><span class="k">new</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/*
        행정동과 cell로 만든 폴리곤의 겹치는 면적을 계산
     */</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="nf">getIntersectionArea</span><span class="o">(</span><span class="nc">Polygon</span> <span class="n">polygon</span><span class="o">,</span> <span class="nc">S2Cell</span> <span class="n">cell</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">S2Polygon</span> <span class="n">s2Polygon</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2Polygon</span><span class="o">(</span><span class="n">polygonToS2Loop</span><span class="o">(</span><span class="n">polygon</span><span class="o">));</span>
        <span class="nc">S2Polygon</span> <span class="n">cellPolygon</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2Polygon</span><span class="o">(</span><span class="k">new</span> <span class="nc">S2Loop</span><span class="o">(</span><span class="n">cell</span><span class="o">));</span>
        <span class="nc">S2Polygon</span> <span class="n">intersection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2Polygon</span><span class="o">();</span>
        <span class="n">intersection</span><span class="o">.</span><span class="na">initToIntersection</span><span class="o">(</span><span class="n">s2Polygon</span><span class="o">,</span> <span class="n">cellPolygon</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">intersection</span><span class="o">.</span><span class="na">getArea</span><span class="o">();</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>배치 잡 역시 성공적으로 수행 완료 했고, 검증을 위해 겹치는 셀을 찾기 위해 사용했던 쿼리를 다시 날려보니</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">select</span> <span class="n">token</span><span class="p">,</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
<span class="k">from</span> <span class="n">s2_14to19</span>
<span class="k">group</span> <span class="k">by</span> <span class="n">token</span>
<span class="k">having</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div>

<p>결과는 비어있었습니다. 드디어 겹치는 토큰이 모두 사라졌습니다.
전체 s2 토큰의 개수도 약 1500만 개에서 1150만 개 정도로 줄었습니다.</p>

<h2 id="결과는-어떻게-검증할-건데">결과는 어떻게 검증할 건데?</h2>

<p>마이그레이션이 끝났으니 결과가 완전한지 검증해보아야 합니다.</p>

<p>검증할 점은 크게 3가지 입니다.</p>

<ol>
  <li>내륙에 빈틈이 없는가</li>
  <li>외곽지역, 섬지역의 마이그레이션 결과에 문제가 없는가</li>
  <li>겹치는 영역이 없는가(*다른 레벨 포함)</li>
</ol>

<h3 id="내륙에-빈틈이-없는가">내륙에 빈틈이 없는가</h3>

<p>마이그레이션 이전 원본 (polygon)이 대한민국 내륙에 빈틈이 없었습니다.
따라서 마이그레이션된 결과에서도 내륙에 빈 틈이 있어선 안됩니다.</p>

<p>이는 다음과 같은 과정을 통해 검증했습니다.</p>

<ol>
  <li>마이그레이션 결과 1150만개 셀을 모두 읽어 정규화하고, 다시 텍스트파일로 내보낸다.</li>
  <li>내륙 지방의 대부분을 덮는 레벨인 6~9레벨 셀을 시각화해본다.</li>
  <li>대한민국 내륙 지방을 잘 덮는지 확인한다.</li>
</ol>

<p>작성할 핵심 코드는 간단합니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">tokens</span> <span class="o">=</span> <span class="n">getAllMigratedTokens</span><span class="o">();</span>

<span class="nc">S2CellUnion</span> <span class="n">union</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2CellUnion</span><span class="o">();</span>

<span class="c1">// 앞서 읽은 전체 토큰으로 initialze.</span>
<span class="n">union</span><span class="o">.</span><span class="na">initFromCellIds</span><span class="o">((</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;)</span> <span class="n">tokens</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">S2CellId:</span><span class="o">:</span><span class="n">fromToken</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">()));</span>
<span class="c1">// 정규화</span>
<span class="n">union</span><span class="o">.</span><span class="na">normalize</span><span class="o">();</span>

<span class="c1">// 이후 S2CellUnion의 모든 s2 token을 파일로 쓰기</span>
</code></pre></div></div>

<p>다음과 같은 파일이 작성됩니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_tokens_with_level_file.png" alt="전체 마이그레이션 정규화 후 파일로 내보내기" /></p>

<p>마이그레이션 결과 전체를 정규화한 후 내보낸 결과</p>

<p>내륙 지방의 대부분을 덮는 레벨인 6~9레벨 토큰만을 뽑아 모두 시각화 툴에 그려보니</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/migration_result_level_6to9.png" alt="전체 마이그레이션 결과 중 6~9레벨 시각화" /></p>

<p>대한민국 내륙 지방이 모두 큼지막한 사각형으로 잘 채워져 있음을 알 수 있었습니다.</p>

<p>만약 내륙에 조금이라도 빈 틈이 있었다면 해당 지역은 정규화되지 않아 잘개 쪼개져 있었을거에요.🙂</p>

<h3 id="외곽지역-섬지역의-마이그레이션-결과에-문제가-없는가">외곽지역, 섬지역의 마이그레이션 결과에 문제가 없는가</h3>

<p>외곽지역이나 섬지역의 마이그레이션 결과를 보기 위해서는 해당 지역의 토큰을 모두 꺼내어 시각화 툴에 그려보아야 했는데요. 앞서 사용했던 시각화 툴에서는 많은 토큰을 동시에 그리기 어렵고, 매번 특정 동의 토큰을 모두 선택해 그려 검증해야 했습니다.</p>

<p>따라서 여러 행정동을 동시 선택해 지도에 표시해 검증할 수 있는 툴을 별도로 개발해 외곽, 섬 지역들을 수월하게 검증할 수 있었습니다.</p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_visualization_tool_1.png" alt="S2 시각화 툴 사용 - 방이동" /></p>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_visualization_tool_2.png" alt="S2 시각화 툴 사용 - 신안" /></p>

<h3 id="겹치는-영역이-없는가다른-레벨-포함">겹치는 영역이 없는가(*다른 레벨 포함)</h3>

<p>앞서 경계를 maxLevel로 모두 쪼개어 처리했으니 행정동간 <strong>동일한 레벨끼리 겹치는 영역은 없습니다.
서로 다른 레벨간 겹치는 영역 또한 없어야 하는게 맞습니다.</strong> 하지만 고려하지 못한 엣지 케이스가 존재해 겹치는 토큰이 발생할 수 있다고 생각했습니다.
만약 겹치는 토큰이 존재한다면 특정 위경도 좌표에서 좌표에 해당하는 행정동 조회시 여러개의 동이 조회될 수 있게 되고, 이는 작지 않은 문제가 됩니다.</p>

<p>따라서 자동화된 검증 방법이 필요했고 트리 자료구조에서 아이디어를 얻어 검증에 사용했습니다.</p>

<ol>
  <li>셀을 모두 꺼내어와 레벨 오름차순으로 정렬</li>
  <li>셀의 위치를 표현할 수 있는 자리를 탐색(ex. 5-3-2 셀은 face5번 셀의 3번 자식셀의 2번 자식셀 위치)</li>
  <li>자리를 찾은 경우 S2CellId를 할당해 해당 셀이 존재함을 표시</li>
  <li>트리에서 할당할 자리를 찾는 도중 S2CellId가 들어있는 노드를 거치거나, 할당할 자리에 이미 동일한 S2CellId가 들어있는 경우 중복이 발생했음을 의미</li>
</ol>

<p>코드는 다음과 같습니다</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">validateNoIntersection</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">S2CellId</span><span class="o">&gt;</span> <span class="n">s2CellIds</span> <span class="o">=</span> <span class="n">getAllMigratedTokens</span><span class="o">()</span>
                <span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="nl">S2CellId:</span><span class="o">:</span><span class="n">fromToken</span><span class="o">)</span>
                <span class="o">.</span><span class="na">sorted</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">comparing</span><span class="o">(</span><span class="nl">S2CellId:</span><span class="o">:</span><span class="n">level</span><span class="o">))</span>
                <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>

        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"total cells: {}"</span><span class="o">,</span> <span class="n">s2CellIds</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
        <span class="nc">S2CellIdTree</span> <span class="n">tree</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2CellIdTree</span><span class="o">();</span>

        <span class="k">for</span> <span class="o">(</span><span class="nc">S2CellId</span> <span class="n">cellId</span> <span class="o">:</span> <span class="n">s2CellIds</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(!</span><span class="n">tree</span><span class="o">.</span><span class="na">addS2Cell</span><span class="o">(</span><span class="n">cellId</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"겹치는 영역 발생: {}"</span><span class="o">,</span> <span class="n">cellId</span><span class="o">.</span><span class="na">toToken</span><span class="o">());</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>S2CellIdTree.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">com.google.common.geometry.S2CellId</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">S2CellIdTree</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">S2CellIdTree</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="kd">private</span> <span class="kd">final</span> <span class="nc">S2CellIdNode</span><span class="o">[]</span> <span class="n">faceCells</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">S2CellIdTree</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">faceCells</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2CellIdNode</span><span class="o">[]{</span><span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">(),</span> <span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">(),</span> <span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">(),</span> <span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">(),</span> <span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">(),</span> <span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">empty</span><span class="o">()};</span>
    <span class="o">}</span>

    <span class="cm">/**
     * 해당 인덱스의 노드가 비어있는 상태일 경우에만 노드를 채워넣음.
     * S2CellId를 받아 트리의 올바른 위치에 S2CellIdNode로서 채워넣음
     * 탐색 도중 비어있지 않은 노드가 있는 경우 위치 탐색을 중지하고 false 반환
     *
     * @param s2CellId 트리에 추가할 S2CellId
     * @return 추가여부 - false의 경우 들어갈 위치의 노드가 비어있지 않거나, 상위 노드가 비어있지 않음 (더 낮은 레벨의 셀과 겹침)
     */</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">addS2Cell</span><span class="o">(</span><span class="nc">S2CellId</span> <span class="n">s2CellId</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// face level node를 결정</span>
        <span class="nc">S2CellIdNode</span> <span class="n">node</span> <span class="o">=</span> <span class="n">faceCells</span><span class="o">[</span><span class="n">s2CellId</span><span class="o">.</span><span class="na">face</span><span class="o">()];</span>

        <span class="c1">// face level에 이미 S2CellId가 들어가있는 경우</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">node</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"{} is child of {}"</span><span class="o">,</span> <span class="n">s2CellId</span><span class="o">.</span><span class="na">toToken</span><span class="o">(),</span> <span class="n">node</span><span class="o">.</span><span class="na">getS2Token</span><span class="o">());</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="c1">// 1레벨부터 넣고자하는 S2CellId의 레벨까지 순회</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">level</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">level</span> <span class="o">&lt;=</span> <span class="n">s2CellId</span><span class="o">.</span><span class="na">level</span><span class="o">();</span> <span class="n">level</span><span class="o">++)</span> <span class="o">{</span>
            <span class="c1">// 레벨에서의 인덱스를 찾아 (0..3) 그 위치의 노드를 가져온다.</span>
            <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">s2CellId</span><span class="o">.</span><span class="na">childPosition</span><span class="o">(</span><span class="n">level</span><span class="o">);</span>
            <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="na">getChild</span><span class="o">(</span><span class="n">pos</span><span class="o">);</span>

            <span class="c1">// 노드에 이미 S2CellId가 들어가있는 경우 중복이 발생했음을 알 수 있다.</span>
            <span class="k">if</span> <span class="o">(!</span><span class="n">node</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"{} is child of {}"</span><span class="o">,</span> <span class="n">s2CellId</span><span class="o">.</span><span class="na">toToken</span><span class="o">(),</span> <span class="n">node</span><span class="o">.</span><span class="na">getS2Token</span><span class="o">());</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">node</span><span class="o">.</span><span class="na">setS2CellId</span><span class="o">(</span><span class="n">s2CellId</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p>S2CellIdNode.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">com.google.common.geometry.S2CellId</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">S2CellIdNode</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">S2CellIdNode</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="kd">private</span> <span class="nc">S2CellId</span> <span class="n">cellId</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">S2CellIdNode</span><span class="o">[]</span> <span class="n">childCells</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nf">S2CellIdNode</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEmpty</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">cellId</span> <span class="o">==</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">S2CellIdNode</span> <span class="nf">getChild</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">childCells</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">childCells</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">S2CellIdNode</span><span class="o">[]{</span><span class="n">empty</span><span class="o">(),</span> <span class="n">empty</span><span class="o">(),</span> <span class="n">empty</span><span class="o">(),</span> <span class="n">empty</span><span class="o">()};</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">childCells</span><span class="o">[</span><span class="n">index</span><span class="o">];</span>
    <span class="o">}</span>

    <span class="cm">/**
     * 해당 인덱스의 노드가 비어있는 상태일 경우에만 노드를 채워넣음.
     *
     * @param cellId 채워넣을 child cell
     * @return 할당 여부
     */</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">setS2CellId</span><span class="o">(</span><span class="nc">S2CellId</span> <span class="n">cellId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"'{}' token이 이미 존재함"</span><span class="o">,</span> <span class="n">cellId</span><span class="o">.</span><span class="na">toToken</span><span class="o">());</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">this</span><span class="o">.</span><span class="na">cellId</span> <span class="o">=</span> <span class="n">cellId</span><span class="o">;</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getS2Token</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">Optional</span><span class="o">.</span><span class="na">ofNullable</span><span class="o">(</span><span class="n">cellId</span><span class="o">).</span><span class="na">map</span><span class="o">(</span><span class="nl">S2CellId:</span><span class="o">:</span><span class="n">toToken</span><span class="o">).</span><span class="na">orElse</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">S2CellIdNode</span> <span class="nf">empty</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">S2CellIdNode</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>겹치는 토큰이 존재하는 케이스와 존재하지 않는 케이스로 모두 검증해본 결과 모두 정상적으로 검증 되었고,
이로써 1100만개 이상의 S2 토큰들 중 겹치는 토큰(다른 레벨 포함)이 존재하는지를 수 초 내에 검증할 수 있게 되었습니다.</p>

<p><strong>드디어 모든 마이그레이션과 검증 과정을 마쳤습니다.</strong></p>

<h2 id="마이그레이션-과정-정리">마이그레이션 과정 정리</h2>

<p>전체 마이그레이션 과정을 정리하면 다음과 같습니다.</p>

<ol>
  <li><strong>S2 1차 마이그레이션</strong><br />
<strong>→ 이후 다른 레벨의 셀 간 겹치는 케이스를 발견해 외곽 셀의 크기를 고정한 상태로 재마이그레이션 했습니다.</strong></li>
  <li><strong>겹치는 영역 추출</strong></li>
  <li><strong>겹치는 영역 처리</strong></li>
  <li><strong>검증</strong>
    <ol>
      <li>대한민국 내륙을 모두 덮는가</li>
      <li>외곽지역 또는 섬지역 마이그레이션 결과에 문제가 없는가</li>
      <li>(다른 레벨 포함) 겹치는 영역이 없는가</li>
    </ol>
  </li>
</ol>

<p><img src="https://woowabros.github.io/img/2021-02-27/s2_migration_wiki.png" alt="S2 마이그레이션 정리" /></p>

<h2 id="결과">결과</h2>

<p>결국 S2는 성공적(?)으로 적용되었습니다. (마이그레이션 이후 오픈까지의 과정도 만만찮았지만.. 기회가 된다면 다른분께서 새로운 글로 다뤄주시겠죠..!?)
적용 후 사장님께서는 배달지역을 기존에 비해 훨씬 유연하게 설정하실 수 있습니다. 그덕에 서비스적인 발전 가능성이 높아졌 <del>다고믿고싶</del> 고요.</p>

<h2 id="내게-있어">내게 있어</h2>

<p>돌아보면 S2프로젝트는 제게 있어 단순히 <strong>가게 배달지역을 유연하게 설정할 수 있게 되었다.</strong> 라는 한 줄 이상의 의미를 갖고 있습니다.</p>

<p><strong>이곳이 첫 회사인 신입 개발자로서</strong> 그동안 진행했던 프로젝트는 일하는 방법을 배우고 몰랐던 것을 알아가는 데에 중점이 맞춰져 있었습니다. 반면 S2프로젝트는 기존 적용 사례도 없고 레퍼런스도 거의 없는 상태에서 주도적으로 움직이고 공유하는 입장에서 진행해야 했어요. 물론 큰 방향은 다 제시해주셨고 이제와서 돌아보니 떠먹은 기억밖에 없네요 😹</p>

<p>진행 중 여러 시행착오를 겪기도 하고, 어리버리해서 안 해도 될 고생을 사서 하기도 하고, ‘내가 잘 해낼 수 있을까?’ 하는 생각때문에 정신적으로 힘들었던 때도 많았습니다. 하지만 아무도 나무라지 않으셨고요. 격려해주시고 자신감을 불어넣어주셨어요. 그덕에 성공적으로 마칠 수 있었습니다. 정말 감사합니다 🙏🏻</p>

<p>그렇게 제 알을 깨고 한꺼풀 더 성장하게 만들어준 프로젝트였기에 글로써 기록하고 싶었던 것 같습니다. (너무 오랜 시간 적은게 문제네요..)</p>

<p><del>S2 프로젝트를 마무리하고 나의 성공 시대 시작됐다</del>~</p>

<p>사실 S2를 검토중인 분을 제외하고는 기술적으로 큰 인사이트는 드리지 못했을 것 같아 송구하지만, 얘 애썼구나.. 하는 애정어린 시선으로 봐주시길 부탁드립니다 🙇🏻‍♂️</p>

<p>다음번엔 더욱 영양가있는 글을 들고 올 수 있도록 노력할게요!</p>

<h2 id="진짜-마지막으로">진짜 마지막으로!</h2>

<p>가게시스템팀은 아직 갈 길이 멀어요.. 자동화해야할 업무도 쌓여있고요. 시스템 개선포인트도 많답니다. 함께하실 분을 애타게 기다리고 있어요 😉</p>

<p>살짝 관심이 생겼다면? <a href="https://www.woowahan.com/#/recruit/tech">여기</a></p>

<p><strong>감사합니다. 🙇🏻‍♂️</strong></p>
, 
01:45:49.065 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.065 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.065 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.066 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.067 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.067 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 시스템신뢰성개발팀을 소개합니다., https://woowabros.github.io/sre/2021/02/22/introduction-to-sre.html, , , 2021-02-22, , 0, <blockquote>
  <p>안녕하세요.
우아한형제들 시스템신뢰성개발팀 박주희입니다.</p>

</blockquote>

<p>사회생활 N년차, <br />
여러 업무를 해봤지만, 개인적으로 가장 힘들다고 생각하는 것은 바로 <strong>자기소개</strong>입니다. <br />
특히, 최근에 업무를 진행하면서 처음 만나는 분들께 <em>‘안녕하세요. 우아한형제들 시스템신뢰성개발팀 박주희입니다.’</em> 라고 인사를 하면, 상대의 얼굴에는 물음표만 가득합니다.
흔하지 않은 팀이름에, 어떤 일을 하고 있는지 짐작조차 못 하는 사람이 대부분입니다. 
개발자분들에게는 SRE팀이라고 한 번 더 소개하면 <strong>‘아!’</strong> 하는 반응을 주시지만, 다른 직군에 계신 분들에게는 그저 혼란스러움이 가중될 뿐입니다. 
그럴 때마다 횡설수설 여러 설명을 덧붙여보지만, 명쾌한 답을 주기란 쉽지 않습니다. <br />
<span style="color:lightgray; font-weight:700"> (아직도 부모님께서는 제가 무슨 일을 하고 있는지 모르고 계십니다 :p)</span>  <br /></p>

<p>시스템신뢰성개발팀 채용의 문을 선뜻 두드리지 못하는 게 어쩌면 이것 때문은 아닐까 걱정이 되어, 시스템신뢰성개발팀을 잘 설명할 수 있는 내용을 정리해보기로 했습니다.
우리가 어떤 경험을 하고 있는지, 어떻게 성장하고 있는지, 어떤 것이 더 필요한지를 잘 알려준다면, 같이 일할 동료가 많이 늘어날 수 있을 것 같다는 작은 희망을 품고 이 글을 써 내려 가봅니다.
팀이름, JD에 담아내기 힘들었던 조금은 길고 자세한 이야기가 누군가에게는 새로운 관심이 되고, 누군가에게는 큰 결심이 될 수 있기를 바라봅니다.<br /><br /></p>

<h2 id="첫-번째-질문-시스템신뢰성개발팀-팀명은-무슨-뜻인가요">첫 번째 질문, 시스템신뢰성개발팀 팀명은 무슨 뜻인가요?</h2>
<p>시스템신뢰성개발팀, 뭔가 어렵고 복잡한 이름 같죠? <br />
개발조직 내부에서는 시스템신뢰성개발팀이라는 긴 이름 대신 SRE팀으로 많이 부르고 있습니다. <br />
SRE는 Site Reliability Engineering의 약자로 번역하자면 사이트 신뢰성 공학이며, 시스템, 서비스 및 제품에서 적절한 수준의 안정성을 지속적으로 달성하도록 지원하는 엔지니어링 분야입니다. 
SRE는 서비스의 인프라와 운영 관점의 문제를 소프트웨어 엔지니어링 기법을 통해 해결하고자 나온 개념으로, SRE의 주요 목표는 확장성과 고가용성을 확보한 소프트웨어를 만드는 것 입니다.
자세한 설명은 <a href="https://sre.google/sre-book/introduction/">Google의 SRE</a> 를 한 번 읽어 보시길 추천합니다.<br />
한 마디로, <strong>서비스를 안정적으로 제공하기 위한 여러 활동을 하는 팀</strong>이며, 개발조직 내부에서 대부분 SRE팀이라고 부르고 있기 때문에,
 <del>어쩌면 몇몇 개발자분들은 SRE팀의 풀네임이 시스템신뢰성개발팀이라는 걸 모르고 계실지도 모릅니다.</del> <br />
슬랙에서 SRE팀으로 검색해보면 아래와 같은 메시지를 확인할 수 있습니다. <br />
<img src="/img/2021-02-22/03.png" width="700" height="400" /> <br /></p>

<h2 id="두-번째-질문-시스템신뢰성개발팀은-어떤-일을-하나요">두 번째 질문, 시스템신뢰성개발팀은 어떤 일을 하나요?</h2>
<p>서비스를 제공하면서 고객의 신뢰를 잃지 않기 위해 가장 중요한 것은 고객이 원하는 시점에 원하는 서비스를 제공해주는 것입니다.<br />
배달의민족 서비스를 생각해보면, 고객이 배고픈 시간에 주문을 할 수 있는 것을 뜻하죠.<br /><br /></p>

<p>우아한형제들은 <strong>‘좋은 음식을 먹고 싶은 곳에서’</strong> 라는 비전을 가지고 있습니다.<br />
SRE팀은 여기에 한 가지를 덧붙여 사용합니다.
<strong>‘좋은 음식을 <span style="color:red; font-weight:700">먹고 싶을 때 </span> 먹고 싶은 곳에서’ <br /></strong></p>
<center><img src="/img/2021-02-22/05.png" /> <br /></center>
<p><br /></p>

<p><em>자, 상상을 한번 해 볼까요?</em> <br /></p>
<blockquote>
  <p>오늘 하루 정말 눈코 뜰 새 없이 바쁘게 보냈습니다. 점심 먹을 시간도 없었어요. <br />
그래도 오늘 정말 중요한 프로젝트를 잘 끝내서 후련함과 뿌듯함을 가득 안고 퇴근길에 오릅니다. <br />
일할 땐 몰랐는데, 끝나고 나니까 배고픔이 몰려오네요. <br />
스스로 보상을 줘야겠다고 생각합니다. <br />
“오늘 하루 고생했으니 치킨에 맥주를 먹어야지~” <br />
퇴근길에 편의점에 들러서 맥주를 사 와 냉장고에 넣어두고 씻기 전에 치킨을 시키려고 배달의민족 앱을 켰습니다. <br />
어떤 치킨을 먹을지 행복한 고민을 하면서 메뉴를 정하고 주문을 하려고 하는데 <br />
… <br />
… <br />
주문을 할 수 없다는 오류가 뜹니다. <br /></p>

</blockquote>

<p>이런 상황에서 화가 나지 않을 사람은 과연 몇 명이나 될까요? <br />
요즘 자주 들리는 표현을 빌리자면, 한국인은 언제나 먹는 것에 진심인 만큼 원하는 시간에 먹고 싶은 것을 먹을 수 없을 때 오는 그 허탈함과 분노도 엄청납니다. 
우리에게 끼니란 에너지 보충 정도의 의미를 넘어서, 삶에서 매우 크고 중요한 부분이기 때문에 배달의민족 서비스도 그만큼 무거운 책임감을 느끼고 있습니다. 
우리 서비스에 대한 신뢰는, 원하는 시간에 먹고 싶은 것을 먹을 수 있다는 믿음을 뜻합니다.
SRE팀은 이 신뢰를 지키는데 필요한 모든 활동을 하고 있습니다. <br /><br />
그래서 팀 업무에서 언제나 변함없이 최상위 우선순위를 차지하고 있는 것이 바로 <span style="color:red; font-weight:700">  <strong>‘장애’</strong> </span> 입니다. <br /></p>

<p>SRE팀은 <strong>장애를 빠르게 탐지</strong>하여 <strong>장애를 최소화</strong> 할 수 있는 수단과 방법을 고민하고, <br />
<strong>장애 복구 시간을 단축</strong>하기 위해서 <strong>가능한 모든 수단을 동원</strong>하며, <br />
장애에 영향받는 유관부서 및 고객에게 빠짐없이 <strong>빠르게 전파</strong>하고, <br />
장애가 종료된 후에 각종 <strong>후속 조치</strong> 및 <strong>장애 리뷰</strong>를 하는 <br />
이 모든 프로세스를 정의하고, 운영하고, 지원하며, 직접 수행하기도 합니다. <br /></p>

<p>이런 장애 대응 활동은 배달의민족 서비스에 국한되어 있지 않고, <br />
배달의민족, 배민라이더스, B마트, 배민상회, 배민장부, 만화경, 로봇 등 모든 서비스를 아우르고 있습니다.<br /><br /></p>

<blockquote>
  <p>지금부터 장애 탐지, 장애 복구, 장애 재발 방지, 장애 예방 등, 장애를 대응하기 위해서 SRE팀이 하는 일을 간략하게 살펴보겠습니다.<br /></p>
</blockquote>

<h4 id="1-장애-탐지">1. 장애 탐지</h4>
<p>장애를 최소화할 수 있는 방법 중 하나는 서비스의 이상 징후를 빠르게 탐지하는 것입니다. 
다양한 모니터링 지표를 통해 실시간으로 서비스 이상 징후를 확인하고, 
필요에 따라 모니터링 지표나 알람을 세분화/고도화하여 문제가 되는 지점을 정확하게 찾기 위해 많은 노력을 하고 있습니다. 
이 과정에서 여러 시스템 지표는 물론이고, 비즈니스 지표까지 함께 장애 탐지에 사용하고 있습니다.  <br />
모니터링과 알람을 통한 빠른 장애 탐지가 중요한 이유는, 빠르고 정확한 장애 탐지를 통해서 장애가 확산되는 것을 예방하며, 이를 통해서 사용자의 불편함을 최소화할 수 있기 때문입니다.
또한, 이상 징후가 정확하고 빠르게 탐지되면 이를 활용해서 self healing이 가능하도록 엔지니어링이 가능하기 때문에  탐지에서 그치지 않고 이를 계속해서 고도화하고 있습니다. <br /></p>

<h4 id="2-장애-복구">2. 장애 복구</h4>

<p>장애를 직접 겪어 본 사람은 누구나 한 번쯤 말 그대로 멘탈이 <del>너덜너덜</del>해지는 경험을 하게 됩니다.
장애 복구를 진행하는 동시에 무수하게 쏟아지는 질문에 답도 해야 하는데,
이미 머릿속은 하얗고, 손끝은 떨려오고, 심장이 터질 것 같죠. ㅠㅠ <span style="color:lightgrey; font-weight:700"> (실제 경험담) </span>  <br />
이때, SRE팀은 담당 개발자가 <strong>서비스 복구에 집중</strong>할 수 있도록 여러 지원 활동을 수행합니다.
각종 지표와 로그를 분석하고, 유사한 상황의 경험을 공유하고, 해결방안을 검색해보기도 하며, 유관부서에서 적절하게 대응할 수 있는 정보를 제공하기 위한 장애 전파도 지원하고 있습니다.
장애 상황에서는 같이 대응해주는 동료의 머리와 눈과 손이 너무나 소중하고 든든하기 때문에 <span style="color:lightgrey; font-weight:700">(이 또한 경험담) </span> 직접 대응을 지원하기도 하지만, 
직접 대응이 불가능한 부분은 도움이 될 수 있을 것 같은 모든 사람을 소환해서 지원을 요청하기도 합니다. <br /></p>

<h4 id="3-장애-재발-방지">3. 장애 재발 방지</h4>

<p>장애가 해소되었다고, 우리의 일이 끝나는 것은 아닙니다.  <br />
화재진압과 동일하게, 일단 불을 껐으면 남아 있는 잔불은 없는지, 발화지점은 어디인지, 비슷한 사고를 예방하려면 어떤 조치가 필요한지를 살펴보게 됩니다. 
이러한 모든 과정을 <strong>장애 리뷰</strong>와 <strong>장애 재발 방지</strong> 작업이라고 합니다. <br /></p>

<p>우아한형제들 개발조직은 굉장히 활발하게 장애 리뷰를 진행하고 있습니다. <br />
하지만, 장애 리뷰는 좋은 장애 재발 방지 대책을 찾기 위한 수단이기 때문에 리뷰가 리뷰에서만 그치면 의미가 없습니다. 
<span style="color:lightgrey; font-weight:700">(마음만 아플 뿐…) </span> 
장애 리뷰가 효과를 발휘하기 위해서는 반드시 유사한 장애가 발생하지 않도록 장애 재발 방지 조치가 완료되어야 합니다. 
비록 소 잃고 외양간 고치는 격이라고 하더라도, <strong>우리는 다음 소를 잃지 않기 위해서 오늘도 외양간을 고칩니다.</strong></p>

<p>장애 리뷰를 진행하면서 우리는 가능한 가장 원천적이고 핵심적인 원인을 찾으려고 노력합니다. 
Root Cause를 찾아서 개선하고, 장애 리뷰 과정에서 도출된 여러 시스템 취약점들을 개선합니다. 
대부분 장애는 하나의 절대적이고 단순한 원인이 아니라, 여러 원인과 상황들의 시너지 효과로 인해서 촉발되고 확산되기 때문에 장애를 회고하는 과정을 통해서 여러 개선 포인트를 도출합니다.<br />
때로는 그 과정이 길고, 복잡하고, 고통스러울 때도 있지만, 비슷한 장애를 두 번 이상 겪는 것보다는 훨씬 적은 비용과 노력이 들어갑니다. 
예를 들어, <a href="https://woowabros.github.io/sre/2020/11/11/sre-troubleshoooting.html">SRE 팀에서 장애의 root cause를 찾고 재발 방지하는 방법</a>에 
설명된 케이스도 초기에 정확한 원인을 찾지 못해서 굉장히 고통스럽고 힘든 나날을 보냈습니다. 
여러 가설을 세우고, 하나씩 장애를 유발하는 요인을 제거해가면서 밤낮없이 원인을 찾아 나갔고, 원인을 찾아내서 재발 방지를 위한 조치까지 마무리한 후에야 비로소 마음을 놓을 수 있었습니다. 
원인을 찾아가는 과정은 힘들었지만, 피크시간만 되면 수십 명의 서비스 담당자들이 마음졸이며 지켜보지 않아도 되고, 마음 편히 저녁을 먹고 잠자리에 들 수 있다는 것만으로도 많은 시간, 노력, 비용을 줄인 것이라고 생각합니다.</p>

<h4 id="4-장애-예방">4. 장애 예방</h4>

<blockquote>
  <p>SRE팀은 장애를 예방할 수 있는 여러 활동도 병행하고 있는데, 주요 활동을 살펴보겠습니다.</p>
</blockquote>

<p><strong>모의 장애 훈련</strong> <br />
2020년 상반기에 서비스의 확장과 MSA로의 아키텍처 변화를 수용하기 위해서 장애 대응 프로세스를 개편했는데, 이 장애 대응 프로세스를 문서만 보고 100% 이해할 수 있는 사람은 없었습니다. 
그래서 우리는 개발환경에서 실제에 가까운 장애를 유발하고, 대응해보는 모의 장애 훈련을 진행하게 되었습니다. 
처음에는 장애 대응 프로세스를 전파하기 위한 수단이었지만, 이 모의 장애 훈련을 통해서 우리는 실제로 우리 시스템의 많은 취약점을 찾아내게 되었습니다. 
훈련을 계획하고 설계하고 실제로 수행하는 데까지 많은 시간과 노력이 들어가지만, 그런 노력을 들일만 한 충분한 가치가 있는 일이기에, 2021년에도 모의 장애는 계속 진행할 예정입니다.
<span style="color:lightgrey; font-weight:700">(모의 장애 훈련에 대한 긴긴 이야기는 다음 기회에… )  </span></p>

<p><strong>아키텍처 리뷰</strong> <br />
MSA 구조에서는 silo 현상이 종종 발견되는데, 이는 사람이나 조직에 국한된 내용이 아니 아키텍처에서 나타나기도 합니다. 
각 서비스에 최적화된 구조로 시스템을 구축하기 때문에 각 시스템의 아키텍처, 스펙, 모니터링, 알람 등이 굉장히 파편화되는 현상이 나타나게 되는 것입니다. 
그래서 SRE팀에서는 개별 서비스 개발팀과의 아키텍처 리뷰를 진행하면서 각 시스템의 SPOF를 찾아내고, 장애를 유발할 수 있는 포인트를 사전에 찾아서 개선합니다. 
아키텍처 리뷰를 위해서 각 서비스의 아키텍처를 모두 문서화해야 하고, 
아키텍처를 설계하면서 반드시 지켜져야 할 핵심 내용을 사전에 정의하는 작업이 필요하므로 이 또한 많은 시간과 노력이 필요합니다. 
매일 매일 비즈니스 요구사항에 맞춰 개발해나가기에도 빠듯한 일정이기에, 
이미 운영되고 있는 서비스의 아키텍처 리뷰에 시간을 할애한다는 것이 쉬운 일은 아닙니다. 
하지만 이 과정을 통해서 장애를 예방할 수 있기 때문에 <em>‘계획된’</em> 아키텍처 리뷰가 <em>‘불시의’</em> 장애를 예방함으로써, 더 가치 있게 시간을 사용할 수 있습니다.</p>

<p><strong>공지, 문서화, 리마인드, 등등</strong> <br />
SRE팀은 앞에서 살펴본 것과 같이 장애 대응, 모의 장애 훈련, 아키텍처 리뷰 등을 통해서 다양한 케이스의 취약점을 접하고 있습니다. 
위에서 언급했듯이, 이런 중요한 내용이 특정 팀에 머무르는 경우가 있기도 하고, 이미 알고 있지만 빠르게 개선하지 못하는 경우도 있습니다. 
이 현상은 누군가의 잘못이라기보다는 서비스의 성장에 맞춰서 비즈니스 요구사항을 빠르게 반영하다 보니 다른 팀에 알려주기에도 벅차고, 우선순위를 조정하기에도 힘이 들기 때문에 발생하게 됩니다. 
그렇기 때문에 다양한 채널로 취합된 이런 취약점이나 개선 포인트를 최대한 넓게 공유하는 역할도 SRE팀에서 하고 있습니다. 이슈가 되는 포인트를 정의하고, 개선 방향을 제시하고, 진행 상황을 체크합니다. 
이 과정에서 다양한 문서를 생산해내고 있으며, 동원할 수 있는 모든 커뮤니케이션 수단을 활용해서 최대한 많이 전파하기 위해 노력합니다. 
SRE팀에서 전달하는 내용은 기본적으로 모든 개발팀을 대상으로 하며, 때로는 비즈니스 조직의 유관부서까지 포함하기 때문에 최대한 자세히 설명하려고 노력합니다.</p>

<p><strong>장애에 대한 인식 개선</strong> <br />
장애는 경력이나 직급, 직군과 관계없이 모두에게 힘든 일입니다.<br />
특히 원인을 찾고, 재발 방지 대책을 찾다 보면 
<span style="color:lightgrey; font-weight:700"> <em>내가 왜 그랬을까, 왜 진작 몰랐을까, 왜 빨리 해결하지 못했을까, 왜, 왜, 왜, 왜왜왜왜…</em> </span>
라는 생각을 계속 반복하게 됩니다.<br /></p>

<p>이럴 때마다 SRE팀에서는 몇 가지 패턴의 이야기를 합니다.<br /></p>
<blockquote>
  <p>사람은 누구나 실수 할 수 있기 때문에 <br />
같은 실수를 반복하지 않는 것이 중요하고, <br />
실수를 통해서 배우는 것이 중요하며, <br />
내가 한 실수는 다른 사람도 할 수 있기 때문에 실수를 방지할 수 있도록 시스템이 막아줄 수 있어야 한다. <br /></p>

  <p><strong>즉, 장애는 결코 어느 한 사람, 한 조직의 잘못이 아니다.</strong> <br /></p>
</blockquote>

<p>장애를 겪으면서 누군가를 블레임한다고 해서 그 상황이 절대 나아지지는 않으며 오히려 더 폐쇄적으로 이슈를 감추게 되기 때문에 
우리는 장애의 책임을 개인이나 특정 조직에 전가하지 않습니다. 
장애는 물론 어렵고 힘든 과정이지만, 이 과정에서 많이 배우고 갈고 닦아서 우리 시스템을 더 견고하게 만드는 것이 중요하다고 생각합니다. 
SRE팀은 누구나 쉽게 이슈를 오픈하고, 도움을 요청하며, 장애에 대해 자유롭게 이야기할 수 있는 환경을 만들기 위해서 많은 노력을 기울이고 있습니다.</p>

<h2 id="세-번째-질문-시스템신뢰성개발팀은-무엇을-개발하나요">세 번째 질문, 시스템신뢰성개발팀은 무엇을 개발하나요?</h2>

<p>계속해서 이야기하고 있듯이, SRE팀의 최상위 우선순위는 항상 <strong>‘장애’</strong> 입니다.<br />
이상징후를 빠르게 확인하고, 리소스를 잘 식별하며, 사전에 우리 시스템의 취약점을 찾아내고, 
장애가 발생하더라도 간단한 조치로 빠르게 복구할 수 있는 방법에 대해 끊임없이 고민하고 있기 때문에, 
SRE팀에서 개발하고 있는 모든 코드는 이러한 관점에서 시작된다고 할 수 있습니다.<br /><br />
한가지 예를 들어보면, 우리는 사내 모든 리소스에서 발생하는 모든 변화를 즉시 감지할 수 있는 툴을 만들었는데, 
이는 시스템 이슈나 장애가 발생한 경우에 가장 먼저 의심이 되는 포인트 (즉, 시스템의 어떠한 변화)를 확인하는 수단으로 사용하고 있습니다. 
각 도메인 서비스(주문, 가게, 쿠폰, 등)는 MSA 구조 아래서 독립적으로 운영되는 듯 보이지만, 
이전보다 훨씬 더 촘촘하고 복잡한 연결망을 가지고 있기 때문에 시스템의 변화를 감지하고 대응하는 것이 매우 중요합니다. 
종종 한 도메인의 작은 변화가 나비효과를 일으켜서 완전히 생뚱맞다고 생각되는 지점에서 오류를 발생시키기도 하는데, 
이 경우 원인을 찾아가는 과정에서 여러 단계를 거치게 되고, 그에 비례하여 장애 시간도 늘어나기 때문에 장애 시간을 단축하고자 이런 툴을 개발하게 되었습니다. <br /></p>

<p>2021년에도, 지금까지 SRE팀이 겪은 많은 경험을 토대로 더 나은 환경에서 우리 서비스의 안정성을 높일 수 있는 것들을 더 많이 준비하고 있습니다. 
이 글을 읽고 조금의 관심이 생겼다면, 혹은 단호한 결심을 했다면 <a href="https://resume.woowahan.com/jobs/view.aspx?cc=244001&amp;jidx=105821&amp;pidx=11341&amp;bidx=166017">[공통기술부문] SRE 엔지니어(DevOps)</a> 모집을 클릭해주세요. <br /></p>

<p>긴 글 읽어주셔서 감사합니다.
앞으로도 SRE팀은 많은 분들의 즐거운 식사를 위해 노력하겠습니다.</p>

, 
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.071 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.072 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.072 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Scaling Revenue & Growth Tooling, https://netflixtechblog.com/scaling-revenue-growth-tooling-87ff969d4241?source=rss----2615bd06b42e---4, , Netflix Technology Blog, 2021-03-23, , 0, <p><em>Written by </em><a href="https://www.linkedin.com/in/nick-tomlin-b0397636/"><em>Nick Tomlin</em></a><em>, </em><a href="https://www.linkedin.com/in/michaelpossumato/"><em>Michael Possumato</em></a><em>, and </em><a href="https://www.linkedin.com/in/rahul-pilani/"><em>Rahul Pilani</em></a><em>.</em></p><p>This post shares how the Revenue &#38; Growth Tools (RGT) team approaches creating full-stack tools for the teams that are the financial backbone of Netflix. Our primary partners are the teams of <a href="https://sites.google.com/netflix.com/revenue-growth-eng/home">Revenue and Growth Engineering</a> (RGE): Growth, Membership, Billing, Payments, and Partner Subscription. Each of these engineering teams — and the operations teams they support — help Netflix acquire, sign up, and manage recurring payments for millions of members every month.</p><p>To provide a view of some of the unique challenges and opportunities of our domain, we’ll share some of the core strategies we’ve developed, some of the tools we’ve built as a result, and finally talk about our vision for the future of tooling on our team.</p><h3>Focusing on impact</h3><p>Like many teams at Netflix, we are <a href="https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249">full-cycle developers</a>, responsible for everything from design to ongoing development. As we grow, we must be selective in the projects we take on, and careful about managing our portfolio of full-stack products and tools to scale with the needs of the engineering teams we support. To help us strike the right balance, we focus on the impact of a given feature to help drive our internal product strategy.</p><p>Identifying impact requires deep engagement with our users. When someone within our team or organization identifies a new opportunity, we work closely with our engineering colleagues to identify the benefit not only of that team but the surrounding engineering and operational teams. Sometimes the result of this may mean investing in a highly customized tool for maximum impact. Often, this process discovers shared needs that we use to craft new product experiences that deliver value for multiple teams.</p><h4>Configuration management through Haze</h4><p>One of the patterns we identified across multiple teams was the need for a stable process around configuration and metadata management. In the past, the approach was to develop singular tools to manage configuration for each backend system. We realized that we could have a much greater impact by focusing on an information-driven UI that could function as a standalone tool to manage any backend data.</p><p>Initially, we were targeting our internal rules engine for driving experiences across the Netflix platform as the only configuration backend. The more we talked with our cross-functional partners, the more we saw an opportunity for a generic product. This engagement led us to the Haze platform.</p><p>Haze consumes metadata via GraphQL and JSON descriptions to facilitate and orchestrate backend microservice api calls to manage configuration data. Teams can simply define their schemas and the Haze UI can be connected to their systems to act as a user-friendly interface to these APIs (for a deeper look, see this <a href="https://netflixtechblog.com/building-a-rule-based-platform-to-manage-netflix-membership-skus-at-scale-e3c0f82aa7bc">blog post</a>).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*q77p6Apnh2OyHJIq" /></figure><p>By leveraging the <a href="https://netflixtechblog.com/open-sourcing-the-netflix-domain-graph-service-framework-graphql-for-spring-boot-92b9dcecda18">DGS framework</a>, and <a href="https://netflixtechblog.com/hawkins-diving-into-the-reasoning-behind-our-design-system-964a7357547">Hawkins</a> we delivered a full-fledged product experience on top of a stable Netflix platform, with the flexibility to evolve for future needs. Collaborating with the engineers we support, and the central platform teams we relied on (like the Hendrix team), ensured that we weren’t problem-solving in a vacuum, and opened the door for more generic solutions that benefit the whole of Netflix and not just our organization.</p><p>Haze removes the need for teams to create custom systems to manage configuration and safely expose that configuration to our cross-functional partners. It cuts down on engineering effort, empowers teams, and enables the business to quickly respond to new opportunities and challenges.</p><h3>Empowering the business through self-service</h3><p>Scaling systems like signup or payments are essential, but it is only part of the product engineering picture. Engineers need to ensure that operations teams scale to meet the needs of the operations teams that maintain and refine the Netflix product. Things like managing configuration for our payment experiences, migrating data, and managing partner integrations. Initially, much of this can be handled through manual flows that involve spreadsheets, reminders, and emails. This works, but it means a drain on both engineers and business partners and a missed opportunity to empower the business to grow.</p><p>Unfortunately, building safe, user-friendly workflows is not a zero-cost solution. Engineering teams have to choose between building bespoke tooling to automate solutions or manually handling requests. Our team has been investigating different workflow solutions to help teams automate common business processes without having to invest in an entirely custom toolchain.</p><h4>Self servicing workflows through RunScript</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*Pkc6RhHNsR_jMRtz" /></figure><p>One way we are helping engineering teams bridge this gap is with RunScript. RunScript provides a way for engineering teams to write a Kotlin or Java class and get a secure self-service UI to allow engineers and operations users to self-service common workflows. This allows engineers to connect to existing processes, or build their own with a familiar toolchain. This means that business users have the power to access systems by relying on an engineering team.</p><p>The service itself is built on top of The <a href="https://netflixtechblog.com/open-sourcing-the-netflix-domain-graph-service-framework-graphql-for-spring-boot-92b9dcecda18">DGS framework</a>, Kotlin, and React. These technologies allowed us to rapidly prototype the product, respond to feedback from our cross-functional partners, and provide a solid platform for future growth.</p><p>We’ve already replaced some homegrown solutions that required users to individually bootstrap and configure scripts with a generic UI built from in-code definitions. Operational users have a consistent, easy way to interact with backends that don’t have to worry about maintaining a UI; engineers can focus on essential business logic and let the rest of the platform do the heavy lifting. The result is an auditable, repeatable process that saves time and effort for everyone.</p><h3>What’s next?</h3><h4>Providing the building blocks for automation</h4><p>We’ve been exploring how to provide a framework for teams to build self-service tools from existing microservices with projects like RunScript. We’d like to expand that scope to provide to allow teams to expose any business workflow as an easy to consume, pluggable unit. We hope this will be an impact multiplier that allows all teams to reap the same time-saving, business empowering benefits, without needing to invest in custom solutions.</p><p>By implementing a registry for these common tasks, we want to make it easy to discover and compose the building blocks of the RGE platform into new and powerful workflows.</p><h4>Federating our domain</h4><p>Two of the Netflix principles we value the most are “Freedom and Responsibility” and “Highly aligned, loosely coupled” and we want our tools to reflect those philosophies. That means that engineering teams should feel empowered to architect their systems as they see fit. On the flip side, that freedom can make it harder to compose distributed microservices into a meaningful whole. We are investing in a <a href="https://www.apollographql.com/docs/federation/">federated GraphQL</a> API to help preserve freedom but drive alignment.</p><p>The federated infrastructure will help provide a unified interface across the teams we serve, as well as pave the way for allowing teams to own and expose their information in a consistent and accessible manner.</p><h4>Bridging platform and product teams</h4><p>Because we work with both platform teams and product teams, our team has a unique perspective on how tooling works at Netflix: we can build on or suggest platform technologies to our engineering partners, and bring their innovations and feedback to platform teams. This creates a virtuous cycle of feedback, alignment, and innovation where everyone benefits.</p><p>We’ve already seen some major wins with adopting things like the DGS framework, and we want to continue to further relationships with central teams to build unique experiences on top of centralized tools.</p><p>In the future, we want to take this even further where we act as a “Local Central Team” or LCT within RGE. We would coordinate our activities with other LCTs around Netflix and with central platform teams to share the great work that we are doing and hear about what other teams are building. The potential to engage with an even bigger audience to share and leverage some of the great products we are building together with our partners makes this space even more exciting.</p><h3>Build great things together</h3><p>We are just getting started on this journey to build impactful, full-stack experiences that help propel our business forward. The core to bringing these experiences to life is our direct collaboration with our colleagues, using the most impactful tools and technologies available. If this is something that excites you, we’d love for you to <a href="https://jobs.netflix.com/jobs/53821786">join us</a>.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=87ff969d4241" width="1" height="1" alt=""><hr><p><a href="https://netflixtechblog.com/scaling-revenue-growth-tooling-87ff969d4241">Scaling Revenue &#38; Growth Tooling</a> was originally published in <a href="https://netflixtechblog.com">Netflix TechBlog</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>, 
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.073 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.074 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.074 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 탈중앙과 온라인 게임이 교차하다, https://snack.planetarium.dev/kor/2020/10/decentralized-and-online-game-intersect/, , 김무훈, 2020년 10월 8일, , 0, 안녕하세요! 지난 2개월 간 플라네타리움의 엔지니어링 인턴으로 일한 김무훈입니다. 저는 나인 크로니클 출시 직전의 베타 과정을 함께했는데요.간단히 블록체인과 게임을 결합하며 특이하다고 생각한 기술적인 사례를 소개하겠습니다.탈중앙온라인 게임은 멀티 플레이와 사용자의 데이터를 저장하는 등 서비스를 운영하기 위한 용도로 서버를 이용합니다. 그러나 운영사가 폐업하는 등 여러 이유로 서비스가 중단되면 더 이상 게임을 즐길 수 없게 됩니다.모두가 온라인 게임을 분업하여 유지할 수 있다면 사용자가 남아있는 한 서비스가 종료될 걱정은 없게 됩니다. 이 개념에 맞는 탈중앙은 전통적인 중앙 서버의 역할을 사용자에게 분담해두는 형태를 의미하는데요. 기술적으로는 P2P나, 분산화 기술이라고 아마 한 번쯤은 들어 보셨을 겁니다.재구성 현상플라네타리움은 여러 분산화 기술 중에 블록체인을 활용해서 게임 내 재화, 보유한 아이템, 달성한 퀘스트 등의 데이터를 보존합니다.블록체인에 게임 플레이 데이터를 보관하면 간혹 이 정보가 몇시간 전으로 되돌아가는 문제가 있습니다. 블록체인 네트워크에서 일어나는 재구성 현상이라는 결함인데요.1 블록체인 커뮤니티에서는 이를 리오그(reorg)라 줄여서 부릅니다. 이 글에서도 편의상 리오그라 칭하겠습니다.블록이 순서대로 연결되어 있는 것을 체인이라 한다.리오그 현상에 대해 설명하기 전에 블록체인 네트워크에는 언제나 하나의 체인을 정본으로 지목한다는 사실부터 짚고 넘어가야 합니다.블록체인의 블록은 누구나 생성할 수 있습니다. 그러나 블록을 생성하는 여러 노드가2 같은 시점에 블록을 동시에 만든다면 시작은 같은데 끝 부분이 서로 다른 여러 체인이 나타납니다. 어떻게 하면 하나의 체인을 정본으로 지목할 수 있는 것일까요? 중앙의 누군가가 정해주는 것도 아닌데도 말입니다.비슷한 시점에 더 많은 자원이 투입된 체인을 채택한다.각 노드가 제멋대로 체인을 고르지는 않고, 모든 노드가 공유한 규칙에 따라 가장 규칙에 적합한 체인을 고릅니다. 나인 크로니클 및 Libplanet이 따르고 있는 작업 증명(PoW) 방식에서는 비슷한 시점에 블록을 생성하는데 더 많은 자원이 투자된 체인을 채택합니다.5개의 길이를 가졌던 파란 블록의 체인이 빨간 블록으로 리오그된다. (깊은 리오그)그런데 기존의 주류 체인보다도 이 규칙에 더 부합하는 다른 체인이 네트워크에 나타날 경우, 이 순간 주류 블록체인이 뒤집히게 됩니다.보통의 경우 블록 한두 개를 두고 얕은 리오그가 일어나지만 나누어진 블록의 깊이가 일정 개수보다 많다면 깊은 리오그가 일어납니다. 예를 들어,A, B 분기로 체인이 나뉘어져 다른 노드로 전파된다.비슷한 비율로 점차 전파되는 노드가 늘어가며 체인의 길이도 늘어간다.모든 노드가 A 분기와 B 분기 중 하나를 채택했고, A 분기의 체인이 더 길면서 채택된 비율이 높다.B 분기의 체인을 채택한 모든 노드의 체인이 A로 리오그 됩니다.@media screen and (min-width:70em){img[src="images/bug-report.png"]{width:60%}}어제 10,000 골드를 보유했던 사용자가 1,000 미만의 골드를 보유하게 되었다고 제보를 했다.그래서 앞서 이야기했듯이, 리오그 현상 때문에 레벨이나 가진 아이템이 몇 분에서 몇 시간 전의 상태로 되돌아갔다는 이야기가 나인 크로니클 커뮤니티에서 자주 언급되었습니다.3 탈중앙 네트워크에서 발생한 일이기 때문에 운영진에게 되돌려달라고 할 수도 없는 노릇입니다.블록체인 네트워크 초기화나인 크로니클은 베타 기간 동안 체인 네트워크를 일곱 번 초기화했습니다. 체인 네트워크가 초기화되면 게임 플레이어가 일구었던 게임 데이터가 모두 사라지게 됩니다. 이런 위험을 감수하고도 초기화를 감행한 이유는 다음과 같습니다.블록체인 네트워크 코어 Libplanet에서는 게임의 상태를 블록에 저장합니다. 사용자의 행동은 경우 액션이라는 이름의 자료 구조에 맞추어 저장됩니다.{
  "stageId": "123",
  "id": "ntPSdIREOUOARaRYJHlGEg==",
  "equipments": ["KTm6cLkrtEWs6k4A821K3Q=="],
  "avatarAddress": "sGo0bo0VwrYA7ubq6yV8ctiU2vc=",
  "foods": [],
  "worldId": "3"
}
만약 게임 내에서 의상 요소가 업데이트된다면 costumes 같이 새로운 속성이 추가되고, 이 정보가 담긴 블록의 해시가4 이전 블록의 해시를 만드는 규약(protocol)과 맞지 않게 됩니다. 규약이 달라지면 이전의 블록 데이터를 이어서 사용할 수 없게 됩니다.5 이 외에도 유니크한 값이 다르게 되거나, Libplanet이나 그 SDK의 코드 중에 해시에 영향이 가는 수정이 생긴다면 달라집니다.이런 경우의 대개 다른 블록체인에서는 몇 번째 블록 이후부터 블록을 다르게 해석하도록 규약을 추가합니다. 나인 크로니클도 그럴 수 있지만, 크고 작은 변경이 잦은 베타 기간에 이런 방법을 취하는 것은 무리라고 판단했습니다. 그래서 체인을 매번 초기화하는 것을 감행한 것입니다.정식 출시 이후에는 체인을 유지할 예정입니다. 그러기 위한 여러 제안이 검토된 상황으로, 기회가 된다면 이후에 스낵에서 이를 소개하겠습니다.마치며플라네타리움은 “커뮤니티가 운영하는 온라인 게임"이라는 매력으로 새로운 형태의 게임 문화를 정착시키는 것에 큰 기대를 하고 있습니다. 간혹 온라인 게임의 운영사 직원이 게임의 자원을 횡령하여 게임의 생태계를 무너뜨리는 일이 언론에 보도되는데요. 나인 크로니클은 게임의 규칙이 프로토콜 수준으로 투명해져서 그런 일이 원칙적으로 일어날 수 없습니다.이러한 장점에도 불구하고 Libplanet이 사용하는 블록체인 프로토콜이 진입 장벽으로 느껴질 수 있습니다. 작업 내역을 라인 단위로 분산하고 자동으로 병합이 되는 Git을 처음 보고 느낀 충격이랄까요. 그래서 여러분이 게임을 플레이하면 겪는 아쉬움, 개선점을 디스코드 채널과 GitHub6에서 받고 있습니다.이 글은 앞으로 시리즈로 연재되며, 다음 발행 때에는 나인 크로니클이 리오그 현상과 체인 리셋을 어떻게 대처하였는지 소개하는 시간을 가질 예정입니다. 읽어주셔서 감사합니다.엔지니어링 팀 내부에서는 플레이했던 기록이 꿈처럼 되어 버린다고 해서 신기루 현상으로 부릅니다. ↩︎블록체인 네트워크에 참여하는 컴퓨터를 의미합니다. ↩︎블록체인 코리빙·코워킹 커뮤니티 논스(nonce) 공동 창립자 하시은 님이 쓴 게임 후기에서 사용자 입장의 상황이 잘 설명되었습니다. ↩︎블록체인은 그 이전 블록의 해시를 메타 정보 삼아 체인을 이읍니다. 연결 리스트를 떠오르면 이해하기 쉽습니다. ↩︎확장한 명세가 들어간 게임 클라이언트가 이전 블록을 제대로 해석하지 못할 가능성이 있습니다. ↩︎P2P 온라인 게임을 위한 블록체인 코어 — libplanet, 나인 크로니클을 위한 Libplanet 기반의 SDK — Lib9c, 나인 크로니클 클라이언트 전용의 블록체인 노드 서비스 — NineChronicles.Standalone, 이 밖에도 나인 크로니클 론처와 게임 클라이언트의 저장소를 공개할 예정입니다. ↩︎, 
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.076 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.077 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 플라네타리움에서 한 달동안 경험한 이야기, https://snack.planetarium.dev/kor/2020/06/junior-experience/, , 이수호, 2020년 6월 2일, , 0, 안녕하세요. 이번에 플라네타리움에 합류하게 된 이수호입니다. 합류한 지 한 달이 된 기념(?)으로 제가 이 회사에 어떤 기대를 하고 입사하였는지, 한 달 동안 무엇을 했고 플라네타리움은 어떻게 일하는지 간단하게 소개해 보는 시간을 가지고자 합니다.입사 계기작년 6월경, 2019 스프린트 서울이라는 행사에 참여하게 되었습니다. 무슨 오픈 소스에 기여할까 고민하던 저에게 당시 플라네타리움 팀원이셨던 홍민희 님이 Libplanet에 기여를 해 보면 어떻겠냐는 제안을 해 오셨습니다. 그렇게 즐겁게 기여를 마치고 나서 잊지 않고 있다가, 플라네타리움 구인 기간에 지원하여 입사하게 되었습니다. 이 곳이라면 내가 얻었던 즐거운 경험을 남들에게도 줄 수 있고, 나 자신도 그런 경험을 계속 쌓아나갈 수 있을 것이라고 판단하였기 때문입니다.한 달 동안 한 것한 달 동안은 기본적으로 Libplanet의 구조와 C#에 대한 이해를 끌어올렸습니다. 개념 증명(PoC) 수준의 Libplanet을 새로 작성해 보고, 각 모듈별 설명을 들을 때마다 그 모듈에 대한 이슈를 하나씩 제거해 나갔습니다.한 달 동안 제거해나간 이슈 목록개인적으로 매우 효과를 본 방법이라고 생각합니다. 설명을 들을 때는 높은 문맥의 이야기만 대부분 듣기 때문에, 이 높은 문맥에서 일어나는 일들이 낮은 문맥에서 어떻게 일어나는지 직접 알아가며 체득하고, 실제로 문제를 해결하기 위해 분석하다 보니 이해도가 높았습니다.또한 일일 업무일지를 저 개인적으로 적어나갔습니다.업무일지 목록업무일지이렇게 간단하게 독백하듯 막히는 것을 적어놓는 습관을 들이게 된 이유는 바로 데일리 미팅 때문입니다.회의 문화Libplanet팀에서 하는 회의 종류에는 총 3가지 있습니다.데일리 미팅주간 미팅분기별 회고이 중 데일리 미팅(줄여서 데일리)은 간단하게 현재 하고 있는 일을 오후 2시에 공유하는 미팅입니다. 보통 자기가 ‘집중 모드'에 들어간 경우, 누군가 깨워 주거나 아이디어를 주기 전까지는 계속 오버엔지니어링 혹은 이른바 삽질을 계속 하게 됩니다. 하지만 데일리 미팅을 진행하므로써 그것을 미연에 방지하고 서로의 일을 조금씩 도와줄 수 있다는 점이 좋았습니다. 또한 저 개인적으로는 데일리용 업무일지를 적으면서 자기객관화가 쉽게 이루어져, 업무 자체에도 도움이 많이 되었습니다.데일리는 많은 곳에서 진행하지만, 이걸 자신의 일 했다는 알리바이 증명 용도로 사용하게 되는 경우가 많습니다 (예: 수직적 의사결정 구조에서 하급자가 상급자에게 보고하는 형태). 하지만 저희 팀은 데일리 미팅 때 내가 하는 일을 부풀리거나 보고하는 게 아닌 막히고 있는 부분을 솔직하게 밝히고, 모르는 부분이 있으면 물어보는 등 서로에게 정보를 공유하는 점이 매우 마음에 들었습니다.실천하는 팀원들의사 결정에 있어 실패에 대한 책임을 묻는 것은 아무 의미도 없다는 말은 진부할 정도로 누구나 잘 알고 있습니다. 실패하면 빠르게 공유·피드백하고, 이를 통해 대안책을 찾아 나가는 것이 좋다는 것도 누구나 알고 있습니다. 하지만 실천하는 것은 말처럼 쉽지가 않습니다.제가 들어온 지 얼마 안 됐을 때, Windows와 macOS에서 모두 동작하는 작은 GUI 앱을 만들 일이 있었는데, 보름 전에 쓰기로 결정했던 크로스플랫폼 GUI 프레임워크가 저희가 풀려는 문제 상황에 적합하지 않다는 것을 뒤늦게 깨닫게 되었습니다. 그렇지만 해당 작업을 진행하던 사람은 어떻게든 문제를 해결하려고 집중하다 보니 이미 일주일도 넘는 시간이 훌쩍 지나 있었고, 결과적으로 GUI 프레임워크를 교체하자는 결정을 늦게 내리게 되어서 이로 인해 일정이 뒤로 밀리게 되었습니다. 이러한 실패는 보통 회고 시간에 당연히 에둘러서라도 아쉬운 소리를 한다든가, 여태 얼마나 오랜 시간을 허비하였는지에 대해 (설령 그럴 의지가 없었다 하더라도) 비난하게 됩니다.하지만 오히려 우리는 이런 선택이 잘못되었음을 알았다. 얻은 게 있으니 상관없다라고 말하며 앞으로 이런 결정을 하지 않을 방법을 찾았고, 좀 더 자주 모여 얘기하면 문제를 해결하는 데 집중하느라 놓치는 것들을 알 수 있을 것이라는 결론에 도달했습니다. 그리고 구체적인 방안으로, 데일리 이외에 저녁의 짧은 공유 세션을 하나 더 만들었습니다.이후 팀 내에서 오전에는 작업이 순조롭다 생각했으나 몰입하다 보니 오후까지 같은 걸 붙잡고 늘어지고 있었단 걸 저녁 공유 세션을 통해 깨닫게 되어서 좋았다는 피드백이 있었습니다.이런 식으로 무슨 일이 순조롭게 되지 않았을 때 왜 계획대로 하지 못했냐고 다그치는 게 아닌, 그럼 다른 방법으로 해보자라는 팀 분위기가 매우 좋았습니다.그 외 복지여러 복지가 있지만, 그 중에서도 기억에 남는 복지들입니다.리모트 근무(진짜) 수평적 의사결정멋지고 뛰어난 사람들마치며이 글을 쓰고 있던 도중, 엔지니어링 워크샵에서 이런 발언이 나왔습니다.우리 이름을 스낵이라고 지어 놓고, 너무 무거운 글들이 올라오는 거 아니에요? (웃음)생각해보니 그렇습니다. 그래서 최대한 글 양을 줄이고 스크린숏을 넣는 등 여러 시도를 해 보았는데 어떠셨을지 모르겠네요. 읽는 데 편안했었으면 좋겠습니다.마지막으로 Libplanet은 여러분의 기여를 언제나 기다리고 있습니다! 오픈 소스에 관심있는 분들은 저희 디스코드 채널에도 놀러오세요. 감사합니다!, 
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.077 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.078 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.078 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 팀이 2020 스프린트서울에도 참여합니다!, https://snack.planetarium.dev/kor/2020/05/sprintseoul/, , 이수호, 2020년 5월 19일, , 0, 오랜만입니다! 스프린트서울에 프로젝트 리더로 참가하게 된
Libplanet 팀입니다.저희 팀은 꾸준히 행사에 참여하고 있으며, 이번 스프린트에도 참여했습니다!
그동안 스프린트서울은 하루라는 짧은 시간동안 함께 문제를 해결해 나가는 행사였지만,
이번 스프린트서울은 5월 한 달 내내 진행됩니다.그에 맞춰 저희도 이번엔 조금 더 긴 시간동안 도전적인 문제를 해결해 보고 싶은 분들이
관심이 있어할 만한 이슈들과, 처음 기여하시는 분들이 부담 없이 기여하실 수 있는 이슈
두 가지 모두 준비해 보았습니다.또한 스프린트에 참가하여 저희 저장소에 기여해 주신 분들에 대해 소정의 상품도 준비하고 있으니,
많은 참여 부탁드립니다!프로젝트 소개Libplanet은 BitTorrent처럼 서버 없이 돌아가는 P2P 멀티플레이 게임을 만들기
위한 네트워킹・스토리지 라이브러리로, 이를 달성하기 위해 블록체인 기술을
구현합니다. 이용자 각각이 실행하는 게임 앱들이 네트워크에서 서로 연결되며,
게임의 공정한 판정과 기록을 위해 운영되는 서버가 없는 대신,
공정한 판정은 합의 알고리즘을 통해, 기록은 리플리케이션을 통해 이뤄집니다.이번 스프린트에서 다룰 저장소로는 아래 세 곳이 있습니다.
각자 익숙하거나 선호하는 환경에 따라 다른 저장소에 기여해 주시면 될 것 같습니다.
참고로 세 저장소 모두 Linux, macOS, Windows 세 플랫폼에서 개발 가능합니다.Libplanet: 네트워킹 및 스토리지, 블록체인 등을 구현하는
프로젝트의 핵심으로, Unity 등의 게임 엔진과 함께 쓰일 수 있도록 C#으로
작성되어 있으며 멀티플랫폼입니다.Libplanet Explorer (서버): Libplanet을 이용해 만든
게임이 분산 네트워크 위에서 쌓아 올린 블록체인 데이터를 게임 외부에서도
열람할 수 있도록 GraphQL 프로토콜로 노출하는 C# 앱입니다.Libplanet Explorer (웹): 웹 서버가 GraphQL을
통해 제공하는 데이터를 웹 프론트엔드로 구현한 비교적 최종 사용자 지향의
웹 앱(클라이언트)입니다. TypeScript, React, Gatsby, Apollo를 이용해
작성되어 있습니다.특히 이 중에서 *Libplanet Explorer (웹)*은 TypeScript로 되어 있어, 블록체인 기술이나
C#을 잘 모르지만, Libplanet에 대해 관심이 있던 참가자 분들도 기여하실 수 있습니다.C# 개발 환경먼저, C# 프로젝트에 참여하기 위해서는 개발 환경을 설치해야 합니다.
C#은 Python이나 JavaScript 등과 달리 IDE가 없으면 코딩하기 힘든 언어입니다.
Windows라면 최신 버전의 Visual Studio를 설치하면 되겠지만, 여러 플랫폼에서
두루 쓸 수 있는 IDE로 Rider나 VS Code를 추천합니다. 아래 문서들은
Rider 또는 Visual Studio Code를 쓴다는 가정 하에 Libplanet의 개발 환경을
설치하는 방법을 한국어로 안내하고 있습니다.Libplanet 개발 환경 설정 (VS Code)Libplanet 개발 환경 설정 (Rider)그 외에, Libplanet 저장소의 CONTRIBUTING.md 문서는 CLI 도구만을 이용해서 개발하는 아주
기본적인 개발 환경 설정을 안내합니다. 꼭 자신이 이용하는 에디터를 쓰고 싶은 분들은 이쪽을 읽어주시면
되겠습니다.TypeScript 개발 환경TypeScript 개발 환경은 C# 개발 환경에 비해 간단합니다. Libplanet Explorer (웹) 저장소의 README.md 문서에
잘 정리되어 있으니, 어렵지 않게 따라하실 수 있을 것입니다.살펴볼 만한 이슈처음 기여하시는 분들을 위한 각 프로젝트 별 초심자용 이슈들을 모아놨습니다.LibplanetLibplanet Explorer (서버)Libplanet Explorer (웹)프로젝트 구조를 자세히 파악하지 못한 상태에서도 깊게 들어가지 않고 해볼 수 있을 만한 것들입니다.뿐만 아니라, 좀 더 도전적인 문제를 찾는 분들을 위한 help wanted 레이블 또한 준비되어 있습니다.LibplanetLibplanet Explorer (서버)Libplanet Explorer (웹)고민되거나 망설여진다면어떤 기여를 어떻게 해야 할지 고민이 되는 분들은, 저희 프로젝트에 기여하신 분들의 경험담을 읽어보시고
결정하셔도 좋을 것 같습니다.이승훈 님께서 쓰신 Libplanet 처음 기여하기이수호 님께서 쓰신 2019 스프린트 서울 6월 행사를 참여하고 나서…질문 및 대화방궁금한 게 있으시면 저희 Discord 서버에 있는 #libplanet-users-kr 채널에
오셔서 물어보셔도 됩니다. 행사 전에 미리 들어오셔서 물어보셔도 좋고, 행사 끝난 뒤라도
좋습니다. 단순히 놀러 오셔도 환영입니다!, 
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.079 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.080 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.080 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity DOTS DynamicBuffer 사용하기, https://snack.planetarium.dev/kor/2020/05/unity-dots-start-to-use-dynamic-buffer/, , 현승민, 2020년 5월 18일, , 0, 안녕하세요. 플라네타리움에서 나인 크로니클을 개발하고 있는 현승민입니다. 해당 프로젝트는 아직 Unity DOTS를 사용하고 있지 않지만, 차기작에 적용하기 위해 열심히 공부 중인데요. 앞으로 공부한 내용을 꾸준히 공유해보려고 해요.이번에는 DynamicBuffer<T>에 대해서 알아 볼게요. 엔티티에 동적 버퍼를 설정하고 이를 사용하는 방법에 대한 것인데요. DOTS와 관련한 첫 번째 글 치고는 몇 단계를 넘어 오기는 했지만 그 양이 적으니 관련한 내용을 함께 보시면 바로 이해하실 수 있을 것이라 생각해요.이 글은 Unity 공식 문서와 튜토리얼 영상을 참고했어요.개발 환경Unity2019.3.12f1com.unity.entities0.10.0-preview.6IBufferElementData 구현하기엔티티에 더하는 컴포넌트가 IComponentData 인터페이스를 구현해야 하는 것과 마찬가지로, DynamicBuffer<T> 또한 IBufferElementData 인터페이스를 구현해야 해요.IBufferElementData를 구현하는 IntBufferElement 구조체를 만들었어요. IComponentData와 같은 흐름이죠?using Unity.Entities;

namespace DOTS_DynamicBuffer
{
  public struct IntBufferElement : IBufferElementData
  {
    public int Value;
  }
}
EntityManager.AddBuffer<T>() 사용하기엔티티에 컴포넌트를 더하는 방법과 같이 버퍼를 더할 때도 EntityManager를 활용해요. 아래에서는 게임 오브젝트에 더해서 사용할 PlayModeTest라는 컴포넌트를 작성하고 플레이 모드에서 Entity Debugger를 확인해 볼게요.엔티티에 IntBufferElement 버퍼를 더하고, 그 버퍼에 값을 좀 넣어 볼게요.using UnityEngine;
using Unity.Entities;

namespace DOTS_DynamicBuffer
{
  public class PlayModeTest : MonoBehaviour
  {
    private void Awake()
    {
      var entityManager = World.DefaultGameObjectInjectionWorld.EntityManager;
      var entity = entityManager.CreateEntity();
      var dynamicBuffer = entityManager.AddBuffer<IntBufferElement>(entity);
      dynamicBuffer.Add(new IntBufferElement { Value = 1 });
      dynamicBuffer.Add(new IntBufferElement { Value = 2 });
      dynamicBuffer.Add(new IntBufferElement { Value = 3 });
    }
  }
}
DOTS_DynamicBufferScene을 만들고 PlayModeTest 스크립트를 같은 이름의 게임 오브젝트에 추가했어요.플레이 모드에서 Entity Debugger 를 통해서 PlayModeTest.Awake() 메서드에서 생성한 엔티티를 확인할 수 있어요. IntBufferElement 버퍼에 값이 세 개인 것이 보이시죠?DynamicBuffer<T>.Reinterpret<U>() 사용하기버퍼에 담긴 구조체가 포함하는 값을 직접 수정하는 방법을 알아 볼게요.PlayModeTest.Awake() 메서드를 조금 수정해서 재해석이라는 의미의 DynamicBuffer<T>.Reinterpret<U>() 메서드를 사용해 봤어요. 12번 줄에서와 같이 인덱스로 접근한 구조체는 변수로 분류되지 않는 임시 값이기 때문에 변경할 수 없는데, 14–15번 줄에서와 같은 방법을 사용하면 값을 수정할 수 있어요.private void Awake()
{
    var entityManager = World.DefaultGameObjectInjectionWorld.EntityManager;
    var entity = entityManager.CreateEntity();
    var dynamicBuffer = entityManager.AddBuffer<IntBufferElement>(entity);
    dynamicBuffer.Add(new IntBufferElement {Value = 1});
    dynamicBuffer.Add(new IntBufferElement {Value = 2});
    dynamicBuffer.Add(new IntBufferElement {Value = 3});

    // ERROR: Indexer access returns temporary value.
    // Cannot modify struct member when accessed struct is not classified as a variable
    // dynamicBuffer[0].Value *= 10;

    var intDynamicBuffer = dynamicBuffer.Reinterpret<int>();
    intDynamicBuffer[0] *= 10;
}
값이 바뀌었는지 플레이 모드에서 확인해 볼게요. 잘 바뀌었네요! 15번 줄에서 변경한 intDynamicBuffer[0]의 값을 dynamicBuffer[0]에 다시 넣지 않았는데 버퍼의 값이 바뀐 것이 중요한 점으로 보여요.EntityManager.GetBuffer<T>() 사용하기엔티티의 버퍼에 접근하는 방법도 필요하겠죠?PlayModeTest 클래스를 수정했어요. Awake() 메서드에서 생성한 엔티티와 이것에 추가한 버퍼를 Start() 메서드에서 불러와서 값을 수정했어요.public class PlayModeTest : MonoBehaviour
{
  private Entity _entity;

  private void Awake()
  {
    var entityManager = World.DefaultGameObjectInjectionWorld.EntityManager;
    _entity = entityManager.CreateEntity();

    var dynamicBuffer = entityManager.AddBuffer<IntBufferElement>(_entity);
    dynamicBuffer.Add(new IntBufferElement { Value = 1 });
    dynamicBuffer.Add(new IntBufferElement { Value = 2 });
    dynamicBuffer.Add(new IntBufferElement { Value = 3 });

    // ERROR: Indexer access returns temporary value.
    // Cannot modify struct member when accessed struct is not classified as a variable
    // dynamicBuffer[0].Value *= 10;
    var intDynamicBuffer = dynamicBuffer.Reinterpret<int>();
    intDynamicBuffer[0] *= 10;
  }

  private void Start()
  {
    var entityManger = World.DefaultGameObjectInjectionWorld.EntityManager;
    var dynamicBuffer = entityManger.GetBuffer<IntBufferElement>(_entity);
    var intDynamicBuffer = dynamicBuffer.Reinterpret<int>();
    for (var i = 0; i < intDynamicBuffer.Length; i++)
    {
      intDynamicBuffer[i]++;
    }
  }
}
잘 동작하는지 확인할게요. 버퍼 내의 모든 값이 1씩 증가한 것이 보이네요! 여전히 신기한 Reinterpret<T>().AuthoringGenerateAuthoringComponentAttribute를 적용하면 게임 오브젝트에 Authoring Component를 더해서 엔티티로 만들 수 있죠. IBufferElementData도 같은 방법을 사용할 수 있어요.IntBufferElement를 수정해서 GenerateAuthoringComponentAttribute를 적용할게요.[GenerateAuthoringComponent]
public struct IntBufferElement : IBufferElementData
{
  public int Value;
}
그리고 Scene을 수정해서 자동으로 생성된 IntBufferElementAuthoring 컴포넌트를 게임 오브젝트에 더하고 값을 넣어 봤어요. 그리고 게임 오브젝트의 엔티티화를 위해서 ConvertToEntity 컴포넌트를 더했어요.Entity Debugger로 보면 Authoring 컴포넌트가 더해져 있던 게임 오브젝트와 같은 이름의 엔티티가 생성된 것을 확인할 수 있어요.이후 과정을 위해 UnitTag와 PlayerTag, EnemyTag 컴포넌트를 작성해서 각 컴포넌트를 포함하는 엔티티에 IntBufferElement 버퍼를 더해 볼게요.using Unity.Entities;

namespace DOTS_DynamicBuffer
{
  [GenerateAuthoringComponent]
  public struct UnitTag : IComponentData { }

  [GenerateAuthoringComponent]
  public struct PlayerTag : IComponentData { }

  [GenerateAuthoringComponent]
  public struct EnemyTag : IComponentData { }
}
ComponentSystem에서 사용하기ComponentSystem을 상속하는 시스템을 작성해서 UnitTag 컴포넌트를 포함하는 엔티티의 IntBufferElement DynamicBuffer에 접근해 볼게요.TestBufferFromEntitySystem을 작성했어요. UnitTag를 포함하는 엔티티들의 IntBufferElement형 DynamicBuffer에 접근해서 값을 변경하는 로직이에요. 20번 줄과 같이 사용하는 것은 안 되니 23–28번 줄과 같이 사용해요. 물론 Reinterpret<T>()도 사용할 수 있겠죠?using Unity.Entities;

namespace DOTS_DynamicBuffer
{
  public class TestBufferFromEntitySystem : ComponentSystem
  {
    protected override void OnUpdate()
    {
      var bufferFromEntity = GetBufferFromEntity<IntBufferElement>();
      Entities
        .WithAll<UnitTag>()
        .ForEach(entity =>
        {
          if (bufferFromEntity.Exists(entity))
          {
            var dynamicBufferFromUnitTag = bufferFromEntity[entity];
            foreach (var intBufferElement in dynamicBufferFromUnitTag)
            {
              // Foreach iteration variable 'intBufferElement' is immutable.
              // Cannot modify struct member when accessed struct is not classified as a variable
              // intBufferElement.Value++;
            }

            for (var i = 0; i < dynamicBufferFromUnitTag.Length; i++)
            {
              var intBufferElement = dynamicBufferFromUnitTag[i];
              intBufferElement.Value++;
              dynamicBufferFromUnitTag[i] = intBufferElement;
            }
          }
        });
    }
  }
}
플레이 모드에서 Entity Debugger를 보면 UnitTag 컴포넌트를 포함하는 엔티티의 IntBufferElement DynamicBuffer의 값이 변하는 것을 확인할 수 있어요.JobComponentSystem에서 사용하기JobComponentSystem을 상속하는 시스템을 작성해서 PlayerTag 컴포넌트를 포함하는 엔티티의 IntBufferElement DynamicBuffer에 접근해 볼게요.TestBufferFromEntityJobSystem을 작성했어요. PlayerTag를 포함하는 엔티티들의 IntBufferElement형 DynamicBuffer에 접근해서 값을 변경하는 로직이에요. 이번에는 Reinterpret<T>()를 사용해 봤어요.using Unity.Entities;
using Unity.Jobs;

namespace DOTS_DynamicBuffer
{
  public class TestBufferFromEntityJobSystem : JobComponentSystem
  {
    protected override JobHandle OnUpdate(JobHandle inputDeps)
    {
      return Entities
        .WithAll<PlayerTag>()
        .ForEach((ref DynamicBuffer<IntBufferElement> dynamicBuffer) =>
        {
          var intDynamicBuffer = dynamicBuffer.Reinterpret<int>();
          for (var i = 0; i < intDynamicBuffer.Length; i++)
          {
            intDynamicBuffer[i]++;
          }
        })
        .Schedule(inputDeps);
    }
  }
}
잘 동작하네요! 값이 쭉쭉 올라가고 있어요.팁들InternalBufferCapacityAttribute엔티티는 기본적으로 청크에 포함되는데, IBufferElementData를 구현하는 구조체에 InternalBufferCapacityAttribute를 적용하면 청크 내 존재할 수 있는 최대 요소 수를 지정할 수 있어요. 지정한 요소 수를 넘어서면 해당 버퍼는 힙 메모리로 이동해요. 물론 이때에도 이전과 같이 DynamicBuffer API로 해당 버퍼에 접근할 수 있어요.요소 수를 2개로 설정해 봤어요.// InternalBufferCapacity specifies how many elements a buffer can have before
// the buffer storage is moved outside the chunk.
[InternalBufferCapacity(2)]
[GenerateAuthoringComponent]
public struct IntBufferElement : IBufferElementData
{
  public int Value;
}
그리고 같은 청크에서 테스트하기 위해서 EnemyTag를 포함하는 Enemy 게임 오브젝트를 두 개 더 복재했어요.Entity Debugger를 확인해 봤어요. 그런데 IntBufferElement가 여전히 청크에 남아 있는 것 처럼 보이네요. 힙 메모리로 이동됐어도 편의를 위해서 이렇게 보여주는 것인지는 확인이 필요하겠어요.implicit 연산자편의를 위해서 이렇게 작성해서 사용할 수도 있겠죠?using Unity.Entities;

namespace DOTS_DynamicBuffer
{
  // InternalBufferCapacity specifies how many elements a buffer can have before
  // the buffer storage is moved outside the chunk.
  [InternalBufferCapacity(2)]
  [GenerateAuthoringComponent]
  public struct IntBufferElement : IBufferElementData
  {
    public int Value;

    // The following implicit conversions are optional, but can be convenient.
    public static implicit operator int(IntBufferElement e)

    {
      return e.Value;
    }

    public static implicit operator IntBufferElement(int e)

    {
      return new IntBufferElement { Value = e };
    }
  }
}
마치며IBufferElementData와 DynamicBuffer<T>를 가볍게 알아 봤어요.게임을 만들 때 오브젝트 풀링에 대해서 수도 없이 많이 들어 보셨을 거예요. 1회용 객체를 생성하는 것은 쓰레기를 만드는 것이기에 풀링해서 재사용하면 잦은 쓰레기 수집을 줄이고 인스턴스 생성 타이밍을 관리할 수 있어서 더욱 부드러운 게임을 만들 수 있죠.다음에는 이 기능을 게임에 어떻게 적용하는지 알아보고, 적용하기 전과 후를 비교하면서 어느정도 효과를 얻을 수 있는지 확인해 볼게요., 
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.083 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.084 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.084 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.9 릴리스, https://snack.planetarium.dev/kor/2020/04/libplanet-0.9/, , 홍민희, 2020년 4월 28일, , 0, 안녕하세요. Libplanet의 아홉 번째 마이너 버전인 0.9 버전이
릴리스되었습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때,
그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는
공용 라이브러리입니다.이번 버전부터 Libplanet은 여러 NuGet 패키지로 배포되는데요.
Libplanet의 외연이 확장되어 일부 의존 라이브러리를 모든 애플리케이션에서
포함하기에는 무거워졌기 때문입니다.이 글에서는 0.9 버전의 새로운 NuGet 패키지들을 소개하며 주요 변경 사항들에
대해서도 다루겠습니다.Libplanet.RocksDBStoreLibplanet.RocksDBStore는 새로 추가된 NuGet 패키지로,
Lipblanet의 IStore 인터페이스를 RocksDB 백엔드로 구현한
RocksDBStore 클래스를 포함합니다. RocksDBStore는 내부 테스트 결과 기존의
DefaultStore에 비해 쓰기는 약 10배 읽기는 약 2배 이상
빨라졌으며, 압축 등의 효과 덕에 기존에 비해 15% 이하의 저장 공간만을 차지하게
됐습니다.위와 같은 장점에도, C++로 작성된 RocksDB 네이티브 바이너리를 애플리케이션과
함께 배포해야 하기 때문에 일부 플랫폼에서는 이용이 곤란할 수 있습니다.
따라서 RocksDBStore 클래스는 Libplanet 패키지가 아닌
Libplanet.RocksDBStore라는 별도 NuGet 패키지로 배포하게 되었으며,
Libplanet 패키지에는 여전히 DefaultStore가 제공됩니다. 따라서 개발할 때는
설치가 간편한 DefaultStore를 쓰고 테스트 및 실제 배포시에만 RocksDBStore를
쓰거나, RocksDB 바이너리를 제공하기 어려운 플랫폼에 한해 DefaultStore를 쓰는
식의 활용이 가능합니다.자세한 내용은 이승훈 님이 쓰신 Libplanet RocksDB 적용기에서 볼 수 있습니다.여러 피어로부터 블록 받기이제까지 Swarm<T> 클래스의 PreloadAsync() 및
StartAsync() 메서드는 네트워크에 쌓인 블록을 따라잡기
위해 하나의 피어에게 그간의 모든 블록을 요청하여 받게 되어 있었습니다.
쌓인 블록이 많을 경우 하나의 피어에게만 받다 보니 오래 걸리기 일쑤였고,
운이 안 좋으면 서로 통신이 아주 느린 피어에게 블록을 요청해 받기까지 아주 오래
걸리는 경우도 있었습니다. 블록을 보내주는 쪽에서도 홀로 큰 부담을 져야 하는데,
배포되는 애플리케이션에 기본값으로 설정된 시드 노드의 경우 그 부담이 무시하기
힘들 정도였습니다.이번 버전부터는 블록을 여러 피어에게 고루 받도록 개선되었으며, 그 가운데
특별히 느린 피어가 끼더라도 전체 블록을 받는 시간이 크게 늦어지는 일도
크게 줄었습니다.서명된 앱 프로토콜 버전지난해, Libplanet 0.3에는 Swarm<T>() 생성자에 appProtocolVersion 매개변수가
추가됐습니다. 서로 프로토콜이 호환되는 노드끼리만 통신하고, 호환되지
않는 경우의 처리를 앱에 따라 적절히 처리할 수 있도록 한 것입니다.저희 팀 역시 이 기능을 활용했고, 더 높은 버전의 노드와 조우할 경우 소프트웨어
업데이트를 유도하는 용도로 썼습니다. 그러나 이렇게 활용하니, 변조된
소프트웨어가 악의적으로 (실제로는 발표된 적 없는) 높은 버전 숫자를 내보이게
하여 다른 노드들이 거짓 소프트웨어 업데이트를 시도하도록 공격하는 데에 쓰일
수 있다는 것을 알게 됐습니다.이러한 일을 피할 수 있도록, System.Int32로 표현되던
앱 프로토콜 버전은 이제 서명과 서명자 등 여러 메타데이터를 포함하는
AppProtocolVersion 자료형으로
바뀌었습니다. 앱 프로토콜 버전은 서명되어야 하며, 각 노드는 Swarm<T>()
생성자의 trustedAppProtocolVersionSigners 매개변수로 어떤 서명자의
앱 프로로콜 버전을 신뢰할지 각자 정하게 됩니다.이러한 방식은 각 노드들을 의도하지 않은 (변조된) 소프트웨어 업데이트로부터
보호하는 동시에, 각 노드들이 원한다면 자유롭게 포크된 다른 애플리케이션 로드맵을
선택할 자유도 제공합니다.키 저장소지난해, Libplanet은 0.7 버전에서 PrivateKey를 안전하게 저장할 수 있는
ProtectedPrivateKey 클래스가 추가됐습니다. 그렇지만
ProtectedPrivateKey는 하나의 키만 다룰 뿐으로,
여러 키를 다루려면 애플리케이션 측에서 디렉터리를 만들고 파일명을 결정하고
파일에 쓰는 등의 처리를 알아서 구현해야 했습니다.이번 버전에부터는 키를 물리적으로 보존하고 관리하는 기능인
Web3KeyStore 클래스가 제공되기 때문에, 더이상 그런 처리를
직접 구현할 필요가 없어졌습니다. 파일 시스템에 Web3 Secret Storage Definition
형식으로 키를 보존하는 Web3KeyStore와 더불어, 그러한 구체적인 보존 방식(구현
세부사항)을 추상화하는 IKeyStore 인터페이스 역시 도입됐습니다.planet: 명령행 도구Swarm<T>() 생성자는 지난 버전부터 특정 제너시스 블록을 상정하게
됐고, 이번 버전부터는 앱 프로토콜 버전을 서명하게 됐습니다. 이와 같은
값들은 암호학 알고리즘의 결과를 포함하기 때문에, 사람이 임의로 아무 값이나
넣을 수 없습니다. 그렇지만 개발 과정에서는 임의의 값들을 채워봐야 할 일이 많기
때문에, 이 때마다 Libplanet API를 C# 대화형 셸이나 PowerShell 등에서 호출하여
원하는 값을 계산하는 것은 그것대로 여간 번거로운 일이 아니었습니다.이러한 작업을 좀더 쉽게 할 수 있도록, 이번 버전부터는 planet이라는
명령행(CLI) 도구를 함께 배포합니다.
planet 명령은 여러 서브커맨드를 포함하며, 현재로서는 키 저장소 관리와
앱 프로토콜 버전의 서명 기능을 제공합니다. 이후 임의의 제너시스 블록 생성 등의
기능도 추가될 예정입니다. 자세한 사용법은 planet --help 명령을 확인해 주세요.planet 명령은 Libplanet.Tools라는 NuGet 패키지로 배포되며, .NET Core SDK가
설치된 시스템에서 아래와 같이 설치할 수 있습니다:dotnet tool install -g Libplanet.Tools
.NET Core SDK가 설치되지 않은 환경이라면 릴리스 페이지에 첨부된
공식 바이너리를 받아서 설치할 수도 있습니다. 공식 바이너리는 Linux (x64),
macOS (x64), Windows (x64) 세 플랫폼의 버전이 제공되고 있습니다.그 외그 밖의 여러 변경 사항은 전체 변경 내용에서 확인하실 수 있습니다.호기심이 생기신 분들은 설치해서 이용해 보시고, 궁금한 점이 있으시다면 저희 팀이
상주해 있는 디스코드에도 놀러오세요!, 
01:45:49.085 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.086 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.087 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet RocksDB 적용기, https://snack.planetarium.dev/kor/2020/04/rocksdb/, , 이승훈, 2020년 4월 17일, , 0, 안녕하세요. 플라네타리움에서 Libplanet을 만들고 있는 이승훈입니다.Libplanet에서는 IStore라는 저장계층 추상화 인터페이스와 기본 구현인 DefaultStore를 제공하고 있고, Libplanet을 이용하여 만들고 있는 게임 나인 크로니클도 이를 쓰고 있었습니다. DefaultStore는 Libplanet에 기본으로 포함되어 곧바로 쓸 수 있다는 장점이 있었지만, 성능이나 저장 공간 효율 측면에서 한계가 있었습니다.이에 따라 저희는 여러 대안 저장 방식을 검토한 끝에 Facebook에서 제작한 키–값 데이터베이스 라이브러리인 RocksDB가 적합하다고 판단했고, 이를 백엔드로 사용하는 IStore 구현체인 RocksDBStore를 만들기로 했습니다. 이번 글에서는 RocksDBStore를 만들면서 경험한 일들을 공유하려고 합니다.의존하는 라이브러리 포함시키기1RocksDB는 압축이나 메모리 할당을 위해 또다른 라이브러리들에 의존합니다. Windows 빌드와 다르게 macOS와 Linux의 경우 RocksDB 네이티브 라이브러리를 동적 링크 라이브러리 형태(.so 및 .dylib)로 사용하기 위해서는 RocksDB가 의존하는 라이브러리들도 시스템에 설치되어 있어야 합니다.일반적인 서버 앱에서는 시스템에 모든 의존 라이브러리들을 다 설치하는 것이 자연스러운 일입니다. 서버 앱을 구동하는 시스템은 보통 그 서버 앱만을 위해 운영되기 때문입니다. 하지만 저희는 블록체인 노드인 동시에 게이머의 시스템에서 돌아가는 앱을 만들고 있기 때문에 모든 게이머에게 이런 라이브러리들을 따로 설치하라고 요구하는 건 어려웠습니다.그래서 생각한 것이 게임 클라이언트 내에 RocksDB가 의존하는 라이브러리들도 함께 넣어 배포하는 것이었습니다. 하지만 별도의 수정 없이 가이드대로 RocksDB를 동적 링크 라이브러리 형태로 빌드할 경우, 빌드된 RocksDB 라이브러리에서 게임 클라이언트에 함께 포함된 의존 라이브러리들을 찾지 못하는 문제가 있었습니다.이 문제를 해결하기 위해 RocksDB 동적 링크 라이브러리 파일의 rpath를 수정하는 방식을 사용했습니다. rpath란 run-time search path를 가리키는 말로, 라이브러리 파일이나 실행 파일 내에 하드코딩 되어서 동적 링킹 로더가 해당 파일에서 필요한 라이브러리를 찾기 위한 경로입니다. 처음에는 RocksDB 라이브러리를 빌드할때 rpath를 수정하는 방법을 고려했지만 RocksDB의 빌드 스크립트가 생각보다 복잡해 보였기 때문에 빌드가 완료된 라이브러리 파일의 rpath를 수정하기로 했습니다. 다행히 macOS에서는 install_name_tool, Linux에서는 patchelf라는 툴로 다음과 같이 간단하게 rpath를 현재 RocksDB 라이브러리가 존재하는 디렉터리로 수정할 수 있습니다.# macOS
$ install_name_tool -add_rpath '@loader_path' librocksdb.dylib

# linux
$ patchelf --set-rpath $ORIGIN librocksdb.so
rpath 수정에 관한 보다 자세한 내용은 제가 참조한 아래 페이지들을 참조하시면 좋을 것 같습니다.Fun with rpath, otool, and install_name_toolChange Library Search Path For Binary Files in Linux애플리케이션에서의 데이터베이스 기능 구현RocksDB는 흔히 사용되는 관계형 데이터베이스나 DefaultStore에서 사용하고 있는 LiteDB등과는 다르게 비교적 단순한 기능만을 지원합니다. 따라서 앞에서 얘기한 데이터베이스에서는 당연하게 지원하는 기능들도 RocksDB를 사용할 때는 애플리케이션에서 직접 구현을 해야 하는 경우가 종종 있습니다.대표적으로 저장된 데이터 열(rows)의 갯수를 세는 기능이 존재하지 않기 때문에, 데이터를 업데이트할 때마다 개수를 따로 저장해 놓거나 매번 데이터를 순회하면서 세는 등 여러 방식을 이용하여 해당 기능을 직접 구현해야 합니다.또 다른 예로는 키 검색 기능이 있습니다. RocksDB의 Seek은 키의 첫머리(prefix)를 입력으로 받아서 해당하는 키의 위치를 찾아줍니다. 일반적인 데이터베이스의 키 검색 기능처럼 첫머리가 일치하는 키만 검색될 거라고 기대하기 쉽지만, 일반적인 데이터베이스에서의 검색보다는 파일의 오프셋을 이동하는 lseek()와 좀 더 유사한 기능을 합니다. 따라서 이 기능을 이용해서 키를 순회할 때는 매 키 마다 해당 키의 첫머리가 내가 찾는 부분 문자열과 일치하는지 검사해야 합니다.문서를 자세히 보지 않으면 하기 쉬운 실수들RocksDB의 API와 문서화는 기대했던 것에 비해 친절하게 되어있는 편은 아니어서 사용하는 데 약간의 주의가 필요했습니다.한 예로 RocksDB는 네임스페이스와 같은 역할을 하는 칼럼 패밀리(Column Family)가 있습니다. 이 칼럼 패밀리를 데이터베이스에 만들어두면 다음번에 데이터베이스를 사용할 때도 알아서 함께 가져올 것을 기대했지만, 기대와는 달리 데이터베이스를 열 때 ListColumnFamilies라는 API를 이용해서 데이터베이스내의 모든 칼럼 패밀리를 명시해주지 않으면 예외가 발생하는 문제가 있었습니다.또 RocksDB는 문서화에 GitHub의 위키를 이용하는데, 버전별로 문서가 나뉘어있는 등의 정리는 따로 되어 있지 않습니다. 예를 들어 prefix seek에 대한 문서를 보면 사용법이 변경에 따라 계속 추가되는데, 최신 사용법은 문서의 마지막에 기록되어 있어서 문서의 첫 부분만 볼 경우 예전 사용법대로 사용하기가 쉽습니다.바인딩 라이브러리의 문제마지막은 RocksDB의 C# 바인딩 라이브러리인 rocksdb-sharp에 관한 내용입니다.RocksDBStore코드중 rocksdb-sharp의 RocksDBException 예외를 잡아서 처리하는 코드가 있습니다. 그런데 일부 플랫폼에서는 이 예외를 처리하는 도중 아래와 같은 엉뚱한 예외가 발생하는 경우가 있었습니다.ExecutionEngineException: String conversion error: Illegal byte sequence encounted in the input.
코드를 살펴본 결과 이는 rocksdb-sharp에서 RocksDB에서 발생한 에러메시지를 인코딩할 때 Marshal.PtrToStringAnsi() 메서드를 사용했기 때문에 발생한 문제였습니다. 저희는 위에서 얘기한 라이브러리 의존성 문제를 해결하기 위해 rocksdb-sharp을 포크해서 사용하고 있었기 때문에 해당 부분에 Marshal.PtrToStringUni() 메서드를 사용하도록 변경함으로써 어렵지 않게 해당 문제를 해결할 수 있었습니다.마치며여러 과정을 거치며 RocksDB를 도입하고 저장공간이나 속도 측면에서 향상을 경험할 수 있었습니다. 자세한 구현은 코드를 통해 확인하실 수 있습니다.RocksDBStore 혹은 Libplanet에 대해 더 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오세요!이 작업을 진행할 당시, 나인 크로니클은 아직 소수의 테스트 플레이어를 대상으로 인스톨러 없이 간소하게 배포할 때였기 때문에, 이런 접근을 하게 되었습니다. 그러나 최근에는 인스톨러를 포함하여 배포하게 되면서 다른 접근도 가능하게 되었습니다. 기회가 된다면 이후 스낵에 다른 접근을 소개하도록 하겠습니다. ↩︎, 
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.087 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.088 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 게임잼, https://snack.planetarium.dev/kor/2020/03/libplanet-gamejam/, , 송승걸, 2020년 3월 19일, , 0, 안녕하세요, 플라네타리움의 게임 클라이언트 프로그래머인 송승걸입니다. 이번 시간에는 플라네타리움에서 열렸던 사내 게임잼에 대해 제가 느꼈던 점을 나눠보고자 합니다.플라네타리움에선 저희가 자체 제작한 블록체인 게임 라이브러리인 Libplanet을 사용해 게임을 만들고 있습니다. Libplanet은 현재 주로 Unity에서 사용하는 것을 상정하고 개발 중이기 때문에, 엔진 내에서의 사용성을 위해 Unity용 SDK를 제작하기로 했습니다. 이를 위해 Unity에서 Libplanet을 사용하는 조그마한 예시 프로젝트를 만들어 작업에 도움을 받기 위해 플라네타리움 사내 게임잼을 개최했습니다.2~3명이 한 조를 이뤄 게임 개발을 할 것을 상정하고 개최일까지 2일의 시간을 두고 게임 기획안을 생각해봤고, 그동안 블록체인 기술을 적용해볼 멋진 게임 기획안이 5개나 제시되었습니다. 저는 고찬혁 님과 한 조가 되어 오목 게임을 만들기로 했습니다. 2명의 플레이어가 대국하게 하려고 세션 개념, 즉 여러분들이 익히 알고 계신 게임의 방 개념을 Libplanet의 액션(Action)과 상태(state) 개념을 사용해 구현했습니다.저희가 만든 오목 게임의 멋진 모습입니다!우선 대표적인 상태들과 이를 변경시키는 액션들을 소개해 드리겠습니다.SessionState: 세션의 정보를 저장합니다. 세션 안의 플레이어 정보인 AgentState의 리스트와 세션을 구분할 수 있는 고유한 키(방 제목 개념)가 존재하고, 당연하게도 이 상태를 접근할 수 있도록 하는 주소(Address)도 있습니다.AgentState: 플레이어의 계정 정보를 저장합니다. 이곳엔 플레이어의 정보(대표적으로 전적)와 주소가 있습니다.PlayerState: 플레이어가 게임 내에서 사용하는 돌들의 정보를 저장합니다. 오목판 내의 돌의 좌표 정보가 저장됩니다.JoinSession: 사용자가 입력한 키를 가진 세션에 참가하는 액션입니다. 입력한 키를 가진 세션이 없다면 그 키를 가진 세션을 만듭니다. 이를 통해 SessionState를 변화시킵니다.PlaceAction: 바둑돌을 오목판 위에 올려두는 액션입니다. 이를 통해 PlayerState의 돌 정보를 변화시킵니다.ResignAction: 플레이어가 항복하는 액션입니다. 두 플레이어의 AgentState를 모두 변화시키는데, 항복한 플레이어에 패배 기록을 함과 동시에 승리한 플레이어에게 승리 기록을 합니다.자세한 내부 구현이나, 코드를 보고 싶으시다면 Github 저장소를 둘러보세요!결국, Libplanet을 사용한 블록체인 게임 개발의 관건은 결국 이러한 상태와 액션을 어떻게 다루는지에 달려 있다고 생각합니다. 액션은 상태를 변화시키고, 게임 로직에서 상태를 사용해 게임이 동작하는 것이죠. 게임잼 전엔 플라네타리움과 함께 한 지 얼마 되지 않아 액션을 직접 만들어 보지 못했지만, 이번 기회에 일반화된 세션 개념을 고찬혁 님과 함께 구현해보니 액션과 상태의 의미와 일반적인 사용법에 익숙해져 여러모로 좋은 시간이었습니다.마치며게임잼이니만큼 간단한 예제로써 사용하기 적합한 게임으로 클리커 게임인 Planet Clicker의 GitHub 저장소를 둘러보시면서 간단한 액션과 상태 구조를 둘러보시는 건 어떠신가요? 더 자세한 용법이나 질문이 있으시다면 언제든 플라네타리움 팀원이 상주한 디스코드 서버로 놀러 와주세요!, 
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.088 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.089 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.089 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 게임 개발자, Libplanet을 처음 만났을 때 😂, https://snack.planetarium.dev/kor/2020/02/hi-libpalnet-i-am-game-developer/, , 현승민, 2020년 2월 26일, , 0, 안녕하세요. 플라네타리움에서 게임을 만들고 있는 현승민입니다. 이번 글에서는 일반적인 게임의 클라이언트–서버 구조가 아닌 Libplanet을 활용하여 P2P 구조를 적용하는 방법을 찾아가는 이야기를 소개해드릴게요. 아래의 내용은 전적으로 경험에 기반한 내용이라는 것을 고려해 주세요.먼저 클라이언트–서버 구조에 관해서 이야기해 볼게요. 저는 대부분 프로젝트에서 클라이언트–서버 구조로 개발했어요. 당연하게도 통신을 위해서 프로토콜을 작성했는데, 이 프로토콜은 웹 통신과 비슷하게 디자인했어요. 클라이언트 측에서 요청을 만들어 서버에 넘기면 서버 측에서 응답을 만들어서 클라이언트로 돌려주는 구조이죠. 요청은 주로 유저가 입력한 값을 포함했고, 응답은 프로토콜의 성패 정보를 담는 에러 코드와 요청에 의해 영향을 받은 상태 값(이하 변경점)을 포함했어요. (골드를 사용하는 구매 요청에 대한 응답에 구매 후 남은 골드량을 포함하는 등) 물론 클라이언트 측에서 예측 가능한 변경점은 응답에 포함하지 않아도 되었죠.다음은 지금 제가 개발하는 환경인 P2P 구조를 살펴볼게요. Libplanet에서는 위에서 언급한 프로토콜을 IAction 인터페이스를 구현한 클래스(이하 액션)로 작성해요. 클라이언트에서 액션을 만들어 노드에 넘기면 노드는 액션들을 모아서 트랜잭션을 만들고, 트랜잭션들을 모아서 블록을 만들어요. 이 과정에서 각 액션의 Render(이하 렌더)와 Unrender(이하 언렌더) 이벤트가 발생하는데, 이를 통해서 클라이언트 측은 액션이 반영되었다거나 그 액션이 취소(롤백)되었다는 상태를 알 수 있는 구조이죠.언뜻 비슷한 구조로 보일 수 있지만, 클라이언트–서버에서는 요청과 응답이 분리되어 있어서 응답이 요청의 정보(성패, 실패했다면 그 자세한 이유)는 물론 변경점까지 포함될 수 있는데, P2P에서는 요청(액션) 하나만 존재하고 요청(액션)의 정보(렌더 혹은 언렌더 여부, 이마저도 알려면 노드가 멈추지 않는 조건을 만족해야 함)만 알 수 있다는 차이가 있어요. 대신에 각 액션의 렌더, 언렌더 단계에서는 해당 액션의 전후 상태를 알 수 있도록 인터페이스를 제공하고 있어요.위의 내용들은 제게 한 가지 고민을 만들어 주었어요.변경점은 어떻게 알 수 있을까?캐릭터 인벤토리에 아이템을 하나 추가해주는 액션을 수행했을 때, 인벤토리 전부를 다시 그리는 것은 피하고 싶었거든요.1. 액션의 렌더 전후 상태값 비교하기처음 생각한 방식은 액션의 렌더 전과 후의 상태 값을 비교해서 변경점을 뽑아 내는 방법이었어요. 하지만, 블록에 직렬화되어 있는 정보를 역직렬화와 캐스팅을 통해서 상태 값 A와 B로 만들어 내고, 그 둘을 비교하는 과정을 매 렌더·언렌더 단계에서 수행하는 것이 성능에 무리가 생길 것이라는 걱정이 생겼어요. 상태 값 A와 B는 이미 덩치가 컸고, 앞으로 더 커질 여지가 다분했기 때문이었죠.2. 변경점을 각 액션에 포함 시키기이 방법이면 기존 구조를 변경하지 않는 선에서 목표를 완수할 수 있겠다는 생각으로 액션들을 척척 작성해가고 있었어요. 모든 것이 원하는 대로 잘 돌아가는 줄로만 알고 있었던 어느 날, 이제까지의 테스트가 싱글 노드에서 진행되었고 멀티 노드 환경에서는 문제가 생길 거라는 것을 알게 되었죠. 그 이유는 다음과 같았어요.네트워크에 참여하는 모든 노드가 특정 액션을 처리하는데, 이를 다른 노드가 처리해서 전파 받더라도 두 처리 결과가 동일할 수 있도록 보장하는 역할을 IAction.PlainValue 속성과 IAction.LoadPlainValue() 메서드가 해요. 싱글 노드에서는 얼렁뚱땅 되는 것 처럼 보였어도 멀티 노드에서 잘 되려면 액션의 다른 곳이 아니라 해당 속성에 포함시켜야 되는 것을 깨달은 것이죠. 그렇다고 진짜 포함시키면 (저는 진짜 그냥 단순히 포함시켜 봤어요) InvalidTxSignatureException 예외가 발생해요. 이것은 액션의 상태값이 바뀔 때 발생하는데, 당연한 것이 변경점은 액션을 만들 때는 비어있고 액션이 렌더된 이후에 채워지기 때문이죠. 이 과정에서 액션의 상태값은 바뀌지 않도록 작성한다는 깨달음을 얻었어요.그렇다면 액션을 만들 때 예측 가능한 변경점을 포함시키면 되지 않을까 생각했어요. 이것은 클라이언트가 만들어준 값을 노드가 믿는 구조가 되기 때문에 해킹에 용이해서 3초 만에 머리 속에서 지웠죠. 하지만 그 예측 가능한 변경점을 액션 내에서 검증할 수 있다면 가능하겠다는 생각이 드네요!? 그래서 엔진팀에 문의해 봤더니 엔진에서 제공하는 IRandom 인터페이스가 완전히 공정하기 때문에 예측 가능한 변경점은 존재하지 않는다는 감동만이 남았네요. 감동.3. 변경점을 각 액션이 변경시키는 대상의 상태 값(이하 대상 상태 값)에 포함 시키기이 방법도 괜찮아 보였어요. 액션의 변경점을 대상 상태 값에 포함시키면 구조 수정 없이 확장 만으로 목표를 완수할 수 있지 않을까 하는 기대를 갖고 액션들을 척척 작성해 가고 있었어요. 대상 상태 값에는 각 액션의 변경점들이 쌓이기 시작했고, 클라이언트는 특정 액션의 렌더 단계에서 대상 상태 값에 쌓여 있는 변경점을 참조하는 방법을 사용했죠. 이미 한 번 계산한 변경점을 다시 계산할 필요가 없어졌고, 변경점의 참조 타이밍도 문맥상 안전해서 클라이언트 개발이 순조로웠어요. 하지만 문제는 생기기 마련이었죠.대상 상태 값에 쌓이는 특정 액션에 대한 변경점의 생명 주기는 어떻게 관리할 것인가?상태 값의 변경은 액션을 통해서만 이루어지는 특성상, 더 이상 필요가 없는 변경점을 제거하기 위해서는 별도의 액션으로 처리해야 했어요. A액션의 변경점을 쌓아두기 위해 대상 상태 값을 변경했는데, 이미 사용해서 쌓아둘 필요가 없는 변경점을 대상 상태 값에서 제거하기 위해 B액션을 사용할 때, 그 변경점은 다시 대상 상태 값에 담겨야 하는가? 네, 로직에 예외가 생기더라고요. 이 안은 보류했어요.이 글을 작성하는 동안에도 Libplanet은 꾸준히 강력해졌어요. 액션의 실행 단계에서 확보되는 IActionContext형 인자는 액션의 상태값과 무관하게 모든 노드에서 같은 결과를 결정적으로 확보할 수 있도록 IRandom 인터페이스를 제공하고 있어요. 유니티에서 제공하는 랜덤 객체는 모든 노드에서 같은 결과를 얻을 수 없지만, IRandom 인터페이스는 이를 보장해주고 있어요. 다시 2번의 접근이 가능하겠다는 각이 보이죠?다음 글에서는 IRandom 인터페이스를 파해치고, 아름다운 클라이언트 환경을 어떻게 만들어 내는지 이야기해 볼게요., 
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.090 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.091 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 태국에서만 2562년으로 가는 소프트웨어?, https://snack.planetarium.dev/kor/2020/02/thai-in-2562/, , 홍민희, 2020년 2월 25일, , 0, 미래에서 온 손님작년 12월에 저희는 마침내 첫 번째 알파테스트를 진행했고, 감사하게도 세계 각지에서 많은 분이 참여해 주셨습니다. 이는 팀에게 있어 굉장한 기회인 동시에 도전이기도 했습니다. 당연하게 크고 작은 문제가 있었는데요. 그중 저희를 난처하게 만들었던 문제 중 하나는 IBD였습니다.IBD란 게임을 켰을 때 네트워크의 다른 피어들로부터 그동안 쌓인 블록들을 내려받아 최신 상태로 동기화하는 단계인데요. 아무래도 세계 각지에서 참여하시다 보니 네트워크 지연 등의 문제로 인해 시간이 오래 걸리거나 이상 종료되는 경우가 종종 있었습니다.그런데 그중에서도 특이한 증상을 보고한 사용자가 있었습니다. 당시 저희가 겪던 다른 문제들과 다르게 가장 첫 번째 블록을 내려받고 나서 이후 블록을 받을 수 없다는 것이었습니다.사용자로부터 받은 스크린숏저희는 이 사용자가 보내 준 스크린숏을 확인하고 한 가지 이상한 점을 깨달았습니다. 날짜가 2019년이 아닌 2562년으로 적혀있던 것이었는데요. 그래서 저희는 한가지 가설을 세웠습니다. 모종의 이유로 파일 시스템이 고장이 나 있어서 블록 헤더의 해시가 잘못 계산되고 있다는 것이죠.이를 검증하기 위해 저희는 양해를 구하고 원격 데스크톱을 통해 문제가 발생한 시스템을 직접 조사하기로 했습니다.날짜가 잘못되지 않았다다행히 해당 문제를 겪고 있던 사용자는 접속을 흔쾌히 허락해주셨습니다. 스크린숏으로 확인한 것처럼 여전히 날짜는 2562년이었습니다. 일단 가장 먼저 시간을 맞추기 위해 제어판을 열었습니다. 대부분의 현대적인 운영체제가 그렇듯이 Windows도 네트워크를 통해 시간을 동기화하는 기능이 있습니다. 그러나 이렇게 시간을 다시 동기화해도 제어판과 시스템의 날짜는 2562년으로 변함없었고 마지막 동기화 시각도 연도만이 다를 뿐 날짜, 시간이 모두 제가 사용하고 있는 시스템과 다르지 않았습니다.그런데 문제를 조금 살펴보기로 하고 제어판 이곳저곳을 확인 하던 중 제 눈길을 끄는 화면이 있었습니다.그레고리안력으로는 2019년이라고 표시되어 있다.저희 개발팀에서 태국어를 읽을 수 있는 사람은 없었지만, “Date in Gregorian"을 보니 “2562년"은 “2019년"의 다른 표현이라는 것을 알아차렸습니다. 그래서 시험 삼아 포맷을 바꾸니 예상대로 2019년 12월 16일이 표시되었고, 혹시나 하는 마음에 게임을 실행해보니 IBD 단계에서 문제없이 잘 실행이 되었습니다.불력 (佛曆)재현 방법과 실마리를 찾았으니 사용자께는 일단 잠시 지역 설정을 미국으로 해주실 것을 제안드렸고, 감사하게도 그 사용자분은 그 제안을 승낙하셨습니다.문제를 재현하기 위해 저희는 로컬 개발 환경에서 운영체제의 지역 설정을 태국으로 변경한 뒤 Libplanet의 단위 테스트를 돌려봤습니다. 아니나 다를까, 몇몇 테스트가 실패하는 것을 확인할 수 있었습니다. 그 가운데 가장 치명적인 문제는 내용상으로는 같은 블록의 해시가 달라지는 현상이었습니다. 살펴보니 해시의 입력을 만드는 과정에 Block<T>.Timestamp 필드를 직렬화한 결과가 기대와 달랐습니다. DateTimeOffset.ToString() 메서드의 동작이 운영체제의 로캘에 영향을 받는 것입니다.인도차이나반도에서 불교는 유럽의 기독교와 같은 위치입니다. 그래서 역법에서도 예수 그리스도의 탄신을 기원(epoch)으로 삼는 그레고리력 대신, 석가모니의 입멸을 기원으로 삼는 불력(佛曆)이 일반적으로 쓰였다고 합니다. 캄보디아나 라오스 같은 나라들은 이제 서기 연도를 쓰게 바뀌었지만, 태국은 여전히 불력을 양력으로 고친 타이 태양력을 쓰고 있습니다. 석가모니 입멸은 기원전 543년으로, 서기 2019년은 타이 태양력으로 2562년이 됩니다.이와 같이, 세계에는 문화권에 따라 다양한 역법을 쓰고 있으므로, 사용자 인터페이스를 표시할 때 각 문화권에 알맞는 날짜 형식으로 표시되어야 합니다. 사실 DateTimeOffset.ToString() 메서드는 이를 위해 IFormatProvider 객체도 파라미터로 받는 오버로드를 갖고 있습니다. IFormatProvider 인터페이스를 구현하는 클래스 중에서 가장 많이 쓰이는 것이 CultureInfo입니다. 이름에서 알 수 있듯, CultureInfo는 유닉스 계열에서 로캘(locale)이라고 부르는 것과 같은 개념입니다. 아래와 같이, DateTimeOffset.ToString() 메서드는 파라미터로 어떤 로캘을 설정하느냐에 따라 결과물이 달라집니다.> using System.Globalization;
> var now = DateTimeOffset.Now;
> now.ToString("yyyy-MM-ddTHH:mm:ss.ffffffZ", new CultureInfo("ko-KR"))
"2020-02-13T17:37:16.436163Z"
> now.ToString("yyyy-MM-ddTHH:mm:ss.ffffffZ", new CultureInfo("th-TH"))
"2563-02-13T17:37:16.436163Z"
하지만 아무 로캘도 설정하지 않고 해당 파라미터를 생략하면 적당히 그 코드가 실행되는 환경의 로캘을 따라가게 됩니다. 아래 코드는 제가 운영체제의 지역 설정을 한국으로 해뒀을 때의 결과입니다.> now.ToString("yyyy-MM-ddTHH:mm:ss.ffffffZ")
"2020-02-13T17:37:16.436163Z"
문서에 따르면, 해당 파라미터가 생략된 오버로드는 CultureInfo.CurrentCulture를 따른다고 합니다. CultureInfo.CurrentCulture 속성은 이름에서도 알 수 있듯 실행 환경의 로캘을 가르킵니다. 따라서, 실행 환경의 로캘과 무관하게 언제나 결정적인 동작을 원한다면 명시적으로 CultureInfo.InvariantCulture를 지정해야 합니다.메서드가 비결정적으로 동작할 수 있음에도 불구하고 해당 파라미터를 생략하면 실행 환경의 로캘을 따르도록 API를 설계한 것은, 아마 저러한 서식(formatting) 연산이 대개 사용자 인터페이스를 그리는 데에 쓰이고, 그렇기 때문에 국제화에 큰 신경을 쓰지 않고 코딩을 해도 자연스럽게 문화권에 알맞은 서식으로 보이도록 하려는 의도일 것입니다. 하지만 저희가 해당 메서드를 쓴 것은 사용자 인터페이스가 아니라, 결정적이어야 하는 암호학적 해시의 입력인 것이 불찰이었습니다.원인을 알았으니 DateTimeOffset.ToString() 메서드와 마찬가지로 CultureInfo나 IFormatProvider 파라미터가 생략된 메서드를 찾아서, 명시적으로 CultureInfo.InvariantCulture를 지정하도록 패치하는 것으로 급한 문제는 일단락됐습니다.CI에서도 아랍어나 프랑스어, 히브리어 로캘 등에서도 단위 테스트를 실행하도록 보강하기도 했습니다. 유럽에는 소수점 표시를 점(.)이 아니라 쉼표(,)로 하는 나라도 많고, 중동에는 오른쪽에서 왼쪽으로 글을 쓰기도 하므로, 저희에게 다소 생소하게 느껴지는 언어권을 일부러 고른 것입니다.또, 앞으로 비슷한 실수는 얼마든지 일어날 수 있기 때문에, 실행 환경의 로캘에 따라 동작이 달라지는 코드를 찾아주는 정적 분석도 도입하였습니다.마치며앞서 언급한 것처럼 암호학적 해시를 계산하는 함수에 서식 같은 비결정적인 동작이 예상되는 API를 사용하는 것은 장기적으로 좋은 결정은 아닙니다. 일반적으로 문자열은 이러한 서식이 많이 적용되기 때문에 자료형 차원에서 피하는 것이 안전합니다.하지만 아쉽게도 저희는 이 문제를 테스트 중간에 발견하였고, 해시 방식을 바꾸는 것은 이전 데이터의 호환성을 깨는 결정이었기 때문에 아직 대대적인 수정은 하지 못했습니다. 하지만 Libplanet 릴리스 1.0 전에는 이러한 부분을 수정할 예정입니다., 
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.091 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.092 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.092 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 쿠버네티스로 P2P 게임 테스트하기, https://snack.planetarium.dev/kor/2020/02/k8s-1/, , 문성원, 2020년 2월 20일, , 0, 안녕하세요, 플라네타리움에서 Libplanet을 개발하고 있는 문성원입니다. 작년 12월 16일부터 2주일간, 저희가 만들고 있는 완전 탈중앙 MMORPG인 나인 크로니클의 알파 테스트가 있었는데요. 오늘은 그 준비를 위해 쿠버네티스(Kubernetes)에 헤드리스 게임을 배포한 경험을 공유해보려고 합니다.어떤 게 필요한가요?Libplanet으로 개발된 게임은 블록체인 노드라고 할 수 있는데, 이는 나인 크로니클도 마찬가지입니다. 즉 모든 게임 클라이언트는 그 자체로 일반적인 게임 서버와 비슷한 역할(데이터 저장, 판정)을 온전히 수행할 수 있습니다. 이러한 P2P 환경에서 게임 환경과 최대한 유사하게 테스트하기 위해서는, 이러한 게임 클라이언트를 동시에 많이 실행하여 테스트할 필요가 있었습니다.구체적인 희망 사항(많은 소프트웨어가 그렇듯이) 테스트 중인 게임 역시 필요에 따라 업데이트를 해야 할 때가 있습니다. 이때 실행된 모든 클라이언트를 돌면서 직접 업데이트하는 것은 그리 좋은 전략이 아닙니다.한두 개를 켜서 실행하는 것은 개발자 개인이 쉽게 할 수 있는 일이지만, 우리는 그것보다 많은 게임 클라이언트를 테스트하고 싶습니다.게임을 실행하긴 하지만, 많은 게임 클라이언트를 동시에 띄우는 것이기 때문에 각 게임 클라이언트의 화면을 보는 것은 그렇게 중요한 사항이 아닙니다. 즉 아무런 UI 없이 헤드리스(headless)로 실행해도 괜찮습니다.도커(Docker)이런 사항을 만족하기 위해서는 여러 개의 프로세스를 동시에 실행하고 관리해야 했는데, 이때 사용한 솔루션이 도커(Docker)입니다. 도커는 리눅스 응용 프로그램을 실행환경째로 컨테이너화하여 실행하기 위해 많이 사용하는 솔루션입니다. 나인 크로니클은 첫 출시에서 리눅스를 주요 플랫폼으로 고려하고 있진 않지만, Unity를 사용해서 게임 개발을 하다보니 비교적 쉽게 리눅스용 빌드를 뽑을 수 있었고 (헤드리스 테스트 노드에선 크게 중요치 않은) UI 버그를 제외하면 동작도 크게 다르진 않았습니다.쿠버네티스(Kubernetes)도커를 사용해서 게임 빌드를 어디서나 쉽게 돌릴 수 있게 컨테이너로 만들었지만 이걸로 끝은 아니었습니다. 저희의 목표는 어디까지나 많은 클라이언트를 손쉽게 실행/종료/업데이트하며 테스트 환경을 유지하는 것이니까요. 이를 위해서는 도커만으로는 부족했습니다.가장 먼저 떠오른 방법은 ECS와 같이 클라우드 공급자가 제공하는 실행 환경이었습니다. 이런 실행 환경들은 복잡한 워크플로우를 효율적으로 설정할 수 있게 디자인되어있지만, 바꾸어보면 설정이 복잡하며 테스트 환경에서만 사용한다면 많은 기능을 사용하지 않을 것이라는 생각이 들었습니다. 또한 특정 클라우드 공급자에 종속되는 테스트 환경이 이후 이전 작업등에 부담이 될 것 같기도 했고요.AWS 컨테이너 오케스트레이션 비교그래서 떠올린 대안이 쿠버네티스였습니다. 쿠버네티스는 저희가 ECS 같은 서비스를 통해서 하고 싶은 일을 공급자 중립적(Provider Agonistic)으로 할 수 있는 오픈소스 프로젝트입니다. 여러 종류의 복잡한 컨테이너를 손쉽게 띄우고 내리는 기능을 컨테이너 오케스트레이션이라고 하는데, 저희는 거의 같은 종류의 컨테이너(게임)를 여러 개 띄우고 싶은 것뿐이니 설정은 그리 복잡하지 않았습니다.다음 이야기적다 보니 이야기가 많이 길어졌네요. 다음 시간에는 테스트를 위해 쿠버네티스를 어떻게 설정하고 클라우드 상에 배치하고 있는지 구체적인 절차에 대해 살펴보도록 하겠습니다., 
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.096 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.097 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.8 릴리스, https://snack.planetarium.dev/kor/2020/02/libplanet-0.8/, , 고찬혁, 2020년 2월 5일, , 0, 안녕하세요.
저희 팀은 Libplanet의 여덟 번째 마이너 버전인 0.8 버전을
릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때,
그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는
공용 라이브러리입니다.거의 세 달 만의 새 버전인 만큼, 0.8 버전에서는 저장소 최적화를 비롯한 많은
개선이 있었습니다.
이 글에서는 0.8 버전의 주요 변경 사항들에 대해 다루겠습니다.제너시스 블록 상정BlockChain<T>는 이제 특정한 제너시스 블록을 상정하게 되었습니다.
이는 Libplanet으로 만든 여러 게임들이 서로 별개의 네트워크를 구성함에도,
Libplanet이 일종의 메타프로토콜로 동작하기에 엉뚱한 네트워크에 접속 시도를
하는 등의 실수를 방지하기 위해서 입니다.BlockChain<T>() 생성자는 Block<T> 객체를 인자로 받으며,
해당 블록이 가장 첫 블록이 됩니다. 만약 IStore에 들어있는 제너시스 블록과
BlockChain<T>() 생성자가 기대하는 제너시스 블록이 일치하지 않을 경우
InvalidGenesisBlockException이 일어나게
됩니다.현재는 생성자가 제너시스 Block<T> 객체를 통째로 받지만,
다음 버전에는 제너시스 블록 해시만 받고 실제 블록 내용은 네트워크의 다른
노드한테 받을 수도 있게 개선될 예정입니다.DefaultStore ← LiteDBStore내장 IStore 구현이었던 LiteDBStore가 사라지고 그 자리를
DefaultStore가 대체했습니다.이름이 바뀐 까닭은 더이상 LiteDB 파일 하나가 아닌,
여러 포맷이 섞인 파일들을 담는 디렉터리에 저장되게 바뀌었기 때문입니다.또한, 1.0.0 릴리스 전까지 실험을 거듭하여 저장소 최적화를 할 예정으로,
이름에서 구현 세부 사항을 제거하는 의도도 있었습니다.그 외에도 저장 공간을 줄이기 위한 DefaultStore() 생성자에는
compress 옵션이 생겼습니다. 이번 버전에서는 아직 기본적으로 꺼져 있지만,
다음 버전에서는 기본값이 true로 바뀔 예정입니다.ICryptoBackendLibplanet은 다양한 플랫폼에서도 쓸 수 있도록,
순수 C#으로 작성된 암호학 라이브러리인 Bouncy Castle을 써왔습니다.
그러나 순수 C# 구현은 이식성에서는 큰 장점이 되지만,
성능에서는 오히려 페널티로 작용합니다.새 버전에서는 이식성과 성능 중 어느 쪽을 취할지 게임 제작자가 고를 수 있도록,
ICryptoBackend라는 추상화 계층이 추가됐습니다.
기본 구현인 DefaultCryptoBackend는 여전히
내부적으로 Bouncy Castle에 의존하지만,
게임 제작자는 게임의 타깃 플랫폼에 따라 적절히 ICryptoBackend 인터페이스를
구현하여 성능 이점을 누릴 수 있습니다.예를 들어, Libplanet이 ICryptoBackend를 구현한 MyCryptoBackend 클래스를
쓰게 하고 싶다면,
아래와 같이 CryptoConfig.CryptoBackend 속성를
덮어씌우면 됩니다.CryptoConfig.CryptoBackend = new MyCryptoBackend();
저희 팀에서 만드는 게임인 나인 크로니클에서는 비트코인 프로젝트에서 공개한
secp256k1 C 라이브러리를 호출하는 ICryptoBackend 인터페이스를 구현하여
게임 성능을 개선하기도 했습니다.라우팅 테이블 개선Libplanet은 분산 해시 테이블 방식을 적용하여 다른 피어와 통신하기 때문에
라우팅 테이블의 자신과 연결된 피어들의 정보를 저장합니다.기존에는 이 라우팅 테이블에 해당 피어와 가장 최근에 통신한 시점만을
저장하고 있었는데,
추가로 해당 피어와의 통신 딜레이를 추가하여 사용자가 네트워크 환경에 대한
자세한 정보를 알 수 있도록 하였습니다.개발자들은 새로 추가된
Swarm<T>.CheckAllPeersAsync() 메서드를
이용하여 라우팅 테이블에 저장된 피어들을 갱신할 수 있고,
Swarm<T>.Peers 속성에 접근해 Libplanet의 외부에서도 현재
자신의 라우팅 테이블에 들어있는 피어들을 확인할 수 있게 되었습니다.블록 구조 및 직렬화 방식의 변경블록체인을 구성하는 요소인 블록은 크게 트랜잭션을 제외한 메타데이터 부분과
트랜잭션, 이렇게 두 부분로 나눌 수 있습니다.많은 블록체인 프로젝트들이 그렇듯 저희 역시 여기서 트랜잭션을 뺀
부분을 블록 헤더로 정의하였고,
기존에 블록 해시로만 수행하던 연산들을 좀더 풍부한 정보를 담은 블록 헤더를
이용해 수행하게 바꾸어 기존보다 효율적인 연산을 할 수 있게 되었습니다.더불어, 블록과 트랜잭션을 직렬화할 때 필드 키를 짧게 줄이고,
비어있는 필드는 아예 배제함으로써 직렬화된 표현을 경량화했습니다.문서 개선라이브러리 자체의 변경은 아니지만, 문서 웹사이트의 디자인에 개선이
있었고, 문성원 님이 작성하신 새로운 개요 문서도 추가됐습니다.그 외그 밖에도, 세 달 남짓 Libplanet으로 만들고 있는 게임 나인 크로니클의
퍼블릭 테스트를 몇 차례 진행하며 발견한 많은 문제들을 바로잡느라 매우 다양한
변화가 있었습니다. 자세한 것은 전체 변경 내역에서 확인할 수 있습니다.호기심이 생기신 분들은 설치해서 이용해 보시고, 궁금한 점이 있으시다면 저희 팀이
상주해 있는 디스코드에 놀러오세요!, 
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.097 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.098 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.098 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.7 릴리스, https://snack.planetarium.dev/kor/2019/11/libplanet-0.7/, , 이승훈, 2019년 11월 11일, , 0, 안녕하세요. 저희 팀은 Libplanet의 일곱 번째 마이너 버전인 0.7 버전을 릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.0.7 버전에서는 Libplanet의 안정성 및 성능 개선과 더불어 다양한 사용성 개선이 있었습니다. 이 글에서는 0.7 버전의 주요 변경 사항들에 대해 다루겠습니다.액션 및 상태의 타입 제한기존 Libplanet에서 상태 및 액션의 속성은 object 타입으로 표현되고 저장할 때는 알아서 .NET의 바이너리 직렬화 포맷으로 직렬화되었습니다. 이 방식은 .NET 객체를 그대로 직렬화할 수 있으므로 Libplanet을 쓰는 쪽에서도 만드는 쪽에서도 생각할 게 적다는 장점이 있습니다. 하지만 저희 팀은 이 방식을 처음 도입했을 때부터 여러 한계를 인식한 채 한시적으로 사용할 것을 의도했는데, 그 한계는 다음과 같은 것들이 있습니다.직렬화 역직렬화가 구체적으로 이뤄지는 방식이 암시적입니다. 타입의 구현이 달라지면 직렬화되는 포맷에도 영향이 가지만 구체적으로 어떤 변화가 일어나는지 짐작하기 어렵습니다.과거에는 모양이 달랐던 타입의 값이 직렬화되어 블록체인에 저장된 뒤, 현재 타입으로 역직렬화를 시도했을 때 런타임 오류가 나거나 의도한 것과 다른 의미로 해석될 수 있습니다.팀에서 정의한 타입이라면 VTS 같은 기법을 도입할 수도 있지만, 실수로 팀에서 만든 어셈블리가 아닌 패키지 등을 통해 가져다 쓴 타입이 섞여서 직렬화된 경우 나중에 해당 타입의 내부 표현이 달라져서 직렬화 형식이 바뀌어도 대응하기가 어렵습니다.직렬화된 결과를 .NET이 아닌 플랫폼에서 해석하기 어려울뿐더러, 같은 .NET 플랫폼이라도 직렬화된 타입을 포함한 어셈블리를 공유하지 않으면 역직렬화는 어렵습니다. 따라서 Libplanet Explorer나 Libplanet Explorer Frontend 같은 앱에서 액션의 속성이나 특정 시점의 상태를 사람이 보기 쉽게 표시하기 힘듭니다.그래서 이번 버전부터는 상태 및 액션의 속성은 Bencodex의 IValue 타입을 통해서 표현하도록 바뀌었습니다. 따라서 게임 내부에서 정의해서 쓰는 타입들을 IValue 형식으로 변환하는 코드, 그리고 IValue 형식으로 표현된 것을 다시 게임 내 타입들로 해석하는 코드를 명시적으로 써야 합니다. 조금 귀찮아진 것도 사실이지만, 대신 직렬화하려는 타입의 내부 표현이 바뀌어도 직렬화 혹은 역직렬화 메서드에 해당 변경에 따른 처리 로직을 추가할 수 있게 되었고, 각기 다른 버전 사이의 호환을 좀 더 구현하기 쉽게 되었습니다.BlockChain<T>의 IReadOnlyList<T> 구현 제거이전 버전까지 BlockChain<T> 클래스는 IReadOnlyList<T> 인터페이스를 구현하고 있었고, 그에 따라 BlockChain<T> 객체에 직접 LINQ 확장 메서드들을 사용할 수 있었습니다. LINQ 확장 메서드는 선형적인 객체를 다룰 때 다양한 편리를 제공하지만, 사용 방법에 따라 상당한 성능상의 차이를 가져올 수 있습니다. 예를 들어 BlockChain<T> 객체에 10,000개의 블록이 있을 때 LINQ의 .Last() 메서드를 사용하여 10,000 번째 블록을 가져오고자 한다면 마지막 블록만을 저장소에서 바로 가져온다고 생각하기 쉽습니다. 하지만 실제로는 BlockChain<T>의 첫 블록부터 마지막 블록까지 조회하며 각 블록에 대해 스토리지에 저장된 내용을 메모리에 올리고 해석하는 작업이 이뤄지게 됩니다. 저장된 블록이 적을 때는 이런 점이 큰 문제가 되지 않지만, 블록이 많아질수록 이런 사용방식이 큰 성능 문제로 이어질 수 있습니다.이번 버전부터는 BlockChain<T> 클래스에서 IReadOnlyList<T> 구현을 아예 제거함으로써 LINQ 확장 메서드를 잘못 사용해 생길 수 있는 문제를 방지하도록 했습니다. 대신 BlockChain<T>.Contains() 같이 자주 쓰이는 연산은 효율적인 구현을 직접 제공하기로 했습니다.개인키를 안전하게 저장할 수 있는 키 저장소 구현이번 버전에서는 개인키를 암호화하여 안전하게 보호할 수 있도록 키 저장소가 추가되었습니다. 키 저장소 내 각각의 키 파일은 ProtectedPrivateKey 클래스로 표현되며, 사용자가 입력한 암호(passphrase)로 개인키를 암호화 하여 저장할 수 있습니다. 또한, ProtectedPrivateKey.WriteJson() 메서드를 이용해 이더리움의 Web3 Secret Storage Definition에 따라 JSON 형식으로 저장할 수 있습니다. 추후 키 저장소 디렉터리를 통합적으로 관리하는 기능도 추가될 예정입니다.현재 키 유도함수는 PBKDF2와 Scrypt가 구현되어있고, AES-128-CTR 암호화 알고리즘을 지원하고 있습니다. 이 중 Scrypt 구현은 minhoryang 님의 기여로 추가되었습니다. 🎉그 외이번 버전에는 Hacktoberfest 행사로 많은 분의 기여가 있었습니다. 해당 행사에 관한 내용은 문성원 님이 작성하신 Hacktoberfest를 돌아보며에서 자세히 보실 수 있고, 그 외 이번 버전의 모든 변경 사항은 전체 변경 내용에서 확인하실 수 있습니다.이번 변경 사항이나 Libplanet에 대해 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 방문해 주세요!, 
01:45:49.099 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.099 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.100 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.100 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Hacktoberfest를 돌아보며, https://snack.planetarium.dev/kor/2019/11/looking-back-at-hacktoberfest/, , 문성원, 2019년 11월 8일, , 0, 안녕하세요. 오늘은 저희 플라네타리움 팀이 지난 10월 한 달간 Hacktoberfest에 참가하여 받은 기여들을 소개해보려 합니다.둘러보기Hacktoberfest를 맞아 저희는 36개의 이슈를 준비했고, 그중 15개의 이슈가 기여를 통해 처리되었습니다.처리된 이슈들한 달간 기여를 받아보니 다음과 같은 재밌는 사실도 알게 되었습니다.절반 정도의 기여가 월초에 집중되었습니다. 초반 스퍼트가 중요해 보이네요. 🏃대부분의 이슈가 초심자를 위한 이슈(label:"good first issue")였습니다.Libplanet, Libplanet Explorer, Libplanet Explorer Frontend 3개 프로젝트가 고르게 기여를 받았습니다.기억에 남는 기여들@MaxStalker 님이 작업해 주신 Auto refresh when block mined는 코멘트 숫자에서도 알 수 있듯이, 꽤 난항을 겪은 이슈였습니다. Libplanet Explorer Frontend는 특성상 GraphQL 백엔드인 Libplanet Explorer가 있어야 하는데, 저희가 준비한 GraphQL 백엔드가 계속 내려가는 문제가 있어서 꽤 기다리셔야 했거든요. 😢 서비스가 정상화된 뒤에도 저희 디스코드 서버에서 이런저런 트러블슈팅을 함께 해가면서 기여를 마무리해 주신 @MaxStalker 님께 이 자리를 빌려 감사의 말씀을 전합니다. 🙇@RozzaysRed 님은 Hackoberfest 기간 중, hacktoberfest 레이블이 붙어있는 이슈뿐만 아니라 그렇지 않은 이슈들에도 많은 기여를 해주셨습니다. 이럴 줄 알았으면 저희가 hacktoberfest 레이블을 좀 더 빨리, 많이 붙여둘 걸 그랬네요. 😊Rename “maxValue” parameters in IRandom.Next() methods 이슈에서는 @pBouillon 님께 기여뿐 아니라 적당한 파라미터 명(lowerBound, upperBound)을 제안받기도 했습니다. 💬마치며그 밖에도 Hacktoberfest 기간 중 저희가 준비한 프로젝트에 관심과 기여를 보내 주신 모든 분들께 다시 한번 감사의 말씀 드립니다.Hacktoberfest는 끝났지만, 저희는 언제나 여러분을 기다리고 있습니다. 혹시 저희가 풀고 있는 문제에 관심이 있거나 함께 하고 싶으신 분은 언제라도 디스코드 대화방에서 알려주세요!, 
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.101 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.102 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.6 릴리스, https://snack.planetarium.dev/kor/2019/10/libplanet-0.6/, , 고찬혁, 2019년 10월 4일, , 0, 안녕하세요. 저희 팀은 Libplanet의 여섯 번째 마이너 버전인 0.6 버전을 릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.0.6 버전에서는 Libplanet의 네트워크 구성과 관련한 큰 변화가 있었고, 잘 관측되지 않았던 버그들을 다수 수정했습니다. 이 글에서는 0.6 버전의 주요 변경 사항들에 대해 다루겠습니다.Kademlia 분산 해시 테이블 적용기존의 Libplanet에서는 각 피어가 네트워크상의 모든 피어들을 전부 관리했습니다. 생성한 데이터를 전파하는 블록체인의 특성상 이와 같은 방법은 네트워크에 적은 수의 피어들이 접속해 있다면 그럭저럭 작동하지만, 피어의 수가 많을 때는 네트워크 통신 문제가 생기게 됩니다.위 문제를 해결하여 더욱 많은 피어들을 관리하기 위해 분산 해시 테이블 기법의 하나인 Kademlia 프로토콜이 적용되었습니다. Kademlia 분산 해시 테이블의 작동 원리가 궁금하시다면 Kademlia 분산 해시 테이블 적용기를 참고해 주세요.트랜잭션 전파 방식 변경어떤 클라이언트가 트랜잭션을 생성했을 때 해당 클라이언트는 자신의 라우팅 테이블이 가진 있는 피어들에 해당 데이터를 전파하고, 이를 통해 블록체인 네트워크상의 모든 피어가 동기화됩니다.기존 Libplanet은 트랜잭션을 일정 주기마다 전파하는 방식으로 작동했었고, 각 피어가 네트워크 위에 존재하는 모든 피어들의 정보를 갖고 있었기 때문에 한 번의 전파로 모든 피어가 동기화되었습니다. 그러나 Kademlia 분산 해시 테이블이 적용되면서 한 번의 전파만으로는 모든 피어가 동기화되었음을 보장할 수 없게 되었습니다. 각 피어는 전파받은 데이터를 다시 전파하는 방식으로 네트워크에 퍼트리는데, 트랜잭션 전파가 일정 주기마다 실행되었기에 운이 나쁘다면 네트워크가 동기화되는 데 많은 시간이 소요되었습니다.따라서 이 패치에서는 트랜잭션을 전파받았을 때 즉시 전파하게 로직을 수정하여 네트워크 동기화 과정이 오래 지연되는 것을 방지하였습니다.한 블록 내 트랜잭션들의 실행 순서 보장한 블록 안에 여러 개의 트랜잭션이 포함될 때, 모든 클라이언트에서 같은 순서로 액션이 실행하는 것을 보장해 주어야 합니다. 그러면서도 블록을 마이닝 하기 전까지는 그 실행 순서를 예측할 수 없어야 합니다.이번 업데이트에서는 위의 조건을 만족하기 위해 블록의 트랜잭션을 담을 때, 블록의 Hash 값과 트랜잭션의 Id를 이용해 순서를 정렬하여 모든 클라이언트에서 액션이 같은 순서로 실행되는 것이 보장될 수 있게 하였습니다.비동기 블록 마이닝Libplanet은 작업 증명 시스템을 기반으로 블록을 합의하기 때문에, 블록을 생성하는 마이닝 과정에서 다량의 CPU 자원을 소모합니다. 기존에는 블록의 Nonce를 찾는 Hashcash.Answer() 함수가 동기 함수였기 때문에 실행 중인 스레드가 차단되었고, 작업을 도중에 중단하는 것이 어려웠습니다.이번 패치를 통해 BlockChain<T>.Mine()이 비동기 함수가 되어 사용자가 CancellationToken을 주어 원하는 시점에 중단시킬 수 있게 되었습니다. 또한 마이닝 도중 블록체인의 팁이 변경되었을 때 외부에서 구독 가능한 BlockChain<T>.TipChanged 이벤트가 불리고, 해당 이벤트가 발생할 시 진행하던 마이닝이 중단되게 됩니다.그 외그 외의 여러 가지 변경 사항은 전체 변경 내용에서 확인하실 수 있습니다.이번 변경 사항이나 Libplanet에 대해 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 방문해 주세요!, 
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.102 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.103 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 저희와 함께 Hacktoberfest에 참가해봅시다!, https://snack.planetarium.dev/kor/2019/09/hacktoberfest/, , 이도건, 2019년 9월 26일, , 0, 안녕하세요, 어느새 Hacktoberfest의 달, 10월이 찾아왔습니다.혹시 Hacktoberfest라는 행사를 들어보셨나요? Hacktoberfest는 10월 1일부터 31일까지 한 달 동안 진행되는 오픈 소스 행사입니다. 전 세계 모두에게 열려있으며 10월 내라면 언제든지 참여할 수 있고, 깃허브 공개 저장소에 4개의 풀 리퀘스트를 제출하면 됩니다.4개의 풀 리퀘스트를 올리면 DigitalOcean 같은 주최측에서 제공하는 티셔츠 혹은 스티커를 받으실 수 있습니다.저희 팀도 올해 Libplanet 프로젝트들로 참가합니다!그래서 어떻게 시작해야 하죠?Hacktoberfest에 참가하고 싶지만 정작 어떤 걸로 풀 리퀘스트를 올려서 기여해야 할지 막막하실 것입니다.그래서 Hacktoberfest를 통해 새롭게 기여하려는 분들께 시작하기 적합한 이슈에 hacktoberfest 라벨을 달아 두었습니다.
그러니 여러분은 hacktoberfest 라벨이 달려있는 이슈들 중 마음에 드는 것을 고르시고 작업을 시작한다는 댓글을 남기시면 됩니다.
어떤 이슈들이 있는지 저희 프로젝트인 Libplanet, Libplanet Explorer, Libplanet Explorer Frontend의 이슈 트래커를 살펴봐 주세요.hacktoberfest 라벨이 붙은 이슈들작업을 시작하게 되면 댓글이나 채팅을 통해 다른 오픈 소스 기여자들과 이야기를 나누시게 될 텐데요.
만약 오픈 소스 프로젝트에 참여하는 것이 처음이어도 메인테이너들을 비롯한 다른 기여자들이 도와줄 것입니다.상품 수령이나 기타 정보 같은 자세한 내용은 Hacktoberfest 공식 사이트를 참고하시면 좋을 것 같습니다.질문 및 대화Hacktoberfest 기간 동안 기여하면서 궁금한 점이 생기거나 어려움을 겪고 계시다면 댓글로 이야기 나눌 수도 있지만 저희 팀이 상주해 있는 디스코드 대화방에 들어오셔서 같이 소통하면 좋을 것 같습니다! 물론 Hacktoberfest가 끝난 후라도 언제든 환영입니다., 
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.103 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.104 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.107 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.108 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.108 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.108 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.108 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.108 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.108 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Kademlia 분산 해시 테이블 적용기, https://snack.planetarium.dev/kor/2019/09/kademlia/, , 고찬혁, 2019년 9월 17일, , 0, 안녕하세요. 플라네타리움 개발팀의 고찬혁입니다. 이번에는 분산 P2P 네트워크를 효율적으로 구성하기 위한 분산 해시 테이블 기법 중 하나인 Kademlia가 무엇인지 간단하게 설명드리고, 왜 이를 저희 프로젝트인 Libplanet에 적용하게 되었는지에 대해서 간단히 말해보는 시간을 가지려고 합니다.Kademlia가 무엇인가요?분산 해시 테이블은 데이터를 네트워크 상의 노드들에 분산하여 저장하여 관리하는 기술입니다. 네트워크 상에서 데이터를 찾을 때 그 데이터를 갖고 있는 노드를 찾아 값을 요청하여 각 노드가 받는 부하를 줄이는데 큰 역할을 합니다.분산형 해시 테이블을 구현하는 여러 종류의 구현체들은 네트워크 상의 노드들을 각각 다른 방법으로 자신의 라우팅 테이블에 저장합니다. 그렇다면 그 중 Kademlia는 분산 해시 테이블을 어떻게 구현하고 있을까요? 이에 대해 설명하기 앞서서 쉽게 이해하실 수 있게 간단한 예시를 들어보겠습니다. 2008년에 미국에 LA에 거주했던 재미 교포인 김씨의 얘기를 해보죠. 그는 오랜만에 한국에 있는 친구를 만나기 위해 한국을 방문했고, 이제 막 인천 국제 공항에 내렸습니다.친구 집으로 가고 싶은데, 주소만 보고는 어디인지 잘 모르겠는걸.저런, 김씨가 길을 잃은 것 같네요. 2019년이었다면 스마트폰을 꺼내 주소를 입력해 찾아갔겠지만, 아쉽게도 2008년에는 스마트폰이 많이 보급되지 않아 김씨는 스마트폰을 갖고 있지 않았습니다. 김씨는 가지고 유일한 정보인 주소를 다시 유심히 살펴봅니다.서울특별시 종로구 세종로 1-91번지딱히 특별한 수가 없던 김씨는 우선 서울특별시를 찾아갔습니다. 그리고 그 곳에서 사람들을 잡고 길을 물어보지만, 위 주소를 정확히 알고 있는 사람은 많지 않군요. 김씨는 전략을 바꿔 종로구를 가려면 어떻게 해야 하는지 물어보기 시작합니다. 종로구를 아는 사람은 꽤 많았고, 우여곡절 끝에 종로구에 도착했습니다. 이제 세종로에 대해서 물어볼 차례군요!김씨는 이처럼 정확한 위치를 알지 못했지만 점점 범위를 좁혀가며 친구의 집에 도착했는데요, Kademlia를 적용한 네트워크의 각 피어도 이렇게 피어들의 정보를 유지하고, 탐색합니다.네트워크 상의 피어들은 가상의 주소를 갖습니다. *“서울특별시 종로구 세종로 1-91번지”*와 같은 지리적 주소가 아닌 임의로, 혹은 정해진 규칙에 따라 배정된 일련의 바이트들이죠. 거리 개념 역시 실제 피어간에 물리적인 거리가 아닌, 두 피어의 주소값의 배타적 논리합으로 정의합니다.Kademlia 프로토콜을 적용한 피어는 자신의 라우팅 테이블에 네트워크 상의 다른 모든 피어들의 정보를 담는 대신, 그 피어들을 위에서 정의한 거리에 따라 분류해 각 거리 범위당 제한된 개수의 피어만 저장합니다. 거리가 최소 2i에서 최대 2i+1 사이의 피어들은 라우팅 테이블의 i번째 행에 저장하는 식으로요. 이렇게 선택적으로 피어들의 정보를 라우팅 테이블에 저장하게 되면 어떤 피어 A의 라우팅 테이블에 피어 B가 포함되어 있지 않더라도, 자신이 알고있는 피어들 중 피어 B와 가장 가까운 피어에 정보를 요청하고, 그 피어는 다시 자신의 라우팅 테이블 내의 피어들 중 가장 근접한 피어에 요청을 하는 작업을 반복하다보면 결국 피어 B를 찾아낼 수 있을 것입니다.Kademlia를 적용한 이유가 무엇인가요?서버가 없이 통신하는 P2P 네트워크를 구성하기 위해서는 모든 피어간에 통신이 보장되어야 합니다. 그러나 모든 피어가 서로 직접적으로 연결되어 있어야 하는 것은 아니죠. 여기 세 개의 피어 A, B 그리고 C가 있습니다.기존 Libplanet에서는 다음과 같이 네트워크를 구성했죠. 모든 피어가 서로 연결되어 있는 구성이었습니다.모든 피어가 서로 연결되어 있다.그러나 이렇게 네트워크를 구성한다면 네트워크의 규모가 작을 때는 큰 문제가 되지 않지만, 피어의 수가 1000개, 아니면 10000개라면 그 만큼의 업로드를 매 메시지를 네트워크에 전파할 때마다 해야 하기에 많은 부하가 걸리게 됩니다.과도한 송신량에 과부하가 걸린 피어.Kademlia를 이용하여 노드를 탐색해 만든 라우팅 테이블의 각 행에는 자신으로부터 거리가 같은 범위 내에 있는 피어들로 구성될 것입니다. 데이터를 전파할 때 라우팅 테이블의 각 행에서 피어들을 선택하여 메시지를 보내고, 메시지를 받은 피어가 그 메시지를 다시 자신의 라우팅 테이블의 각 행에서 선택한 피어에 보낸다면, 결과적으로 네트워크 상의 모든 피어들은 메시지를 받게 될 것입니다. 이렇게 하면 n개의 피어가 네트워크 상에 존재할 때 한 피어는 log(n)번만 메시지를 보내게 될 것이고, 네트워크 부하가 하나의 피어에 집중되는 것을 막을 수 있겠죠.메시지를 전파하는 네트워크.마치며게임을 운영하는 데 있어 유저들이 실행하는 액션이 빠르게 실행된다는 느낌을 주기 위해서는 그 액션이 포함된 트랜잭션을 담는 블록을 자주 생성해야겠죠. 블록을 자주 생성할수록 마이너가 받는 네트워크 부하량도 커질 것입니다. 그런 만큼 네트워크가 커질 것을 대비해 분산 해시 테이블의 적용이 필요했고, 실제로 규모를 올려서 테스트를 진행했을 때 하나의 피어에 걸리는 네트워크 부하가 감소하는 수확이 있었습니다.Kademlia 분산 해시 테이블이나 Libplanet에 대해 더 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오세요!, 
01:45:49.109 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.110 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.111 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.111 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.111 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.112 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.5 릴리스, https://snack.planetarium.dev/kor/2019/09/libplanet-0.5/, , 이도건, 2019년 9월 6일, , 0, 안녕하세요. 저희 팀은 Libplanet의 다섯 번째 마이너 버전인 0.5 버전, 그리고 그 패치 버전인 0.5.1 및 0.5.2 버전을 릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.0.5 버전에서는 Libplanet과 함께 만들고 있는 게임의 테스트 과정에서 광범위한 성능 및 안정성 개선이 있었습니다. 이 글에서는 그러한 0.5 버전의 주요 변경 사항들에 대해 다루겠습니다.IBD 속도 개선이전까지의 IBD(밀린 블록 다운로드)는 블록이 조금만 많이 쌓여도 굉장히 오래 걸리는 작업이었습니다. 블록들을 다운받은 후 최종 상태를 첫 블록에서부터 스스로 연산하여 얻었어야 했었기 때문이죠.하지만 신뢰할 수 있는 노드가 있다면 그 노드로부터 미리 연산돼 있는 결과를 받아와 연산에 드는 시간 효과적으로 줄일 수도 있을 것입니다.그래서 0.5 버전 부터는 Swarm<T>.PreloadAsync()에 신뢰할 수 있는 노드들을 인자로 넘겨주어 신뢰할 수 있는 노드들로 부터 이미 연산되어 있는 최근 상태 값들을 받아와 저장, 사용할 수도 있게 되었습니다.만약 신뢰할 수 있는 노드들이 없거나 다른 이유로 그 과정에 실패했을 때에는 기존과 같이 직접 연산해서 사용합니다.IRandom.NextDouble() 제거System.Double의 .NET Standard 공식 문서의 일부를 인용하면 다음과 같은 내용을 볼 수 있습니다.또한, Double 값의 산술 연산 및 대입 결과는 Double 타입의 정밀도 유실 때문에 플랫폼에 따라 다소 달라질 수 있습니다. 예를 들어, Double 값 리터럴을 대입한 결과는 32 비트와 64 비트 버전의 .NET 프레임워크에서 서로 다를 수 있습니다.위와 같이 Double의 산술 연산 및 대입은 결정적이지 않은 결과를 유발할 수 있습니다. 이 때문에 0.5 버전 부터는 IRandom.NextDouble()을 제공하지 않기로 결정하였습니다.이에 관한 자세한 내용은 이 글을 참고하시기 바랍니다.블록 액션체인을 안전하게 유지하기 위해서는 블록들을 채굴할 마이너들이 필요하고, 그러한 마이너들을 모으고 유지하기 위해 보상을 주어야 할 것입니다.기존에는 마이너들에게 보상을 주기 위해선 직접 마이너가 블록에 리워드 액션을 가진 트랜잭션을 스스로 추가해야 했었지만, 이번 버전부터는 매 블록마다 실행되는 IBlockPolicy<T>.BlockAction 속성이 생겨 이 블록 액션을 통해 마이너에게 보상금을 주는 코드를 구현할 수 있습니다.FileStore 제거Libplanet은 저장 계층을 간추리기 위해 IStore라는 인터페이스와 이를 파일 기반으로 구현한 FileStore를 비롯하여 LiteDB를 기반으로 구현한 LiteDBStore를 추가적으로 0.4 버전 부터 제공하고 있었습니다. 그러나 FileStore는 구현이 내부 구현이 간소하다는 장점에도 불구하고 다음과 같은 한계점도 있었습니다.모든 블록과 트랜잭션 그리고 계정의 매 블록마다의 상태 등이 각기 별도의 파일로 저장되는 방식이었기 때문에, 파일이 너무 많이 생겼습니다.별도의 캐시나 버퍼가 없어서 어떤 물리 저장 장치를 쓰느냐에 따라 입출력 성능이 크게 영향을 받았습니다.LiteDB를 사용하기 시작하면서 FileStore의 사용 빈도는 줄어들었고, 그에 비해 FileStore를 지속적으로 관리하기는 어렵다고 판단, 이번 0.5 버전부터는 FileStore 구현체를 제공하지 않기로 결정하였습니다.좀 더 상세한 프리로드 진행 상황 전달위에서 언급했던 IBD 과정을 수행하기 위해서는 Swarm<T>.PreloadAsync() 메서드를 호출 할 수 있습니다. 이 메서드의 인자로 IProgress<BlockDownloadState>를 전달하면 이를 통해 블록 다운로드 진행 상황을 알 수 있었지만, 블록 다운로드 이후 액션들을 실행하여 (또는 신뢰할 수 있는 노드로부터) 최종 상태를 구하는 작업의 진척 상황은 알려주지 않았습니다.
이로 인해 블록을 모두 다운로드 받은 이후 로딩 메시지에는 100%라고 보여줌에도 불구하고 여전히 아무런 변화 없이 로딩 중과 같은 고정된 메시지를 얼마간 동안 보게 된다면, 게임을 플레이하는 유저 입장에서는 기다리는 시간이 매우 지루하게 느껴질 것입니다.하지만 0.5 버전부터는 IProgress<BlockDownloadState> 대신 IProgress<PreloadState> 타입의 인자를 받음으로써 프리로드 전반의 진행 상황을 세부적으로 전달받을 수 있도록 되었습니다.PreloadState를 상속 받은 BlockDownloadState, BlockStateDownloadState,
StateReferenceDownloadState, ActionExecutionState를 인자로 받은 IProgress<PreloadState> 객체를 통해 알림으로써 이용자에게 더 자세한 정보를 제공할 수 있습니다.그 외그 외의 여러 가지 변경 사항은 0.5.0 및 0.5.1, 0.5.2 전체 변경 내역에서 확인하실 수 있습니다.이번 변경 사항이나 Libplanet에 대해 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오세요!, 
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.112 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.113 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.113 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 파이콘 스프린트에 다녀오다, https://snack.planetarium.dev/kor/2019/08/pycon-sprint-2019/, , 이도건, 2019년 8월 21일, , 0, 안녕하세요 플라네타리움 개발팀에서 Libplanet을 개발하고 있는 이도건입니다!지난 8월 15일 부터 8월 16일까지 2일간 열린 파이콘 2019 스프린트에
Libplanet 프로젝트의 리더로 저희 팀이 참가했었습니다.
이 글에서는 파이콘 스프린트에서 받았던 기여들에 대해 간략히 이야기 해보고자 합니다.기여 소개스프린트에 참여해 주신 분들 덕분에 Libplanet 프로젝트를 비롯하여 Libplanet Explorer 프로젝트와 Libplanet Explorer 웹 프론트엔드 프로젝트에 추가된 기능들이 정말 많습니다!Libplanet Explorer는 Libplanet을 이용한 게임에서 생성된 블록들을 GraphQL을 통하여 쉽게 탐색할 수 있도록 도와주는 프로젝트이고
Libplanet Explorer 웹 프론트엔드는 이를 브라우저에서 쉽게 볼 수 있게 하기 위한 TypeScript + React 프로젝트입니다.파이콘 준비 위원회 분들께서 PR을 올릴 때마다 풍선을 선물해 주셨는데요.
저 많은 풍선들을 있게 한 기여 받은 PR들 중 일부를 공유해보고자 합니다!수상한 블록 다운로드 개수다른 노드로부터 해당 노드가 갖고 있지 않은 블록에 어떤 것이 있는 지에 대한 질의를 받았을 때
일정한 개수로 나누어 블록 해시들을 질의한 노드에게 전달하게 됩니다.하지만 블록 해시를 보내줄 때 첫 응답을 제외하고는 기대와는 다르게 하나 적게 전달해 주는 문제가 있었는데요.
이 문제의 해결을 위해 백대현 님께서 기여해 주셨습니다.이를 통해 원래 기대한 만큼의 블록 해시들을 보내고 받을 수 있게 되었습니다.빈 블록 숨기기!Libplanet은 작업 증명(proof of work) 기반의 가장 긴 체인만을 인정하는 방식을 따르고 있으므로
트랜잭션이 아무것도 들어있지 않더라도 꾸준히 블록을 생성하게 되는데요.
블록 자체보다는 그 안에 들어간 트랜잭션들을 살펴봐야 할 때에는 쿼리 결과에 빈 블록들이 섞여 있어서 거추장스러울 수 있습니다.하지만 저희가 관심있는 블록들은 주로 트랜잭션이 들어 있는 블록들이고
이를 위한 옵션을 하혜미 님께서 기여를 통해 추가해 주셨습니다!이를 통해서 원한다면 트랜잭션이 포함되어 있는 블록들만 볼 수 있게 되었습니다.프론트엔드 도커화!도커(Docker)는 애플리케이션을 컨테이너를 이용하여 쉽게 만들고 배포하고 실행할 수 있도록 도와주는 도구입니다.양민호 님께서 해주신 기여를 통하여 Libplanet Explorer 웹 프론트엔드에 도커파일을 만들어 주신 덕분에
어디든 쉽게 배포하거나 로컬에서 쉽게 돌려볼 수 있는 환경이 마련되었습니다.프론트엔드 변경 사항!Libplanet Explorer의 변경 사항에 따라 혹은 별개로 프론트엔드에도 여러 기능이 추가되었습니다.안기욱 님과 강효준 님 그리고 aucch 님 의 기여로 이제는 트랜잭션들이 없는
블록들을 필터링하는 옵션, 블록 생성 시간, 난이도 평균 등을 보여줍니다!또한 트랜잭션의 세부 사항을 볼 수 있도록 개별 트랜잭션 페이지가 생겼습니다!기여는 언제든지 환영입니다!스프린트 기간이 아니더라도 저희 프로젝트에 대한 질문 혹은 기여는 언제든 환영입니다!
GitHub 저장소로 찾아오셔서 이슈에 코멘트를 남겨주셔도 좋고 저희 디스코드 서버에 오셔서 물어봐주셔도 좋습니다., 
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.114 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.115 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.115 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.115 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.115 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.115 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.115 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity 테스트 러너 도입기, https://snack.planetarium.dev/kor/2019/07/unity-test-runner/, , 양천웅, 2019년 7월 12일, , 0, 안녕하세요. 플라네타리움 개발팀 양천웅입니다. 오늘은 Unity 테스트 러너 도입 시도에 대한 경험담을 얘기하려 합니다.들어가기 전에현재 저는 Libplanet과 Unity를 사용해 블록체인 게임 개발을 하고 있습니다. 팀에 합류한 이후 Unity로 게임을 만든다는 얘기가 나왔을 때는 막연히 ‘GUI 프로그래밍 경험이 없는 것도 아니고, 게임도 GUI 프로그래밍하듯이 하면 되겠지'라는 근거 없는 자신감을 가지고 시작했습니다.처음 프로젝트를 시작했을 때는 일정과 Unity에 대한 이해도가 부족한 상황이라 테스트를 포기하고 작업을 진행했지만, 시간이 지날수록 테스트 도입에 대한 필요성이 커졌고 그때 발견한 것이 Unity 테스트 러너였습니다.Unity 테스트 러너는 Unity에서 자체적으로 제공하는 테스트 도구입니다. NUnit 기반의 테스트를 작성 후, 플레이 모드와 에디트 모드 각각에 테스트 환경을 구축하여1 Unity 에디터에서 테스트를 실행할 수 있습니다.어셈블리 정의 파일 (assembly definition files)처음 문서를 보며 테스트 스크립트를 만들었는데 문제를 만났습니다. 다른 라이브러리들은 정상적으로 인식이 되는데, 정작 테스트를 해야 하는 게임 코드의 네임스페이스를 인식 못 하는 것이었습니다.
원인은 Unity 에디터 실행 시 자동으로 인식되는 Assembly-CSharp.dll과 다르게, 테스트 스크립트 안에서는 게임 프로젝트의 스크립트를 인식 못 하기 때문이었습니다.Tests.asmdef에 의존성을 추가프로젝트 스크립트를 정의한 어셈블리 정의 파일을 만든 뒤 테스트용으로 정의된 어셈블리 정의 파일2에 의존성을 추가해주면 문제가 해결됩니다.자세한 내용은 관련 문서를 참고해주세요.어셈블리 정의 파일의 플랫폼 설정어셈블리 정의 파일을 생성한 후에도 문제가 있었는데, 에디터에서는 정상적으로 작동하는 서드파티 라이브러리가 프로젝트 빌드 시에 인식이 안 되면서 깨지는 문제였습니다.
라이브러리가 Unity 에디터의 확장 기능을 제공하는 경우가 있는데, 어셈블리 정의 파일이 에디터용 기능을 빌드에 포함하려다 발생하는 문제였습니다.허용 플랫폼을 에디터만 체크해결 방법은 간단한데, 해당 라이브러리의 Editor 폴더 내부에 에디터용 정의 파일을 따로 생성 후, 플랫폼 설정의 Include Platforms 설정을 Editor만 허용하도록 변경하는 것입니다.테스트 실행준비가 끝났다면 이제 테스트를 작성하고 에디터에서 실행해보면 됩니다. 결과는 테스트 러너 창에서 바로 확인이 가능합니다.테스트 실행 결과현재 프로젝트에서도 아직은 테스트가 붙어있지 않은 코드가 더 많지만, Unity 테스트 러너를 도입한 이후에는 가능하면 버그 수정이나 새로운 기능 추가 시 테스트를 함께 작성하고 있으며, 덕분에 매번 게임을 실행해서 확인해야 했던 연출이나 로직 확인에 많은 시간을 줄일 수 있었습니다.Unity를 사용하는 다른 프로젝트에서도 기회가 될 때 도입한다면, 생산성 향상에 많은 도움이 될 것으로 생각합니다. 감사합니다!심지어 플레이 모드 테스트는 해당 플랫폼용으로 빌드된 플레이어로 알아서 빌드 후 실행까지 가능합니다. ↩︎에디터에서 테스트 러너 생성 시 별도 설정을 하지 않았다면 Assets/Tests/Test.asmdef로 생성됩니다. ↩︎, 
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.116 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.117 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.4 릴리스, https://snack.planetarium.dev/kor/2019/07/libplanet-0.4/, , 문성원, 2019년 7월 10일, , 0, 안녕하세요. 저희 팀은 Libplanet의 네 번째 마이너 버전인 0.4 버전을 릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.이 글에서는 0.4 버전의 주요 변경 사항에 대해 다루겠습니다.LiteDBStore 추가Libplanet은 저장 계층을 간추리기 위해 IStore라는 인터페이스와 이를 파일 기반으로 구현한 FileStore를 기본으로 제공합니다. 이 FileStore는 작은 규모의 게임에서 사용하기엔 충분했지만, 더 큰 규모의 게임에 적용해보니 다음과 같은 문제가 있었습니다.모든 블록과 그 상태, 트랜잭션 그리고 계정의 주소 등이 각기 별도의 파일로 저장되는 방식이었기 때문에, 파일이 너무 많이 생겼습니다.별도의 캐시나 버퍼가 없어 입출력 성능이 떨어졌습니다.저희는 이런 문제를 해결하고자 별도의 스토리지 엔진을 사용하는 IStore 구현의 필요성을 검토하였고, 그 과정에서 선택한 것이 바로 LiteDB입니다. LiteDB는 순수 C#으로 작성되어 있어 .NET 환경에서 이식성이 뛰어나고, 전체 데이터를 단일 파일로 관리할 수 있기 때문에 관리가 쉽습니다.이렇게 작성된 LiteDBStore는 IStore를 구현하기 때문에, 기존 FileStore에서 객체 초기화 방법을 제외하곤 완전히 같은 방법으로 사용할 수 있습니다.간편한 트랜잭션 생성0.3 버전에 추가된 Transaction<T>.Nonce는 안전한 트랜잭션을 만들기 위한 중요한 장치였지만, 동시에 Libplanet을 사용하는 개발자에게는 골칫거리기도 했습니다. Transaction<T>를 만들기 위해서는 반드시 BlockChain<T>.GetNonce()를 통해 현재 서명하는 계정의 정확한 논스를 얻어와서 사용해야 했기 때문이죠. 이는 단순히 번거로운 절차일 뿐만 아니라, 트랜잭션을 언제 만드느냐에 따라 동시성 문제를 일으키기도 했습니다.하지만 0.4 버전부터는 BlockChain<T>.MakeTransaction()를 통해 간편하면서 동시성 걱정 없이 트랜잭션을 만들 수 있습니다.트랜잭션 전파 자동화이전 버전까지의 Libplanet을 이용한 게임이 트랜잭션을 전파하기 위해선 Swarm.BroadcastTxs()를 직접 호출해야 했습니다. 그런데 네트워크 장애 등의 이유로 트랜잭션 전파에 실패할 수 있기 때문에, 게임 쪽에서 직접 재시도 로직을 구현해야 했었죠.(여전히 .BroadcastTxs()를 쓸 수도 있지만) 게임은 이제 이를 직접 처리하지 않아도 됩니다. 그 대신에 Swarm<T>을 만들 때 자신의 체인을 넣고 그 체인에 (위에서 소개한 BlockChain<T>.MakeTransaction()을 사용해서) 트랜잭션을 만들기만 하면 되죠. 나머지는 전파 과정은 Swarm<T>가 알아서 수행합니다.이 과정에서 Swarm이 직접 체인을 관리하기 때문에 BlockChain<T>처럼 타입 인자(T)를 가진 Swarm<T>으로 변경되었습니다.그 외그 외의 여러 가지 변경 사항은 전체 변경 내역에서 확인하실 수 있습니다.이번 변경 사항이나 Libplanet에 대해 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오세요!, 
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.117 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.118 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.119 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity 환경에서 단위 테스트 돌리기, https://snack.planetarium.dev/kor/2019/06/xunit-unity-runner/, , 홍민희, 2019년 6월 28일, , 0, 안녕하세요. 플라네타리움 개발팀에서 Libplanet을 만들고 있는 홍민희입니다.
이 글에서는 게임 엔진으로 널리 쓰이는 Unity 환경에서 단위 테스트를 돌리게
된 경위와 방법을 다루겠습니다.다양한 환경을 지원하려면Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이 게임을 만들 때,
그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의
문제를 푸는 공용 라이브러리입니다.기민한 개선을 이루면서도 리그레션이나 코너 케이스에서
일어나기 쉬운 오작동을 최소화하려면 테스트 코드, 그 중에서도 단위 테스트의
도움이 필요합니다. 뿐만 아니라, Libplanet은 라이브러리이므로
이를 이용할 게임이나 앱이 어느 운영체제와 .NET 런타임에서 실행될지
알기 어렵기 때문에, 가능한 다양한 환경에서 모든 테스트를 실행하는 게 좋습니다.그래서 저희 팀은 Libplanet 저장소에 푸시나 풀 리퀘스트가 생길 때마다
[Azure Pipelines]1에서 (Linux, macOS, Windows) ×
(.NET Framework, Mono, .NET Core) 조합2으로 테스트했습니다.매 빌드마다 테스트했던 환경의 조합Unity ≠ Mono처음에는 Unity가 Mono 런타임을 쓰기 때문에 이 정도로 충분하다고 생각했습니다.
그런데 Unity에서 Libplanet을 써서 게임을 만들다보니 게임에서만 예기치 못한
동작을 보는 일이 몇 번이나 겪게 되었고, 저희 팀은 Mono에서 테스트를 통과하는
것만으로는 Unity에서 잘 돌아간다고 믿기 힘들다는 생각이 점점 커졌습니다.실제로 Unity에서 쓰이는 Mono는 업스트림에 많은 패치가 더해진,
꽤 오랜 기간 유지되어 온 다운스트림인 것으로 보입니다.
게다가 완전히 같은 Mono 런타임에서 테스트한다고 해도,
Unity 플레이어로 인해 생기는 특수한 조건들이 적지 않다는 정황이 자주 보였습니다.
특히, ZeroMQ의 C# 구현인 NetMQ처럼, 밖으로 드러나는 API의 단순함에
비해 훨씬 복잡한 일들이 안쪽에서 일어나는 라이브러리의 오작동이 잦았습니다.이러한 모든 것들을 감안했을 때 Unity만을 위한 테스트 환경을 CI에 더해서
지속적으로 잘 돌아가는지 확인할 필요가 있다는 합의가 이뤄졌습니다.Unity에서 xUnit.net 테스트 돌리기Unity에서 제공되는 단위 테스트 기능이 있기 때문에, 처음에는 이를 쓰려고
했습니다.
그런데 Unity에서 제공되는 단위 테스트는 게이머가 실행하는 플레이어 환경이 아닌,
게임 개발자가 사용하는 에디터 환경에서 실행되는 방식이었고,
테스트 프레임워크도 NUnit만 지원하는 문제가 있었습니다.
xUnit.net 기반으로 만들어져 있는 Libplanet의 테스트 코드를 모두
NUnit 기반으로 바꿀까 하는 생각도 해봤지만 아무래도 분량이 적지 않고,
그렇게 긴 코드를 한 번에 바꾸다 보면 알아채기 힘든 실수도 분명
생길 게 뻔했습니다.그래서 Unity로 게임 앱이 아닌 테스트 실행기 앱을 만들기로 했습니다.
다행히 xUnit.net은 테스트 작성을 위한 API와 테스트 실행을 위한 API가 잘
나뉘어 있었습니다. 아마도 GUI나 CLI 외에도 각종 IDE에 플러그인 형태로 붙는 등,
다양한 프론트엔드가 있기 때문에 자연스럽게 그런 API를 갖추게 된 것으로 보입니다.
실제로 NuGet에서 “xunit runner"로 검색하면 다양한 환경을 위한 xUnit.net
테스트 실행기가 나옵니다.다만 한 가지 아쉬운 점은, 달리 API 문서가 있지 않기 때문에 xUnit.net의
소스 코드와 다른 테스트 실행기 소스 코드를 뒤져봐야 했다는 것입니다.3xUnit.net의 테스트 실행 API는 대강 이렇습니다. 우선 클라이언트 코드가
입력으로 넘긴 어셈블리 (.dll) 파일들에서 테스트라고 여겨지는 클래스들과
그 클래스에 속한 테스트 메서드들을 찾습니다.
그리고 나서 그 테스트 메서드 가운데 어떤 테스트를 실행할지는
클라이언트 코드에서 결정할 수 있습니다. 그 다음에는 그 테스트 케이스들을
테스트 실행기가 실행합니다.
테스트의 발견과 실행은 성능을 위해 병렬로 이뤄질 수 있기 때문에
API는 전형적인 IoC
패턴을 따릅니다. IMessageSinkWithTypes라는
테스트 발견, 실행 시작, 실패, 성공, 스킵 등의 이벤트를 메시지 형태로 받는
인터페이스를 클라이언트 코드에서 구현하여, 그런 이벤트가 일어났을 때
화면에 로그를 찍거나 해야 합니다. 저희 팀은 테스트를 병렬로 실행하지
않았기 때문에 클라이언트 코드만 더 길어지는 덜 자유로운 API가
답답했습니다. 🙄Unity로 CLI 프로그램 만들기Unity로 테스트 실행기를 만들려고 할 때 가장 고민했던 점은, 처음부터
CI에서 실행하기 위한 것이니 만큼
그래픽 화면이 아닌 CLI로
조작되고 결과가 보여야 한다는 점이었습니다. 그런데 Unity는 게임 등을 만들기 위한
플랫폼으로, 과연 CLI 앱을 만드는 게 잘 될까 걱정이 앞섰습니다.찾아보니 다행히 Unity에는 헤드리스 모드(headless mode)가 있어서,
이 모드에서는 그래픽 화면이 뜨지 않고 Debug.Log() 메서드로
찍은 로그도 모두 표준 출력으로 출력된다는 것을 알게 됐습니다.헤드리스 모드를 켜는 Unity 빌드 설정의 Server Build 옵션Unity에서 제공되는 Debug.Log() 메서드를 쓰지 않더라도, 일반적인 애플리케이션을
만드는 것과 같이 .NET 표준에서 제공하는 Console 클래스도
정상적으로 작동하는 것을 확인했습니다.다만 Main() 메서드를 정의할 수 있는 것은 아니기 때문에, 명령행 인자는
Main() 메서드의 string[] args 인자로 받지 못하고, 대신
Environment.GetCommandLineArgs() 메서드로
얻어야 했습니다. 마찬가지로 프로그램의 종료 역시 Application.Quit()
메서드를 명시적으로 호출하여 직접 프로세스를 중단시켜야 했습니다.마지막으로, Unity 플레이어 자체에서 출력되는 메시지들이 있었지만, 이 출력을 막는
방법을 찾지 못했기 때문에 그대로 마무리할 수밖에 없었습니다.4맨 처음과 마지막에 출력되는 Unity 플레이어 자체의 메시지는 결국 없애지 못했다.빌드 자동화Unity로 CLI 앱을 빌드하고 이를 윈도 뿐만 아니라 Linux나 macOS용으로도
만드는 방법을 문서로 써보니 그 과정이 까다롭고, 또 작업자에 따라 일정하지
않은 결과가 나오기 쉬워 보였습니다. 그래서 저장소에 태그를 만들어서 푸시하면
자동으로 Linux, macOS, Windows용 빌드가 나오도록 만들기로 했습니다.본격적인 CI를 붙일까 하다가, 단순히 빌드만 나오면 되겠다는 생각에
GitHub Actions를 이용해 구성했습니다.가와이 요시후미(河合宜文) 씨가 쓴 글을 참고하여, 모든 빌드 과정을 Docker
안쪽에서 진행할 수 있었습니다. 이 과정에서 다른 환경에서 겪어보지 못한 다음과 같은
것들을 겪기도 했습니다.Unity는 상용 제품이다보니, 라이선스 활성화 과정이 필요했습니다.Unity는 에디터와 플레이어의 경계가 다소 모호합니다. 에디터 환경에서
실행될 코드도 스크립트로 만들 수 있는데, Unity가 앱을 빌드하게 하는
스크립트를 그 앱의 일부로 포함시킨 뒤, 이를 실행하는 식으로 앱이
스스로 빌드되게 만듭니다.처음에는 세 운영체제를 위한 빌드를 만들기 위해서는 세 운영체제에서 각각
빌드를 해야 하나 생각했지만, 다행히도 Unity는 크로스 컴파일을
잘 지원하고 있어서, Linux에서 macOS 및 Windows용 빌드도 만들 수 있었습니다.GitHub Actions에서 빌드가 되는 모습마무리Unity 환경에서의 테스트도 더해진 현재의 빌드이렇게 만들어진 Unity용 xUnit.net 테스트 실행기를 Libplanet 프로젝트의
빌드에 적용했고, 현재 잘 동작하고 있습니다. 잘 동작한다는 의미는,
과연 Unity 환경에서만 보이는 상이한 동작을 자주 밟아 테스트가 자주
깨지고 있다는 뜻입니다. 😇 물론, 그러한 버그를 최대한 일찍 발견하고 싶기
때문에 만든 것이므로 기꺼이 받아들이고 있습니다.이렇게 만들어진 실행기는 코드가 깔끔하게 정리되지는 못했지만,
GitHub에 오픈 소스로 올렸습니다.
실행 파일은 릴리스 페이지에서 받을 수 있으니, 써보고 싶으신
분들은 받아서 이용해 보시기 바랍니다!2019년 6월 현재 Linux, macOS, Windows를 모두 지원하는 CI 서비스로는 Travis CI와 Azure Pipelines가 있습니다. 저희 팀은 처음에 Travis CI를 써왔지만 전체적으로 성능이 좋지 않아 이제는 Azure Pipelines를 쓰게 됐습니다. ↩︎.NET Framework는 윈도만 지원하기 때문에, 실제로는 9개의 환경이 아닌 7개의 환경에서 테스트하게 됩니다. ↩︎.NET은 오래 전부터 IDE가 보편화되었기 때문에 웹에 API 문서를 올려두지 않고, 그냥 소스 코드에 XML 문서 주석만 달아두는 프로젝트가 많습니다. 그렇게 달아 둔 문서는 IDE에서 클래스나 메서드가 자동 완성될 때 툴팁으로 작게 표시됩니다. ↩︎혹시 방법을 아시는 분이 있다면 알려주시기 바랍니다. 아니면 아예 풀 리퀘스트를 보내주셔도 좋습니다! ↩︎, 
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.119 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.120 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.120 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 예제로 보는 TURN, https://snack.planetarium.dev/kor/2019/06/nat_traversal_2/, , 문성원, 2019년 6월 18일, , 0, 안녕하세요. 플라네타리움 개발팀 문성원입니다. 지난 시간에 NAT 통과 기법에 대해서 소개해 드렸었는데요. 오늘은 그중에서 TURN을 살펴볼까 합니다.“Traversal Using Relays around NAT"라는 이름에서 알 수 있듯이 TURN은 공인 IP를 가진 서버가 통신을 원하는 단말들을 중계하는 방식을 일컫습니다. 단순히 기능이나 순서를 나열하는 것으론 이해가 어려울 수 있으니, 저희가 만들고 있는 Libplanet이 실제로 TURN을 사용하는 방식을 예로 설명하도록 하겠습니다.블록 체인과 NATLibplanet은 블록체인 기술을 게임 개발에 쉽게 사용할 수 있게끔 하는 라이브러리입니다. 많은 블록체인 구현체들은 분산된 노드(node)간의 통신에 P2P 형태의 네트워크를 사용하며, 이는 저희 Libplanet도 마찬가지입니다. 다만 다른 블록체인 구현체들과는 다르게, Libplanet을 통해 블록체인이 구현되는 애플리케이션은 게임입니다. 일반적으로 이러한 게임은 개인용 컴퓨터나 거치형 콘솔, 그리고 스마트폰과 같은 개인용 장비에서 실행되는데, 이런 장비의 대부분은 NAT로 구성된 네트워크 위에서 별도의 공인 IP를 가지지 않습니다. 즉 이러한 장비에서 실행되는 애플리케이션이 P2P 통신을 하려면 NAT를 통과하지 않을 수 없습니다.이때문에 Libplanet은 0.2.0부터 TURN을 이용한 릴레이를 지원합니다. 바로 다음과 같은 과정을 통해서요.포트 할당TURN을 통한 릴레이의 첫 단계는 포트 할당이라고 알려진 단계입니다. NAT 바깥에서 중계를 원하는 노드는 (필요하다면 적절한 인증 정보와 함께) 포트 할당 요청(allocation request)을 TURN 서버로 보냅니다. 적당히 간추리면 대충 이런 내용이겠죠.노드: 공인 IP와 포트를 통해 중계를 받고 싶습니다. 적당한 IP와 포트를 할당해주세요.TURN 서버는 요청이 올바르다면 설정에 따라 적당한 IP와 포트를 골라서 연결을 받을 수 있게 열어 두고 아래와 같은 응답을 보낼 것입니다.TURN 서버: 포트를 할당하였습니다. 앞으로 중계할 할 주소는 54.12.1.3:65002입니다. (논스: xyz)이렇게 포트 할당을 요청한 연결은 제어 연결(control connection)로 불리며, 이후 TURN 서버와 노드의 통신에 사용됩니다.
여기서 한 가지 주의할 점이 TURN 서버가 응답에 포함하는 논스(nonce)인데요. 이 논스는 제어 연결마다 고유하며, 획득한 논스를 이 제어 연결의 모든 요청에 같이 보내줘야 합니다. (혹은 논스 불일치(stale nonce) 에러를 받고 다시 요청하는 방법도 있습니다.)권한 요청 및 승인이렇게 할당 받은 IP와 포트(54.12.1.3:65002)로 다른 노드가 바로 접속할 수 있으면 좋겠지만 아직 한 단계가 더 필요합니다. 바로 권한 요청인데요. 이는 포트를 할당받은 노드가 할당 받은 포트를 어떤 IP의 노드에게 접속 가능하게끔 TURN 서버에 요청하는 것입니다. 권한 요청이 되지 않은 연결은 모두 차단되는데, 이는 중계를 원하는 노드가 접속을 원하는 노드의 IP 정보를 사전에 알고 있어야 함을 뜻합니다.하지만 실생활에서 많은 사용자는 자신의 공인 IP를 알고 있지 않거나 신경쓰지 않기 때문에, 이러한 정보를 직접 전달해야한다는 건 무척이나 어려운 일입니다. 이를 해결하기 위해서 WebRTC 같은 사용 예에서는 시그널링(signalling) 단계에서 접속할 노드의 IP 정보를 미리 알아내곤 합니다. 한편 Libplanet에서는 STUN 프로토콜을 통해 NAT 뒤에 있는 지를 확인하고, 만약 그렇다면 STUN을 통해 확인된 IP를 공인 IP로 릴레이 된 IP/포트와 함께 다른 노드에 전파합니다. 이러한 정보를 받은 노드는, 릴레이 된 정보로 접속하기에 앞서서 먼저 공인 IP를 통해 권한 요청을 하는 절차를 거칩니다.이렇게 노드가 접속을 원하는 다른 노드의 공인 IP(10.1.1.1)을 알고 있다면, 권한 요청은 아마 아래와 같을 것입니다.노드: 10.1.1.1에서 54.12.1.3:65002로 오는 요청을 허가해주세요.이런 접근 권한은 300초의 유효기간(lifetime)이 지나면 만료되는데, 이를 방지하기 위해서는 권한을 요청했던 노드가 다시 TURN 서버에게 권한 요청을 해야 합니다.연결 알림 및 새 연결 요청하기이렇게 권한 요청 및 승인까지 끝마치고 나면, 드디어 할당 받은 IP와 포트로 승인된 다른 노드가 접속할 수 있습니다. 다른 노드가 할당된 IP와 포트를 통해 접속하면 TURN 서버는 이를 감지하여 다음과 같은 메시지를 제어 연결로 보냅니다.TURN 서버: 10.1.1.1에서 54.12.1.3:65002로 연결 시도가 있었습니다. (연결 ID: 1234)TURN 서버에 중계를 요청한 노드가 이 연결을 수락하려면, 제어 연결이 아닌 새로운 연결을 만들어서 TURN 서버에 요청하면 됩니다. 이 때 요청 받은 외부 연결을 구분하기 위해서 연결 알림 메시지의 연결 ID(connection ID)를 보내야 합니다.노드: 연결 1234에 대한 데이터는 앞으로 이 연결로 전달해주세요.이렇게 새롭게 생긴 연결을 데이터 연결(data connection)이라고 합니다.
이후 54.12.1.3:65002로 보내는 요청은 이 데이터 연결을 통해 전달되며, 해당 IP/포트에 연결된 노드에 응답하고 싶을때도 이 데이터 연결에 전송하면 TURN 서버를 거쳐서 노드에 전달됩니다.남은 일들실제로 응답을 제대로 보내기 위해서는, 앞서 만든 데이터 연결과 Libplanet 노드의 요청–응답용 연결을 다시 중계 할 필요가 있습니다. 이 부분은 노드 안에서만 잘 처리되면 되기 때문에 별도의 프로토콜이나 공개 표준은 정해지지 않았습니다. 만약 TURN 클라이언트가 웹 서버와 별도의 프로세스로 실행된다면 IPC, 같은 프로세스라면 스레드 간 통신 등을 이용해 이를 적절히 처리해주시면 됩니다. Libplanet에서는 별도 TCP 프록시를 로컬에서 실행하여 이를 릴레이합니다., 
01:45:49.121 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.121 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.121 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.121 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.121 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.122 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.123 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.3 릴리스, https://snack.planetarium.dev/kor/2019/05/libplanet-0.3/, , 이승훈, 2019년 5월 31일, , 0, 안녕하세요. 저희 팀은 Libplanet의 세번째 마이너 버전인 0.3 버전을 릴리스했습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.이 글에서는 0.3 버전의 주요 변경 사항에 대해 다루겠습니다.버전이 다른 노드를 만났을 때 반응하는 API0.2 버전부터 Swarm 생성자에 appProtocolVersion이 추가되어 노드의 프로토콜 버전을 지정하도록 했습니다.
이번 0.3 버전에서는 Swarm.DifferentVersionPeerEncountered 이벤트 핸들러를 통해 버전이 다른
노드를 만났을 때의 행동을 지정해 줄 수 있습니다.예를 들어 자신보다 높은 프로토콜 버전의 메시지를 받을 경우 게임 앱을 업그레이드하도록 하는 핸들러 등을
Swarm.DifferentVersionPeerEncountered로 넘겨줄 수 있습니다.액션 렌더링 API기존에는 게임에서 액션이 실제로 처리되었는지, 즉 액션의 실행 결과가 GetStates() 메소드의 결과에 언제 반영되는지 신호(이벤트)를 받을 수 없었습니다.
따라서 특정 주소의 액션이 처리되었다는 것을 확인하기 위해서는 폴링 등의 방법을 이용해 해당 주소의 상태가 액션 이후의 상태로 변경되었는지 확인해야 했습니다.
이런 방식은 구현이 복잡하고 번거로울 뿐 아니라 액션의 처리가 확인될 때까지 주소의 상태를 수차례 가져와야 하므로 성능적인 측면에서도 문제가 있습니다.이런 문제를 해결하기 위해 이번 버전에서는 액션 렌더링 API가 추가되었습니다.
IAction.Render() 메서드 구현을 통해 게임에서는 액션의 결과가 로컬 상태에 반영되는 순간을 이벤트로 받을 수 있게 됩니다.
또, 다수 체인(majority chain)이 변경되어 처리된 액션이 포함된 블록이 유효하지 않게 될 경우 IAction.Unrender() 메서드를 통해 이미 렌더링 된 액션을 되돌릴 수 있도록 했습니다.계정 상태 접근 방법 개선이전 버전에서는 계정의 상태를 가져오기 위해 해당 계정의 상태가 마지막으로 갱신된 블록을 찾을 때까지 이전 블록을 순회하는 방법을 사용했습니다.
이런 방식을 사용하면 해당 주소에 아직 아무런 상태가 기록된 적 없을 경우
최신부터 제너시스까지 모든 블록을 순회해야 하는 문제점이 있습니다.
상태가 마지막으로 업데이트된 지 오래되어 그사이 많은 블록이 추가된 주소의 상태를 구할 때도 마찬가지로 많은 블록을 순회해야 하고,
체인의 길이가 길면 길수록 상태를 확인해야 하는 시간이 늘어나게 됩니다.이번 버전에서는 각 계정의 상태를 저장할 때 해당 주소의 상태를 가지고 있는 블록을 인덱싱하고,
상태를 조회할 때는 해당 블록을 바로 조회하는 방식으로 성능을 개선하였습니다.블록 추가 성능 개선블록체인에 블록을 추가할 때 수행되는 작업의 개선을 통해 블록 추가 성능을 개선했습니다.이미 체인에 추가된 블록에 접근할 때 수행하던 불필요한 블록 검증을 제거했습니다.블록이 추가될 때 전체 체인을 검증하던 방식에서 추가되는 블록만 검증하는 방식으로 변경했습니다.블록 해시가 필요할 때마다 계산하는 대신 블록 생성 때 한번 계산하도록 변경했습니다.블록의 해시를 계산할 때 전체 트랜잭션을 사용하는 대신 트랜잭션 ID를 사용하여 해시 계산 시간을 감소시켰습니다.블록을 추가할 때 여러 번 수행되던 액션 평가를 한 번만 수행되도록 하여 블록 추가 시간을 감소시켰습니다.그 외그 외의 여러 가지 변경 사항은 전체 변경 내역에서 확인하실 수 있습니다.이번 변경 사항이나 Libplanet에 대해 궁금한 점이 있으시다면 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오세요!, 
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.123 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.124 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 팀이 스프린트서울에 참가합니다, https://snack.planetarium.dev/kor/2019/05/sprintseoul/, , 홍민희, 2019년 5월 20일, , 0, 오는 6월 29일(토)에 서울 강남에서 모일 스프린트서울이라는 행사를 아시나요?
오픈 소스에 열정이 있는 분들이 모여서 오픈 소스 프로젝트에 코드나 문서 등을 기여해보는 행사로,
평소에 오픈 소스에 흥미는 있었지만 기여해 볼 계기는 없었던 분들도 이 모임에 오셔서
첫 오픈 소스 기여를 경험할 수 있습니다.스프린트는 오픈 소스 프로젝트의 작성자 또는 기여자와 함께 짧은 시간 동안 함께 문제를 찾고 해결하며,
해당 오픈 소스 프로젝트에 대해 보다 깊게 알아가는 행사입니다.저희 팀은 이미 지난 4월에도 참가한 바 있으며, 6월 29일에도 참가합니다.
저희 팀은 Libplanet 프로젝트 리더로 참가하며,
이 행사를 통해 여러분들의 기여를 기대하고 있습니다.스프린트 참가 신청은 6월 20일까지만 받는다고 하며, 신청 양식 및 스프린트서울의 상세한 안내는
공식 홈페이지에서 살펴보실 수 있습니다.Libplanet 프로젝트 소개Libplanet이 어떤 프로젝트인지 궁금하실 분들을 위해,
Libplanet 0.2 릴리스에서 했던 소개를 인용합니다.Libplanet은 분산 P2P로 돌아가는 온라인
멀티플레이 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나
데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.Libplanet은 널리 쓰이는 Unity 엔진과 함께 쓰일 것을 염두에 두고 만들어져,
현재 C# 언어로 개발되고 있습니다. 물론 Unity 엔진을 쓰지 않더라도 .NET 또는 Mono
플랫폼으로 구현된 게임이라면 쉽게 붙일 수 있도록, .NET Standard 2.0을 타깃하여
이식성을 확보하고 있습니다.Libplanet의 또 다른 특징은, 프레임워크나 엔진이 아닌 라이브러리라는 점입니다.
엔진이나 프레임워크는 게임 프로세스의 진입점(Main() 메서드)과 주도권을 가져간 채
허용된 부분에 한해서 게임 프로그래머가 스크립팅할 수 있게 하는 데 반해,
Libplanet은 게임 프로세스를 선점하지 않으며 게임 프로그래머가 명시적으로
호출한 곳에서만 비간섭적으로 (unobtrusively) 동작합니다.
덕분에 Unity 같은 기성 게임 엔진과도 무리 없이 함께 쓸 수 있습니다.Libplanet은 NuGet에 올라가 있으며, API 문서도 있습니다.개발 환경먼저, 스프린트에 참여하기 위해서는 개발 환경을 설치해야 합니다. 가급적이면 스프린트
시작 전에 미리 개발 환경을 설치해 와주시면 감사하겠습니다. 어느 프로젝트나 그렇겠지만,
개발 환경 설치에 시간이 생각보다 많이 들기 때문에, 반나절 가까이 허비하는 경우가 흔합니다.C#은 Python이나 JavaScript 등과 달리 IDE가 없으면 코딩하기 힘든 언어입니다.
Windows라면 최신 버전의 Visual Studio를 설치하면 되겠지만, 여러 플랫폼에서
두루 쓸 수 있는 IDE로 Rider나 VS Code를 추천합니다. 아래 문서들은
Rider 또는 Visual Studio Code를 쓴다는 가정 하에 Libplanet의 개발 환경을
설치하는 방법을 한국어로 안내하고 있습니다.Libplanet 개발 환경 설정 (VS Code)Libplanet 개발 환경 설정 (Rider)그 외에, Libplanet 저장소의 CONTRIBUTING.md 문서는 CLI 도구만을 이용해서 개발하는 아주
기본적인 개발 환경 설정을 안내합니다. 꼭 자신이 이용하는 에디터를 쓰고 싶은 분들은 이쪽을 읽어주시면
되겠습니다. 단, 그런 경우 Libplanet 커미터들이 당일 행사장에서 도움을 드리기 힘들 수 있기 때문에,
꼭 미리 개발 환경을 잘 설치해서 오시는 게 좋습니다.살펴볼 만한 이슈처음 기여하시는 분들을 위한 초심자용 이슈들을 모아놨습니다.
프로젝트 구조를 자세히 파악하지 못한 상태에서도 깊게 들어가지 않고 해볼 수 있을 만한 것들입니다.어떤 기여를 어떻게 해야 할지 고민이 되는 분들은, 이승훈 님께서 쓰신
Libplanet 처음 기여하기 경험담도 도움이 될 것 같습니다.질문 및 대화방궁금한 게 있으시면 저희 Discord 서버에 있는 #libplanet-users-kr 채널에
오셔서 물어보셔도 됩니다. 행사 전에 미리 들어오셔서 물어보셔도 좋고, 행사 끝난 뒤라도
좋습니다., 
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.124 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.125 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Unity 2018.2에서 2018.3으로 이주하기, https://snack.planetarium.dev/kor/2019/05/unity-2018.3/, , 현승민, 2019년 5월 17일, , 0, 안녕하세요. 플라네타리움에서 게임을 개발하고 있는 현승민입니다. 게임 개발팀에서는 Unity 2018.3에서 추가되거나 개선된 몇 가지 기능들을 사용하기 위해서 해당 버전으로 이주할 준비를 하고 있었습니다.네스티드 프리팹 (Nested Prefab)네스티드 프리팹을 통해 워크플로가 얼마나 개선되는가는 이미 여러곳에서 언급되고 있습니다.동시 편집기존에는 한 프리팹을 고치기 전에 먼저 팀에 얘기를 해 뒀어야 했습니다. 그렇지 않으면 각자의 로컬 저장소에서 저마다 고친 프리팹이 업스트림 저장소에 올릴 때 충돌하기 때문입니다. 하지만 새로운 프리팹은 변경점을 별도의 프리팹으로 구조화해서 이러한 충돌을 방지할 수 있는 방법이 생겼습니다. 여전히 동일한 프리팹 간에는 충돌이 발생할 여지가 있지만, 동일한 프리팹의 범주가 작아져서 그 빈도가 크게 줄었습니다.다중 구조기존에는 하나의 프리팹은 그 하위의 모든 객체를 직접 포함하는 단일 구조인 반면, 새로운 프리팹은 하위의 특정 객체를 또 다른 프리팹으로 분리하고, 그렇게 분리한 프리팹 하위의 객체는 해당 프리팹이 관리하도록 다중 구조로 만들 수 있습니다. 이는 프리팹의 모듈화가 가능해지고 재사용성이 좋아져서 중복도 줄어들게 됩니다.변형하나의 프리팹을 그대로 상속하지만, 내부 속성을 오버라이드 하거나 컴포넌트 혹은 게임 객체를 추가해서 변형 프리팹을 만들 수 있습니다. 이때 원본 프리팹의 변경이 변형 프리팹에 반영되는 성질이 있어서 프리팹을 관리하는 비용이 줄어듭니다.프리팹 모드기존에는 프리팹을 제작하거나 수정하기 위해서 신(scene)에 임시 인스턴스를 만들어서 그것을 수정 후 프리팹에 반영한 뒤 임시 인스턴스를 도로 지워주는 과정이 필요했습니다. 각각의 과정에서 손이 많이 가고 실수 할 여지가 있었는데, 새롭게 추가된 프리팹 모드는 이러한 워크플로를 간단하게 만들어 속도와 안정성에서 개선되었습니다. 아직 프리팹 모드에서 간헐적으로 그래픽 요소들이 보이지 않는 버그가 있는데, 이런 때에는 이전 방식으로 수정해야 하는 상황입니다.메모리 프로파일러더욱 강력해진 메모리 프로파일러를 사용해서 문제 해결에 더욱 세세하게 접근할 수 있습니다.2D 애니메이션 v2기존의 애니메이션 시스템은 워크플로가 너무 불편해서 새로운 애니메이션과 스파인이라는 외부 툴 중 하나로 이주할 필요가 있었습니다. 결과적으로는 스파인을 사용하게 됐지만, 새로운 애니메이션 또한 큰 개선을 확인할 수 있었습니다.파티클 시스템이펙트가 중요한 프로젝트를 진행 중이기 때문에 개선된 파티클 시스템을 통해 전반적인 이펙트 개선을 의도했습니다. 리소스에 아무런 수정도 하지 않았지만, 이펙트가 시각적으로 나아졌다는 아트팀의 피드백이 있을 정도로 확실한 개선점을 확인할 수 있었습니다.하지만, 이주를 진행하기 하루 전 Unity 2019.1이 정식 출시되는 당황스러운 상황이 발생합니다. 다음 글에서는 Unity 2019.1에서 추가된 기능을 살펴보고 저희가 어떻게 대응했는지를 이야기 하겠습니다., 
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.125 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.126 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.126 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 처음 기여하기, https://snack.planetarium.dev/kor/2019/05/first-contribution/, , 이승훈, 2019년 5월 7일, , 0, 안녕하세요. 플라네타리움 개발팀 이승훈입니다. 플라네타리움에서 일하는 것이 매력적인 이유 중 하나는 오픈 소스 개발자로 일할 수 있다는 게 아닐까 합니다. 이번 글은 제가 Libplanet 프로젝트에 했던 첫 기여에 대한 이야기입니다. Libplanet에 대한 소개는 Libplanet 0.2 릴리스를 참고해주세요.왜 Libplanet에 기여했을까?지난 1월 플라네타리움은 첫 채용 공고를 오픈함과 동시에 Libplanet 프로젝트의 저장소를 공개했습니다. 매력적인 팀과 프로젝트라고 생각했지만 Libplanet은 유니티와 연동하기 위해 C#으로 개발되고 있었고 저는 주로 파이썬으로 개발해왔기 때문에 선뜻 지원하기가 망설여졌습니다. 그래서 Libplanet이 오픈 소스로 열려있기도 하니 간단한 것이라도 개발에 한 번 참여해보고 결정하기로 마음을 먹었습니다.C# 개발 환경저의 경우 이전에는 맥에서 파이썬 위주로 개발을 했습니다. 종종 관심 있는 파이썬 오픈 소스 프로젝트에 기여하곤 했었는데, 파이썬 개발자들이 맥을 많이 사용하기도 하고 오픈 소스에도 친숙한 편이어서 크게 어려움을 느끼지 않고 참여할 수 있었습니다. 그런데 막상 맥에서 C# 개발 환경을 구축하려고 하니 무엇을 설치해야 할지부터 막막했습니다. 다행히 예전과는 다르게 Mono나 .NET Core와 같은 프로젝트들이 있어서 맥에서도 .NET 개발을 할 수 있고, VS Code 등의 에디터들에서도 C# 개발을 하기 위한 플러그인들을 잘 지원하는 편이라 큰 어려움 없이 개발 환경을 설치할 수 있었습니다. 현재는 Libplanet에서도 프로젝트에 기여하려는 개발자들을 위한 개발 환경 설정 방법을 제공하기 때문에 좀 더 수월하게 환경을 설정할 수 있을 것 같습니다.어떤 걸 기여할까?Libplanet 주소는 이더리움의 주소형식을 차용하고 있습니다. 이더리움 주소는 EIP-55에서 제안된 대소문자를 혼합한 형식의 체크섬을 사용하고 있는데, 이 주소 형식의 예제는 아래와 같습니다.십육진법0xd1220a0cf47c7b9be7a2e6ba89f429762e7b9adbEIP-55 체크섬0xD1220A0cf47c7B9Be7A2E6BA89F429762e7b9aDb당시에 Libplanet 주소의 문자열 표현은 소문자만으로 구성된 십육진법이었습니다. 따라서 주소의 문자열 표현을 이더리움에서 사용하고 있는 EIP-55 체크섬 형식으로 표현되도록 구현해야 하는 이슈였습니다. 자세한 내용은 해당 이슈와 PR을 참고하실 수 있습니다.C#에서의 개발 경험이 거의 없었고 프로젝트 배경지식도 별로 없는 상황이었지만 많은 모듈을 고치지 않아도 되는 간단한 이슈여서 큰 어려움 없이 첫 기여를 진행할 수 있었습니다.기여를 통해 알게된 것첫 기여를 통해서 알게 된 점은 맥에서의 C# 개발 환경이 생각했던 것보다는 해볼 만하다는 것입니다. C#이 대중화된 멀티 패러다임 프로그래밍 언어를 지향하기 때문에 언어 자체의 어려움은 별로 없었습니다. 맥에서의 .NET 개발 환경도 개발하는 데 큰 무리는 없었지만, 써드파티 라이브러리나 윈도우외의 플랫폼에서 다양한 도구 지원은 아직 미비한 부분이 있었습니다. 하지만 최근 마이크로소프트의 오픈 소스 정책과 멀티 플랫폼 정책에 힘입어 차츰 나아질 것으로 보입니다.또한 플라네타리움 팀의 개발문화도 경험할 수 있었는데, 깃허브에서 모든 이슈가 기록되고 전 세계 오픈 소스 커뮤니티와 소통하기 위해 영어를 사용한다는 점이 인상적이었습니다. 그리고 외부에서 기여를 받고 있기 때문에 코드 리뷰가 필수적으로 진행되고 CI를 통해 테스트뿐 아니라 체인지로그 같은 사항들도 자동화되어 관리되고 있다는 점이 좋았습니다.마치며저는 첫 기여 후에 플라네타리움팀에 합류한 지 약 한 달 정도 되었고 함께 즐겁게 일하고 있습니다. 플라네타리움에서 함께 Libplanet을 만들 소프트웨어 엔지니어를 찾고 있으니 관심있는 분들은 채용 정보 페이지를 확인해주세요.플라네타리움은 Libplanet 기여를 활성화하기 위해 코드먹는하마, 스프린트서울 등의 행사에 참여했고 앞으로도 활발하게 참여할 예정입니다. 또한 처음 기여하시는 분들을 위한 초심자용 이슈들이 있으니 관심 있는 분들은 참고하시면 좋을 것 같습니다.프로젝트에 궁금한 점이 있으신 분들은 언제든 저희 팀이 상주해 있는 디스코드 대화방에 놀러 오시길 바랍니다!, 
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.127 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.128 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.2 릴리스, https://snack.planetarium.dev/kor/2019/04/libplanet-0.2/, , 홍민희, 2019년 4월 9일, , 0, 안녕하세요. 지난주 저희 팀은 Libplanet의 두번째 마이너 버전1인 0.2 버전을 릴리스했습니다.
여러 변화가 있었지만, 이 글에서는 몇 가지 주요 기능 추가 및 API 변경에 대해 다루겠습니다.Libplanet 소개이에 앞서, 이 블로그에 Libplanet을 소개한 적이 없으니 간략히 설명을 하고 넘어가겠습니다.Libplanet은 분산 P2P로 돌아가는 온라인
멀티플레이 게임을 만들 때, 그러한 게임들이 매번 구현해야 하는 P2P 통신이나
데이터 동기화 등의 문제를 푸는 공용 라이브러리입니다.Libplanet은 널리 쓰이는 Unity 엔진과 함께 쓰일 것을 염두에 두고 만들어져,
현재 C# 언어로 개발되고 있습니다. 물론 Unity 엔진을 쓰지 않더라도 .NET 또는 Mono
플랫폼으로 구현된 게임이라면 쉽게 붙일 수 있도록, .NET Standard 2.0을 타깃하여
이식성을 확보하고 있습니다.Libplanet의 또 다른 특징은, 프레임워크나 엔진이 아닌 라이브러리라는 점입니다.
엔진이나 프레임워크는 게임 프로세스의 진입점(Main() 메서드)과 주도권을 가져간 채
허용된 부분에 한해서 게임 프로그래머가 스크립팅할 수 있게 하는 데 반해,
Libplanet은 게임 프로세스를 선점하지 않으며 게임 프로그래머가 명시적으로
호출한 곳에서만 비간섭적으로 (unobtrusively) 동작합니다.
덕분에 Unity 같은 기성 게임 엔진과도 무리 없이 함께 쓸 수 있습니다.Libplanet은 NuGet에 올라가 있으며, API 문서도 있습니다.NAT 우회첫 버전부터도 P2P 통신은 됐지만, 피어는 모두 공인 IP를 갖고 있어야 했습니다.
즉, 공유기 뒤에 있는 피어와는 통신이 되지 않았기 때문에, 현실적으로는 쓰임이 제한적이었습니다.
이를 해결하는 것이 급선무였기 때문에 어떻게든 NAT를 우회하는 것이 0.2 로드맵에서 가장 중요했고,
우선은 조금 비효율적이어도 가장 많은 케이스를 커버하고자
TURN 및
STUN이라 불리는
RFC 5766 및 RFC 5389를 구현했습니다. 이 과정에서 오픈 소스 C# 구현을 찾지 못해
스펙에서 필요한 부분들을 모두 직접 구현하는 수고를 같은 팀의 문성원 님이 해주셨습니다.
이 경험을 풀어서 쓴 NAT를 넘어서 가자라는 글도 읽어주시기 바랍니다!좀 더 게임스러운 트랜잭션Transaction<T>은 네트워크 구성원 사이에 데이터를 동기화하는 단위입니다.
Libplanet은 이전 버전까지는 비슷한 문제를 푸는 비트코인 같은 기존 기술을 참고했기 때문에,
모든 트랜잭션에 발신자와 수신자가 있다는 개념을 그대로 받아들였습니다.
비트코인은 송금을 다루므로 재화가 이동하기만 하며 복제되어선 안 됩니다.
따라서 보내는 사람이 있다면 받는 사람이 꼭 있어야 하며,
모든 트랜잭션에 발신자와 수신자가 있다는 개념이 자연스럽습니다.
하지만 게임에서는 캐릭터의 이동처럼 수신자 개념이 없는 행동이나,
광역기처럼 수신자가 둘 이상일 수 있는 행동도 자주 나타납니다.이러한 상황을 더 자연스럽게 다룰 수 있도록,
이번 버전부터는 Transaction<T>의 Sender–Recipient 개념이 사라지고,
대신 Signer–UpdatedAddresses 개념이 그 자리를 갈음하게 되었습니다.새로운 상태 접근 API기존에는 모든 IAction 구현은 Execute() 메서드 안에서 접근할 계정의 주소 목록을
반드시 RequestStates() 메서드를 통해 제출해야 했습니다.
Execute() 메서드에서 미리 제출하지 않은 주소의 상태를 읽거나 쓰려고 하면 유효하지 않은
액션으로 취급됐습니다.하지만 블록체인을 통해 공개 네트워크에서 공유된 상태들은 어차피 누구나 읽을 수 있기 때문에,
읽기의 제한은 큰 의미가 없으며 쓰기의 제한만 있으면 된다는 결론에 이르게 됐습니다.또한, 기존에는 접근할 계정에 대한 정보가 RequestStates() 메서드와 Execute() 메서드
양쪽 코드에 중복되므로 버그가 나기 쉬운 구조였고, 조심한다고 하더라도 양쪽을 함께 고쳐야 하는
API도 매우 불편했습니다.이러한 문제들을 두루 풀고자, 이번 버전부터는 IAction 인터페이스의 상태 접근 API가
크게 개선됐습니다. RequestStates() 메서드는 아예 사라졌으며,
IAction.Execute()의 인자로 들어온 IActionContext 객체의
PreviousStates가 일종의 “변경 기록” API를 제공하게 되었습니다.
이 변경 기록을 Execute() 메서드 안에서 쌓아 나간 뒤,
최종적으로 그 변경 기록을 반환하면 상태가 실제로 갱신됩니다.또한, 트랜잭션이 만들어질 때 액션이 “리허설 모드"로 실행되는데,
이 리허설을 통해 Execute() 메서드가 상태를 갱신하려고 하는 주소의 목록을 얻어서
이 목록도 함께 트랜잭션에 포함되어 서명됩니다.
서명된 트랜잭션을 다른 노드가 받았을 때는, 트랜잭션을 서명한 당사자가 리허설을 통해
구한 주소 목록 이외의 계정 상태를 바꾸는 것이 차단됩니다.액션의 서브타입 다형성 분리이전 버전까지는 게임마다 IAction을 구현한 추상 클래스를 정의하고,
이를 상속하는 여러 구체 클래스를 두는 것이 Libplanet이 상정한 유일한 이용법이었습니다.
그러나 게임에 따라 게임 내 액션의 종류를 IAction 수준에서 나누는 것보다,
IAction을 단 하나의 클래스로 구현하고 액션에 들어가는 데이터를 통해 동작을 세분화하는 방식이
더 적합한 경우도 있습니다. 또, 액션의 타입에 따라 동적으로 디스패치하는 방식은 내부적으로
.NET의 리플렉션을 써서 구현했기 때문에 이러한 것이 곤란한 프로젝트도 있을 수 있습니다.그래서 이번 버전부터는 Transaction<T>의 T는 IAction을 구현할 뿐만 아니라 구체 클래스만을
받아들이게 됐습니다. 추상 클래스나 인터페이스는 IAction을 구현했다고 해도 받아들여지지 않으며,
구체 클래스 역시 서브타입의 존재는 완전히 무시되게 됩니다.대신, 기존처럼 서브타입 다형성을 통해 액션의 동작을 세분화하고 싶다면,
PolymorphicAction<T>라는 새로운 액션 데코레이터 구현을 쓰면 됩니다.
예를 들어 기존의 타입이 Transaction<AbstractAction>이었다면,
Transaction<PolymorphicAction<AbstractAction>> 타입으로 고쳐서 쓰면
대부분의 경우 기존대로 동작하게 됩니다.
물론, PolymorphicAction<T> 클래스는 내부적으로 .NET 리플렉션을 씁니다.그 외그밖에도 여러 변화가 있었고, 자세한 것은 전체 변경 내역에서 확인할 수 있습니다.참고로 0.2.0 버전이 릴리스된 뒤 이틀 뒤에 몇 가지 문제를 해결한 0.2.1이 릴리스되어,
(2019년 4월 9일) 현재 최신 버전은 0.2.1입니다.호기심이 생기신 분들은 설치해서 이용해 보시고, 궁금한 점이 있으시다면 저희 팀이 상주해 있는
디스코드 대화방에 놀러오세요!저희는 아직 메이저 릴리스를 한 적이 없습니다. ↩︎, 
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.128 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.129 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: NAT를 넘어서 가자, https://snack.planetarium.dev/kor/2019/04/nat_traversal_1/, , 문성원, 2019년 4월 4일, , 0, 안녕하세요. 플라네타리움 개발팀 문성원입니다. 오늘은 NAT 통과 기법이라고 알려진 방법에 대해서 이야기를 해볼까 합니다.뭐가 문젠가요?게임 서버에서 스마트폰에 이르기까지 현대 인터넷에 참여하는 모든 단말은 IP 주소를 가지고 있습니다. 이는 한 단말이 다른 단말에 연결하여 메시지를 주고받기 위함인데요.근본적인 문제는 이러한 IP 주소의 수량이 한정되어 있다는 것입니다. 널리 쓰이는 IPv4의 경우엔 32비트로 구성되어 단순 계산으론 232개(약 40억개 이상)를 할당할 수 있습니다. (물론 이걸 전부 사용하는 것은 아닙니다.) 얼핏 보면 충분해 보이기도 하지만, 1인당 1개 이상의 기기를 운용하기에는 턱없이 모자라지요. 실제로 2011년 이후로 IPv4 주소가 모두 소진되어 신규 주소도 할당이 되지 않는 상태입니다.이 문제를 해결하기 위해, 주소 공간을 128비트로 크게 늘린 IPv6가 제안되었으나, IPv4 주소 고갈에 비해 보급이 더뎠습니다. 해서 많은 네트워크 담당자들은 네트워크를 분리하여 복수의 사설 IP를 두고, 인터넷엔 그러한 주소를 변환하여 하나의 공인 IP로만 접속하게 하는 방식을 택했습니다. 흔히 이야기하는 NAT(Network Address Translation)는 이러한 작업을 이르는 말인 동시에, 경우에 따라선 해당 작업을 처리하는 장치(일반적으론 라우터)를 일컫기도 합니다.서버–클라이언트 모델에서 이런 NAT를 통한 인터넷 접속은 크게 문제가 되지 않습니다. 서버가 공인 IP를 가지고 있다면, 클라이언트는 NAT를 거치건 거치지 않건 접속할 수 있기 때문이죠. 하지만 만약 NAT 안쪽에 있는 단말에 접속해야 한다면 문제가 발생합니다. NAT 안쪽의 사설 네트워크의 IP로는 NAT 바깥의 단말들이 접속할 수 없기 때문이죠. 이러한 상황을 해결하기 위한 기법들을 NAT 통과 기법이라고 합니다.그래서 뭘 써야 하나요?UPnP (IGDP)NAT를 통과하는 기법은 크게 NAT의 도움을 받느냐 그렇지 않느냐로 구분할 수 있습니다. 장비들의 연결성이 중시되는 현대 인터넷의 요구 사항에 맞춰서 제안된 UPnP와 같은 프로토콜은, NAT 통과 문제를 해결하는 기능(예: Internet Gateway Device Protocol)을 지원하기도 합니다. 다만, 이는 어디까지나 해당 프로토콜을 지원하는 장비에만 적용할 수 있는 해결책입니다. 어떠한 장비들은 UPnP를 선택적으로 지원하거나, 아예 지원하지 않을 수도 있습니다.Relay (TURN)다른 한 가지 방법은 NAT의 도움을 받지 않는 방법입니다. 다시 이야기하면, 사설 IP ↔ 공인 IP 체계를 유지한 상태에서 외부에서 접속이 가능하게 한다는 것이기도 합니다. 어떻게 할 수 있을까요? 이쯤에서 우리가 할 수 있는 것과 할 수 없는 일을 정리하면 아래와 같습니다.공인 IP를 가진 단말은다른 단말의 연결을 처리할 수 있습니다.다른 공인 IP를 가진 단말에 연결할 수 있습니다.사설 IP를 가진 단말은다른 단말의 연결을 처리할 수 없습니다.아주 엄밀하게 말하면, 같은 네트워크 안에선 가능합니다. 하지만 이야기를 단순하게 하기 위해 이 경우는 제외하겠습니다. :)다른 공인 IP를 가진 단말에 연결할 수 있습니다.즉 별도의 공인 IP를 가진 서버(S)를 가정하고, 이 서버가 (본래라면 NAT 뒤의 단말이 처리해야 할) 연결을 대신 처리하면서 내용을 NAT 뒤의 단말에 전달(릴레이)해주면 NAT의 동작에 의존하지 않고 확실하게 연결을 처리할 수 있습니다. 이를 릴레이 기법이라고 하며, TURN이라는 표준으로 정의되어 있습니다.홀 펀칭NAT의 직접적인 도움을 받지 않는 다른 방법 중 한 가지는 홀 펀칭(Hole Punching)이라 불리는 기법입니다. (흔히 UDP 홀펀칭으로 널리 알려졌지만, TCP에 대해서도 적용할 수 있습니다.)홀 펀칭 역시 위의 릴레이와 마찬가지로 중계 서버(S)를 가정합니다. 다만 릴레이와 다른 점은, 중계 서버가 직접 통신을 전부 중계하는 것이 아니라, 접속을 처리할 단말(A)이 속한 NAT의 공인 IP와 포트 정보만 접속을 원하는 단말(B)에 넘겨서, B가 A에 접속할 때 A의 사설 IP가 아닌 NAT의 공인 IP와 포트로 접속을 시도하는 방식입니다.홀 펀칭은 UPnP처럼 NAT에 특정 프로토콜의 구현을 요구하는 것은 아니지만, NAT의 포트 매핑 방식을 이용하는 기법이기 때문에, 동작 모드에 따라, 보다 정확하게 이야기하자면, 목적지 독립적 매핑(Endpoint Independent Mapping)으로 동작하는 NAT에서만 적용 가능합니다.다음 이야기들위에서 살펴 본 NAT 통과 기법들은 실현 가능한 상황이나 장단점이 각기 다릅니다. 해서 현업에서는 다양한 방법을 복합적으로 사용합니다. 다음 시간에는 그 중에서 가장 비싸지만 가장 안정적으로 통신을 보장할 수 있는 TURN을 이용한 릴레이 기법에 대해서 더 자세히 살펴보도록 하겠습니다., 
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.129 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.130 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: 시작하며, https://snack.planetarium.dev/kor/2019/03/beginning/, , 문성원, 2019년 3월 29일, , 0, 안녕하세요.
블록체인 기술을 통해 탈중앙 멀티플레이 게임과 함께,
누구나 그런 게임을 만들 수 있는 오픈 소스 라이브러리를
만들고 있는 플라네타리움 팀입니다.탈중앙화나 블록체인에 대해서는 2009년에 비트코인이 선을 보인 이래로
많은 연구나 개발이 진행이 된 분야입니다. 더 거슬러 올라가자면 컴퓨터 과학
분야에서 분산 컴퓨팅이란 이름으로 연구되던 부분이기도 하죠.
하지만 이러한 기술을 블록체인 코어 레벨에서 게임 개발 프로세스와 연결해서
개발하다 보니 기존 연구를 바로 적용하기 어렵거나, 게임 개발에 필요한
플랫폼에 구현체가 없는 경우가 종종 있었습니다.저희는 스낵처럼 짧은 글들을 통해, 이런 시행착오를 통해 어떤 것을
배웠는지를 공유하려고 합니다.
“스낵"이란 이름에서 드러나는 것처럼, 일반적인 블로그 포스팅에 비해
읽는 쪽도 쓰는 쪽도 크게 부담이 가지 않는 짧은 호흡을 지향하고 있으며
그만큼 갱신도 자주 하려고 합니다.그럼 첫 포스팅으로 찾아뵙겠습니다., 
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.130 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 7
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.131 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.131 [main] TRACE P.M.m.FeedMapper.selectNotCategory - <==        Row: Libplanet 0.10 릴리스, https://snack.planetarium.dev/kor/2020/12/libplanet-0.10/, , 이수호, 2020년 12월 8일, , 0, 안녕하세요. Libplanet의 열 번째 마이너 버전인 0.10 버전이
릴리스되었습니다.Libplanet은 분산 P2P로 돌아가는 온라인 멀티플레이어 게임을 만들 때,
매번 구현해야 하는 P2P 통신이나 데이터 동기화 등의 문제를 푸는
공용 라이브러리입니다.이번 버전부터 Libplanet은 상태를 관리하기 위해 MPT를
사용하고, 자산 관리를 위한 별도의 API가 추가되는 등, 여기서 소개하는 내용 이외에도
인터페이스 내외로 많은 변경점이 있었습니다.이 글에서는 0.10 버전의 주요 변경 사항들에 대해서 다루겠습니다.결과 상태를 포함하여 유도된 Block<T>.Hash그동안 Block<T>은 해당 블록이 가지고 있는 상태에 대한 정보를 따로 들고 있지 않았습니다.
따라서 블록에서 상태를 유도할 수는 있어도, 블록에서 상태의 정합성 등을 검증할 수 있는 방법은
오직 액션을 직접 실행하는 방법 뿐이었습니다. 하지만 이제 Block<T>.Hash 는 해당 블록에 대한 정보 뿐만 아니라,
블록 내 액션을 평가하고 나온 결과의 해시값인 Block<T>.StateRootHash도 포함되어 유도됩니다. 이전과 같이 액션을 평가하지 않고 블록 정보만을 가진
해시는 Block<T>.PreEvaluationHash 속성에 들어갑니다.Block<T>.TotalDifficulty그동안은 블록체인의 정본 체인(canonical chain)의 선출 기준에는 블록 높이(Block<T>.Index)만 고려되었습니다.
하지만 네트워크에 같은 높이의 블록이 비슷한 속도로 여럿 나오는 경우는 흔하기에, 합의가 지역적으로만 이뤄지는 경우가 잦았습니다.
같은 높이라면 어떤 블록을 선택해도 괜찮으니, 선택지가 많아 모호성이 생기기 때문입니다.
이 문제를 바로잡기 위해, 새 버전부터는 사실상 선택지가 언제나 하나가 되도록 Block<T>.TotalDifficulty 속성을 추가하고, 이 속성을 정본의 기준으로 삼게 되었습니다.
Block<T>.TotalDifficulty 속성은 해당 블록에서부터 제너시스 블록에 이르는 모든 블록(자기 자신과 제너시스 포함)의 난이도(Block<T>.Difficulty)의 합입니다.
따라서 단순히 난이도가 낮은 블록을 빨리 찍어서 블록을 높게 쌓는 것만으로 정본을 취할 수 없기에 보안 측면에서도 향상됐습니다.MPTMPT는 이더리움 등에서 상태를 저장하는 데에 사용되는 트라이(trie) 자료 구조입니다.
기존에는 상태를 저장하는 데 블록 단위로 전역 상태의 변량을 보존하고 상태 참조라는 색인을 통해
조회하는 방식을 사용했었는데, 이 방식은 오랫동안 갱신되지 않은 상태를 조회할 때
시간이 많이 걸리는 문제가 있었습니다. 이제는 MPT 구조를 통해 훨씬 빠르게 상태를 조회할 수 있게 하였습니다.또한 디버깅을 돕기 위해 새로 추가된 planet mpt 명령어로 블록 간 상태를
비교하거나, 특정 블록에서의 상태를 손쉽게 가져올 수 있게 되었습니다. 사용법은 planet mpt --help 옵션을
참고해 주십시오.자산을 위한 별도 상태 API이제까지 Libplanet으로 게임을 만들 때 게임 내 재화는 다른 게임 내 상태와 같은 방식으로 다뤄졌습니다.
이를테면 NCG(〈나인 크로니클〉 골드)는 정수 자료형의 값으로 구현되었습니다. 그러나 그러한 재화는
복제되거나 함부로 소멸되어서는 안 되는데, 사칙연산이 자유롭고 재화 특유의 성질을 내제하고 있지 않은
정수 자료형으로 재화를 구현하다 보면 버그가 끼어들기 쉬웠습니다.예를 들어, 돈을 이체할 경우에도,
원래 소유자의 잔고는 줄이고 새 소유자의 잔고는 늘려야 하는데, 원래 소유자의 잔고에서 금액을 빼는 것을
빼먹거나 반대로 새 소유자의 잔고에 더하는 것을 빼먹는 버그가 들어갈 수 있었습니다. 혹은 돈을 여러 사람에게
분배할 때도, 나누어 떨어지지 않는 금액이 아무도 모르게 소멸되는 버그도 생기기 쉬웠습니다.더 큰 수준의 버그도 일어나기 쉬웠는데, 이를테면 프로그래머가 별 신경을 쓰지 않고 게임의 보상으로 플레이어에
잔고에 돈을 더해주는 식의 코드만 짜도, 게임 전체의 경제상으로는 사실상 화폐를 사적으로 주조를 하는 것과 다름 없어집니다.이러한 실수들을 일찍부터 방지하기 위해, 이번 버전에서는 자산만을 다루기 위한 별도의 상태 API가 생겼습니다.
기존의 BlockChain<T>.GetState() 및 IAccountStateDelta.GetState() 메서드와 나란히 BlockChain<T>.GetBalance()
및 IAccountStateDelta.GetBalance() 메서드가 생겼고, 상태를 자유롭게 덮어 쓸 수 있는 IAccountStateDelta.SetState() 메서드와
달리 이체를 위한 IAccountStateDelta.TransferAsset()과 주조를 위한 IAccountStateDelta.MintAsset() 등 용도별 메서드가 생겼습니다.또, 자산을 값으로 다룰 때도 .NET의 내장 정수 자료형을 쓰는 대신, Libplanet에 새롭게 더해진
FungibleAssetValue 자료형을 써야 합니다. FungibleAssetValue는 기본적으로 BigInteger처럼 생겼지만,
몇 몇 부분에서 차이가 있습니다.나눗셈을 할 때 나머지 값을 암시적으로 버리지 않고, 항상 나머지를 명시적으로 다뤄야 합니다.
따라서 나눗셈 연산자(/)를 구현하지 않고 DivRem() 메서드만 구현합니다.달러–센트 같이 하부 화폐 단위(minor currency units)를 지원하며, 하부 단위의 자릿수에 한계를 둡니다.서로 통화끼리는 섞이지 않도록, 각 값의 화폐 단위를 보존합니다.
마지막으로, 위의 3번을 구현하기 위해 화폐 단위를 정의하는 Currency 자료형이 생겼습니다.
해당 자료형은 화폐 단위의 명칭이나 티커 심볼, 하부 단위의 자릿수 등을 속성으로 갖습니다.현재 자산 상태 API는 게임 머니 같은 변용성 자산(fungible assets)만 지원하지만, 추후 버전에서는 게임 아이템 같은 대체 불가 자산
NFT도 지원할 예정입니다.새로운 렌더링 API기존에는 액션의 결과를 화면 등에 반영하기 위해 액션 클래스에 Render() 메서드를
구현해야 했습니다. 그러나 이러한 기존 API는 순수한 로직에 해당하는 액션 클래스에 뷰가 섞이게
만드는 문제가 있었습니다.예를 들어 같은 블록체인에 대해 3D 게임 엔진을 탑재한 풀 게임 프론트엔드와,
간단한 알림 기능과 게임 내 자산만 보여주는 지갑 프론트엔드를 만드려고 하면, Render() 메서드에는
양쪽에 필요한 모든 코드가 들어가거나, 콜백을 전역 상태로 두고 이를 호출하는 패턴을 따르게 됩니다.
하나의 액션에 다양한 렌더링을 구현할 수 없기 때문입니다.이를 해결하기 위해 새 버전부터는 IAction 인터페이스에 Render() 및 Unrender()
메서드가 사라지고, 대신 IRenderer<T> 및 그 서브타입인 IActionRenderer<T>
인터페이스가 새롭게 생겼습니다. 프론트엔드는 각자를 위한 IRenderer<T> 또는 IActionRenderer<T> 구현을 갖고,
이를 BlockChain<T> 객체 생성시에 연결하면 됩니다.간단한 렌더링만이 필요할 때는 인터페이스를 구현하는
클래스를 직접 짜는 대신, AnonymousRenderer<T> 클래스를 써보는 것을 추천합니다.1
또한, 새 렌더링 API는 IActionRenderer<T>.RenderActionError() 메서드를 통해 액션에서 난 예외를 다루거나,
IRenderer<T>.RenderBlock() 메서드를 통해 블록체인의 높이가 바뀐 것을 감지하거나, IRenderer<T>.RenderReorg()
메서드를 통해 리오그2가 일어난 것을 감지할 수 있게 되었습니다. 렌더링 코드가 액션과 분리되어 렌더러라는 독립적인 단위가 된 덕에,
데코레이터 패턴을 통한 미들웨어 구조가 가능해졌습니다. 그 예로, 새 버전부터 제공되는 LoggedRenderer<T> 클래스는
다른 IRenderer<T> 구현을 감싸 어떤 렌더링 이벤트가 어떤 시점에 발생했는지를 로그로 남겨줍니다. 디버그할 때는
게임 렌더러를 LoggedRenderer<T>로 감싸서 실행하고, 실제 프로덕션에서는 감싸지 않고 게임 렌더러만을 쓰게 하는 식으로 활용 가능합니다.지연 렌더러Libplanet은 현재 종국성(finality)이 없는 작업 증명(PoW) 방식을 쓰고 있어, 최근 블록들은 리오그가 일어나기 쉽습니다.
이 때문에 여러 암호화폐 지갑이나 거래소에서도 트랜잭션의 컨펌 수(number of confirmations) 표시를 흔히 접할 수 있습니다.
컨펌 수가 높을 수록 리오그가 일어날 개연성이 떨어지기 때문입니다. 게임 내 행동의 결과가 리오그로 인해 너무 자주 변동될 경우 너무 혼란스러우므로,
이를 완화하기 위해 지연 렌더러가 추가됐습니다. DelayedRenderer<T>는 IRenderer<T>를 입력으로 받으며 그 스스로도 IRenderer<T>를 구현하는 데코레이터로,
이름처럼 렌더링 이벤트를 다소 지연시키는 미들웨어입니다. 블록체인에 새 블록이 쌓여도 바로 관련된 이벤트를 발생시키는 대신, 잠시 기다린 뒤 설정한 컨펌 수를 만족하게 되는 순간 이벤트를 발생시킵니다.
나인 크로니클에서도 지연 렌더러를 쓰고 있으며, 컨펌 수는 플레이어가 설정 가능하게 옵션으로 제공하고 있습니다.3정적 분석기Libplanet에서 모든 블록체인 내 상태는 액션을 통해서만 변경될 수 있습니다. 이 액션은 각 노드마다 각자 실행하여 이전 상태로부터 새 상태를 도출하는데,
따라서 블록체인 네트워크의 모든 노드가 일관된 상태를 합의하려면, 액션은 반드시 결정적(deterministic)이어야 합니다.
그러나 아무리 어떠한 요소가 코드를 비결정적으로 만드는지 알고 있다고 하더라도, 복잡한 로직을 결정적으로 짜는 것은 쉽지 않습니다.
알고도 실수할 수 있고, 여러 사람들이 함께 만지다보면 각자 수정한 부분은 결정적으로 보여도 다 합쳐놓고 보니 비결정적으로 되기도 쉽습니다.이러한 실수를 완화하기 위해, 새 버전부터는 Libplanet 액션 코드의 실수를 정적 분석으로 체크하는 Libplanet.Analyzers 패키지가 도입되었습니다.
이 정적 분석기는 저희가 실제로 나인 크로니클을 개발하면서 반복적으로 만났던 실수들을 토대로 흔한 잠재적 버그들을 미리 경고해 줍니다.
사용법은 아주 쉬운데, NuGet 패키지 의존성으로 추가하기만 하면 빌드할 때 C# 컴파일러 오류와 함께 경고로 출력됩니다.다만, 아직 초기 버전이기 때문에, 아직 체크의 수가 다양하지 않고, 또 사람이 보기에는 명백하게 바른 코드인데도 잠재적 버그로 경고하는 경우가 여전히 많습니다.
이러한 부분들은 추후 버전에서 점진적으로 개선될 예정입니다.블록당 바이트 사이즈 및 트랜잭션 수 제한이제까지 Libplanet은 한 블록의 용량이 아무리 크거나 트랜잭션이 아무리 많이 들어가도 이를 제한하지 않았습니다.
그렇지만 이러한 제한이 없을 경우 악의적 공격에 노출되기 쉽고, 아무도 악의적이지 않더라도 너무 많은 트랜잭션을 한 블록에 담으려다 보니
레이턴시가 지나치게 떨어지는 현상이 왕왕 발생했습니다.이를 완화하기 위해, 새 버전에서는 IBlockPolicy<T> 인터페이스에서 GetMaxBlockBytes() 메서드 및 MaxTransactionsPerBlock 속성을 통해
블럭 하나에 최대 몇 바이트까지 차지할 수 있는지, 그리고 한 블럭에 최대 몇 개의 트랜잭션까지 수용할 수 있는지를 네트워크 단위로 설정 가능하게 됐습니다.
마이너는 블록을 만들 때 설정된 수를 초과하지 않는 선에서 알아서 트랜잭션들을 나눠 담게 되며, 악의적인 노드가 네트워크 설정을 초과하는 블록을
만들어서 전파하더라도 다른 노드들은 이 블록을 무효한 것으로 보게 됩니다.네트워크나 애플리케이션에 따라 최적 설정이 달라질 수 있으므로, 설정 수치는 개발 단계에서 시범 네트워크를 운영해보며 조정하는 것이
바람직합니다.그 외그 외에도 여러 성능 개선이나 자잘한 마이너 패치가 있었습니다. 자세한 내용은 전체 변경 내용 에서 확인해 주세요.질문이나 관심이 있으신 분들은 또한 저희 Discord 채널에 놀러와 주세요!Java와 달리 C#에는 익명 클래스가 없습니다. ↩︎리오그에 관해서는 김무훈 님의 지난 스낵 글 〈탈중앙과 온라인 게임이 교차하다〉를 참고하세요. ↩︎현재 UI로 설정 가능하지는 않지만, 설정 파일을 직접 고칠 수 있습니다. ↩︎, 
01:45:49.133 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.133 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 1
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 2
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 3
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 4
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 5
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 6
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getInt columnIndex: 7
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 8
01:45:49.134 [main] TRACE org.postgresql.jdbc.PgConnection -   getString columnIndex: 9
01:45:49.134 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - <==      Total: 49
01:45:49.141 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f054f70]
01:45:49.151 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:49.151 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:49.151 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:49.151 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:49.151 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:49.151 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:49.151 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:49.151 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:49.152 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41a77b62
01:45:49.152 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:49.152 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:49.152 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:49.152 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:49.152 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:49.332 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:49.332 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:49.332 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:49.332 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:49.486 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293949486; nextExpiration=1624293949480; keyCount=0; hasEvents=false; eval=false
01:45:49.510 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:49.510 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:49.902 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:49.902 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:50.081 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=abf27aa8)
01:45:50.081 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md564f9125413068f06be9c94c92c8d84f2)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:50.267 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,047,ckey=1,417,774,385)
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@4a5ed32, maxRows=0, fetchSize=0, flags=1,047
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:50.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@37c9a234, maxRows=0, fetchSize=0, flags=1,047
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:50.446 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:50.493 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293950493; nextExpiration=1624293950486; keyCount=0; hasEvents=false; eval=false
01:45:50.626 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:50.626 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:50.626 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:50.626 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:50.626 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:50.626 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:50.626 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:50.626 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:50.626 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@356bab6b
01:45:50.626 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:50.626 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:50.626 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:50.627 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:50.627 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:50.807 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:50.807 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:50.807 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:50.807 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:50.985 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:50.987 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:51.032 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
01:45:51.032 [main] DEBUG org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1736c1e4] was not registered for synchronization because synchronization is not active
01:45:51.032 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.jdbc.PgStatement$StatementResultHandler@32dcfeea, maxRows=0, fetchSize=0, flags=21
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="",oids={})
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Describe(portal=null)
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:51.033 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:51.221 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:51.221 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:51.221 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE NoData
01:45:51.221 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE EmptyQuery
01:45:51.221 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:51.221 [main] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1938456924 wrapping org.postgresql.jdbc.PgConnection@13f40d71] will not be managed by Spring
01:45:51.221 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - ==>  Preparing: UPDATE feed set category = ? where link = ?
01:45:51.221 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - ==> Parameters: .com(String), https://meetup.toast.com/posts/268(String)
01:45:51.222 [main] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.jdbc.PgStatement$StatementResultHandler@2565a7d0, maxRows=0, fetchSize=0, flags=17
01:45:51.222 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="UPDATE feed set category = $1
        where link = $2",oids={1043,1043})
01:45:51.222 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null,$1=<'.com'>,type=VARCHAR,$2=<'https://meetup.toast.com/posts/268'>,type=VARCHAR)
01:45:51.223 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Describe(portal=null)
01:45:51.223 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=0)
01:45:51.223 [main] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:51.362 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:51.362 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:51.416 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:51.416 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:51.416 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE NoData
01:45:51.416 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(UPDATE 1)
01:45:51.416 [main] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:51.416 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - <==    Updates: 1
01:45:51.416 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1736c1e4]
01:45:51.416 [main] INFO  P.M.MorphemeAnalysisApplication - end MorphemeAnalysisApplication
01:45:51.417 [main] TRACE o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'applicationAvailability'
01:45:51.507 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293951507; nextExpiration=1624293951493; keyCount=0; hasEvents=false; eval=false
01:45:51.541 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=13ef903c)
01:45:51.541 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md5c2f99ea11ca9973e9ef82ef418896301)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,048,ckey=1,482,231,379)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@54e9f344, maxRows=0, fetchSize=0, flags=1,047
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:51.727 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@60c40a5e, maxRows=0, fetchSize=0, flags=1,047
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:51.905 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:52.083 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:52.083 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:52.083 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:52.083 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:52.083 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:52.083 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:52.083 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:52.083 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:52.083 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38920c88
01:45:52.084 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:52.084 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:52.084 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:52.084 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:52.084 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:52.267 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:52.268 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:52.268 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:52.268 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:52.451 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:52.451 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:52.509 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293952509; nextExpiration=1624293952507; keyCount=0; hasEvents=false; eval=false
01:45:52.848 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:52.848 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:53.033 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=8c06a30f)
01:45:53.034 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md536125a3edc5315de11ea1f84b833d592)
01:45:53.219 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,049,ckey=-1,278,384,489)
01:45:53.221 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:53.222 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@4e307321, maxRows=0, fetchSize=0, flags=1,047
01:45:53.222 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:53.222 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:53.222 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:53.222 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@55d8da70, maxRows=0, fetchSize=0, flags=1,047
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:53.406 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:53.512 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293953512; nextExpiration=1624293953509; keyCount=0; hasEvents=false; eval=false
01:45:53.590 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:53.590 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:53.590 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:53.591 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:53.591 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:53.591 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:53.591 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:53.591 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:53.591 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@158eac6f
01:45:53.591 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:53.591 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:53.591 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:53.591 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:53.591 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:53.774 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:53.774 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:53.774 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:53.774 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:53.956 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:53.956 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:54.338 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:54.338 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:54.521 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=c449d516)
01:45:54.522 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md5bc77b0ec4597bc2fdcc258ba10a7ff7b)
01:45:54.525 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293954525; nextExpiration=1624293954512; keyCount=0; hasEvents=false; eval=false
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,051,ckey=-925,949,748)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@3d50141a, maxRows=0, fetchSize=0, flags=1,047
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:54.705 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:54.892 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:54.892 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:54.892 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:54.892 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:54.893 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@7034c1ea, maxRows=0, fetchSize=0, flags=1,047
01:45:54.893 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:54.893 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:54.893 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:54.893 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:55.086 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:55.086 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:55.086 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:55.086 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:55.086 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:55.086 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:55.086 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:55.086 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:55.086 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@632c8ec6
01:45:55.086 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:55.086 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:55.087 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:55.087 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:55.087 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:55.264 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:55.265 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:55.265 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:55.265 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:55.443 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:55.443 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:55.539 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293955539; nextExpiration=1624293955525; keyCount=0; hasEvents=false; eval=false
01:45:55.809 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:55.809 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:55.987 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=672b7720)
01:45:55.987 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md57d31b81ac20a58c8d1b58751d49bfa70)
01:45:56.166 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:56.167 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,052,ckey=-824,866,003)
01:45:56.168 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:56.169 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@3a1ab18, maxRows=0, fetchSize=0, flags=1,047
01:45:56.169 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:56.169 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:56.169 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:56.169 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@3eec8fb2, maxRows=0, fetchSize=0, flags=1,047
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:56.347 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:56.527 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:56.527 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:56.527 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:56.527 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:56.527 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:56.528 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:56.528 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:56.528 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:56.529 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68812214
01:45:56.529 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:56.529 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:56.529 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:56.529 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:56.529 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:56.553 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293956553; nextExpiration=1624293956539; keyCount=0; hasEvents=false; eval=false
01:45:56.708 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:56.708 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:56.708 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:56.708 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:56.888 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:56.888 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:57.257 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:57.258 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:57.436 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=dce8210e)
01:45:57.436 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md5efc0300f758c987f3b36c5618b55af28)
01:45:57.554 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293957554; nextExpiration=1624293957553; keyCount=0; hasEvents=false; eval=false
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,053,ckey=959,533,390)
01:45:57.616 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:57.617 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@6f5ccb7c, maxRows=0, fetchSize=0, flags=1,047
01:45:57.617 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:57.617 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:57.617 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:57.617 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:57.795 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:57.795 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@612b44e4, maxRows=0, fetchSize=0, flags=1,047
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:57.796 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:57.974 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:57.974 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:57.974 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:57.974 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:57.974 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:57.975 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:57.975 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:57.975 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:57.975 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3be0c66c
01:45:57.975 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:57.975 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:57.975 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:57.975 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:57.975 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:58.156 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:58.156 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:58.156 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:58.156 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:58.337 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:58.338 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:45:58.566 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293958566; nextExpiration=1624293958554; keyCount=0; hasEvents=false; eval=false
01:45:58.709 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:45:58.709 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:45:58.891 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=d6ef8bb8)
01:45:58.891 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md5de59256ce275cb0c1083c33e3076a6a6)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:45:59.073 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,055,ckey=-1,452,481,304)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@5a10d286, maxRows=0, fetchSize=0, flags=1,047
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:59.074 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@531ef593, maxRows=0, fetchSize=0, flags=1,047
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:45:59.255 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:45:59.256 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:45:59.256 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:45:59.437 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:45:59.437 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:45:59.437 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:45:59.437 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:45:59.438 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:45:59.438 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:59.438 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:45:59.438 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:45:59.438 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68299770
01:45:59.438 [HikariPool-1 connection adder] DEBUG org.postgresql.Driver - Connecting with URL: jdbc:postgresql://3.142.239.225:5432/barbell
01:45:59.438 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection - PostgreSQL JDBC Driver 42.2.19
01:45:59.438 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setDefaultFetchSize = 0
01:45:59.438 [HikariPool-1 connection adder] DEBUG org.postgresql.jdbc.PgConnection -   setPrepareThreshold = 5
01:45:59.438 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Trying to establish a protocol version 3 connection to 3.142.239.225:5432
01:45:59.568 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293959568; nextExpiration=1624293959566; keyCount=0; hasEvents=false; eval=false
01:45:59.622 [HikariPool-1 connection adder] TRACE org.postgresql.core.Encoding - Creating new Encoding UTF-8 with fastASCIINumbers true
01:45:59.622 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Receive Buffer Size is 65,536
01:45:59.622 [HikariPool-1 connection adder] DEBUG o.p.core.v3.ConnectionFactoryImpl - Send Buffer Size is 65,536
01:45:59.622 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> SSLRequest
01:45:59.803 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE SSLOk
01:45:59.803 [HikariPool-1 connection adder] DEBUG org.postgresql.ssl.MakeSSL - converting regular socket connection to ssl
01:46:00.185 [HikariPool-1 connection adder] DEBUG jdk.event.security -  TLSHandshake: 3.142.239.225:5432, TLSv1.3, TLS_AES_256_GCM_SHA384, -1666975576
01:46:00.185 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> StartupPacket(user=rssatom, database=barbell, client_encoding=UTF8, DateStyle=ISO, TimeZone=Asia/Seoul, extra_float_digits=2)
01:46:00.366 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationReqMD5(salt=494c63a9)
01:46:00.367 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  FE=> Password(md5digest=md524bb8d1a6f2d5ac327c00e2d5ef2d7d9)
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.ConnectionFactoryImpl -  <=BE AuthenticationOk
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = )
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(client_encoding = UTF8)
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(DateStyle = ISO, MDY)
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(integer_datetimes = on)
01:46:00.549 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(IntervalStyle = postgres)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(is_superuser = off)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_encoding = UTF8)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(server_version = 12.7 (Ubuntu 12.7-0ubuntu0.20.04.1))
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(session_authorization = rssatom)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(standard_conforming_strings = on)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(TimeZone = Asia/Seoul)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BackendKeyData(pid=919,056,ckey=1,213,176,750)
01:46:00.550 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:46:00.551 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@55c7efbf, maxRows=0, fetchSize=0, flags=1,047
01:46:00.551 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET extra_float_digits = 3",oids={})
01:46:00.551 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:46:00.551 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:46:00.551 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:46:00.571 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293960571; nextExpiration=1624293960568; keyCount=0; hasEvents=false; eval=false
01:46:00.731 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:46:00.731 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:46:00.731 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:46:00.731 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:46:00.731 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -   simple execute, handler=org.postgresql.core.SetupQueryRunner$SimpleResultHandler@99f8363, maxRows=0, fetchSize=0, flags=1,047
01:46:00.732 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Parse(stmt=null,query="SET application_name = 'PostgreSQL JDBC Driver'",oids={})
01:46:00.732 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Bind(stmt=null,portal=null)
01:46:00.732 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Execute(portal=null,limit=1)
01:46:00.732 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  FE=> Sync
01:46:00.912 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParseComplete [null]
01:46:00.912 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE BindComplete [unnamed]
01:46:00.912 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ParameterStatus(application_name = PostgreSQL JDBC Driver)
01:46:00.912 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE CommandStatus(SET)
01:46:00.912 [HikariPool-1 connection adder] TRACE o.p.core.v3.QueryExecutorImpl -  <=BE ReadyForQuery(I)
01:46:00.912 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary send = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:46:00.912 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     types using binary receive = TIMESTAMPTZ,OID_ARRAY,UUID,BYTEA_ARRAY,INT2_ARRAY,INT4_ARRAY,BYTEA,TEXT_ARRAY,TIMETZ,INT8,INT2,INT4,VARCHAR_ARRAY,INT8_ARRAY,POINT,DATE,TIMESTAMP,TIME,BOX,FLOAT4,FLOAT8,FLOAT4_ARRAY,FLOAT8_ARRAY
01:46:00.912 [HikariPool-1 connection adder] TRACE org.postgresql.jdbc.PgConnection -     integer date/time = true
01:46:00.912 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d894dae
01:46:00.912 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
01:46:01.577 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293961577; nextExpiration=1624293961571; keyCount=0; hasEvents=false; eval=false
01:46:02.581 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293962581; nextExpiration=1624293962577; keyCount=0; hasEvents=false; eval=false
01:46:03.583 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293963583; nextExpiration=1624293963581; keyCount=0; hasEvents=false; eval=false
01:46:04.597 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293964597; nextExpiration=1624293964583; keyCount=0; hasEvents=false; eval=false
01:46:05.603 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293965603; nextExpiration=1624293965597; keyCount=0; hasEvents=false; eval=false
01:46:06.606 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293966606; nextExpiration=1624293966603; keyCount=0; hasEvents=false; eval=false
01:46:07.620 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293967620; nextExpiration=1624293967606; keyCount=0; hasEvents=false; eval=false
01:46:08.622 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293968622; nextExpiration=1624293968620; keyCount=0; hasEvents=false; eval=false
01:46:09.623 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293969623; nextExpiration=1624293969622; keyCount=0; hasEvents=false; eval=false
01:46:10.627 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293970627; nextExpiration=1624293970623; keyCount=0; hasEvents=false; eval=false
01:46:11.631 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293971631; nextExpiration=1624293971627; keyCount=0; hasEvents=false; eval=false
01:46:12.632 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293972632; nextExpiration=1624293972631; keyCount=0; hasEvents=false; eval=false
01:46:13.633 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293973633; nextExpiration=1624293973632; keyCount=0; hasEvents=false; eval=false
01:46:14.646 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293974646; nextExpiration=1624293974633; keyCount=0; hasEvents=false; eval=false
01:46:15.652 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293975652; nextExpiration=1624293975646; keyCount=0; hasEvents=false; eval=false
01:46:16.662 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293976662; nextExpiration=1624293976652; keyCount=0; hasEvents=false; eval=false
01:46:17.665 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293977665; nextExpiration=1624293977662; keyCount=0; hasEvents=false; eval=false
01:46:17.680 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:46:17.680 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:46:18.676 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293978676; nextExpiration=1624293978665; keyCount=0; hasEvents=false; eval=false
01:46:19.677 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293979677; nextExpiration=1624293979676; keyCount=0; hasEvents=false; eval=false
01:46:20.679 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293980679; nextExpiration=1624293980677; keyCount=0; hasEvents=false; eval=false
01:46:21.686 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293981686; nextExpiration=1624293981679; keyCount=0; hasEvents=false; eval=false
01:46:22.689 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293982689; nextExpiration=1624293982686; keyCount=0; hasEvents=false; eval=false
01:46:23.702 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293983702; nextExpiration=1624293983689; keyCount=0; hasEvents=false; eval=false
01:46:24.715 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293984715; nextExpiration=1624293984702; keyCount=0; hasEvents=false; eval=false
01:46:25.728 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293985728; nextExpiration=1624293985715; keyCount=0; hasEvents=false; eval=false
01:46:26.741 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293986741; nextExpiration=1624293986728; keyCount=0; hasEvents=false; eval=false
01:46:27.754 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293987754; nextExpiration=1624293987741; keyCount=0; hasEvents=false; eval=false
01:46:28.767 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293988767; nextExpiration=1624293988754; keyCount=0; hasEvents=false; eval=false
01:46:29.768 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293989768; nextExpiration=1624293989767; keyCount=0; hasEvents=false; eval=false
01:46:30.778 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293990778; nextExpiration=1624293990768; keyCount=0; hasEvents=false; eval=false
01:46:31.790 [http-nio-8080-ClientPoller] DEBUG o.apache.tomcat.util.net.NioEndpoint - timeout completed: keys processed=0; now=1624293991790; nextExpiration=1624293991778; keyCount=0; hasEvents=false; eval=false
01:46:43.223 [main] INFO  P.M.MorphemeAnalysisApplication - Starting MorphemeAnalysisApplication using Java 11.0.10 on DESKTOP-OB9UN6A with PID 18728 (C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main started by RNHappySmile in C:\Playground\barbell\MorphemeAnalysis)
01:46:43.226 [main] DEBUG P.M.MorphemeAnalysisApplication - Running with Spring Boot v2.4.5, Spring v5.3.6
01:46:43.226 [main] INFO  P.M.MorphemeAnalysisApplication - No active profile set, falling back to default profiles: default
01:46:43.226 [main] DEBUG o.s.boot.SpringApplication - Loading source class Parser.MorphemeAnalysis.MorphemeAnalysisApplication
01:46:43.281 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92
01:46:43.304 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
01:46:43.323 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
01:46:43.577 [main] DEBUG o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.datasource.url' in PropertySource 'configurationProperties' with value of type String
01:46:43.896 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0'
01:46:43.906 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
01:46:43.917 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
01:46:43.921 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\Playground\barbell\MorphemeAnalysis\build\classes\java\main\Parser\MorphemeAnalysis\mapper\FeedMapper.class]
01:46:43.922 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'feedMapper' and 'Parser.MorphemeAnalysis.mapper.FeedMapper' mapperInterface
01:46:43.923 [main] DEBUG o.m.s.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'feedMapper'.
01:46:43.997 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
01:46:43.998 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
01:46:43.999 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
01:46:43.999 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
01:46:44.002 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
01:46:44.003 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
01:46:44.007 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
01:46:44.007 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
01:46:44.007 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
01:46:44.009 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
01:46:44.012 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
01:46:44.021 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
01:46:44.028 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
01:46:44.042 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
01:46:44.042 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
01:46:44.046 [main] DEBUG o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@33db72bd]
01:46:44.047 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
01:46:44.047 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
01:46:44.048 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
01:46:44.048 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
01:46:44.057 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
01:46:44.061 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
01:46:44.062 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
01:46:44.069 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
01:46:44.069 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
01:46:44.111 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
01:46:44.111 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
01:46:44.113 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
01:46:44.113 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
01:46:44.117 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.126 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
01:46:44.141 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.142 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
01:46:44.143 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.144 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
01:46:44.144 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
01:46:44.145 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
01:46:44.145 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.146 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
01:46:44.147 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
01:46:44.147 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.168 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
01:46:44.168 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
01:46:44.168 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
01:46:44.170 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
01:46:44.170 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
01:46:44.171 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
01:46:44.171 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
01:46:44.172 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:46:44.183 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:46:44.202 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
01:46:44.202 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:46:44.204 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
01:46:44.204 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
01:46:44.205 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:46:44.212 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
01:46:44.223 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
01:46:44.878 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\RNHappySmile\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.4.5\d9b82470df2e9549e448d7cef39e578d91f9867f\spring-boot-2.4.5.jar
01:46:44.878 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\RNHappySmile\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.4.5\d9b82470df2e9549e448d7cef39e578d91f9867f\spring-boot-2.4.5.jar
01:46:44.878 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
01:46:44.902 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
01:46:44.913 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
01:46:44.913 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
01:46:44.913 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.45]
01:46:45.036 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
01:46:45.036 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
01:46:45.036 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1755 ms
01:46:45.040 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
01:46:45.043 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
01:46:45.043 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
01:46:45.048 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
01:46:45.056 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
01:46:45.056 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
01:46:45.096 [main] DEBUG o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
01:46:45.097 [main] DEBUG o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
01:46:45.097 [main] DEBUG o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
01:46:45.107 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'morphemeAnalysisApplication'
01:46:45.110 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'feedMapper'
01:46:45.115 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionFactory'
01:46:45.116 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
01:46:45.116 [main] DEBUG o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$80049a6] - unable to determine constructor/method parameter names
01:46:45.118 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:46:45.121 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
01:46:45.121 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.126 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
01:46:45.126 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
01:46:45.127 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:46:45.143 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:46:45.156 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@69663380
01:46:45.170 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
01:46:45.172 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
01:46:45.173 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.177 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
01:46:45.261 [main] DEBUG o.m.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified.
01:46:45.263 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionTemplate'
01:46:45.263 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
01:46:45.369 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
01:46:45.370 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
01:46:45.370 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
01:46:45.371 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
01:46:45.373 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
01:46:45.374 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
01:46:45.375 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
01:46:45.376 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:46:45.377 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
01:46:45.379 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
01:46:45.380 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
01:46:45.381 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
01:46:45.383 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
01:46:45.384 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:46:45.390 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:46:45.392 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.392 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:46:45.392 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:46:45.392 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
01:46:45.395 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
01:46:45.399 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
01:46:45.400 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
01:46:45.408 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
01:46:45.411 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
01:46:45.411 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:46:45.412 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:46:45.412 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58670130'
01:46:45.420 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
01:46:45.421 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
01:46:45.421 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
01:46:45.421 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58670130'
01:46:45.423 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
01:46:45.425 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
01:46:45.433 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
01:46:45.445 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
01:46:45.447 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.447 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
01:46:45.447 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
01:46:45.450 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.450 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
01:46:45.450 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
01:46:45.462 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
01:46:45.462 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
01:46:45.465 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
01:46:45.465 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
01:46:45.466 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
01:46:45.469 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
01:46:45.470 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
01:46:45.470 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
01:46:45.471 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
01:46:45.471 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
01:46:45.472 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
01:46:45.472 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
01:46:45.473 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:46:45.476 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.476 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
01:46:45.476 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.477 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
01:46:45.478 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
01:46:45.478 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
01:46:45.481 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
01:46:45.482 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
01:46:45.489 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
01:46:45.504 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
01:46:45.513 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
01:46:45.513 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
01:46:45.517 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
01:46:45.526 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
01:46:45.560 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
01:46:45.561 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
01:46:45.564 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.565 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.565 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.566 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.566 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.566 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.601 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
01:46:45.604 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 2 mappings in 'requestMappingHandlerMapping'
01:46:45.605 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
01:46:45.606 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.606 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.606 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.612 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
01:46:45.614 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver'
01:46:45.615 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager'
01:46:45.618 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser'
01:46:45.618 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
01:46:45.619 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
01:46:45.620 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
01:46:45.620 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.620 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.621 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
01:46:45.622 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.622 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.623 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
01:46:45.624 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
01:46:45.625 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
01:46:45.625 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.628 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
01:46:45.629 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.629 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
01:46:45.629 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
01:46:45.638 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [Classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [Classpath [META-INF/resources/], Classpath [resources/], Classpath [static/], Classpath [public/], ServletContext [/]]}
01:46:45.639 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
01:46:45.640 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
01:46:45.641 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
01:46:45.642 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
01:46:45.642 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
01:46:45.644 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
01:46:45.645 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
01:46:45.645 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
01:46:45.645 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.648 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
01:46:45.651 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
01:46:45.652 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
01:46:45.654 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator'
01:46:45.656 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
01:46:45.662 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
01:46:45.662 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58670130'
01:46:45.664 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'thymeleafViewResolver'
01:46:45.664 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
01:46:45.664 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:46:45.667 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'templateEngine'
01:46:45.667 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
01:46:45.668 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'templateEngine' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:46:45.685 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultTemplateResolver'
01:46:45.685 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
01:46:45.689 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:46:45.689 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ad59d92'
01:46:45.695 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'java8TimeDialect'
01:46:45.696 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
01:46:45.699 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
01:46:45.699 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'templateEngine'
01:46:45.707 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
01:46:45.710 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
01:46:45.715 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
01:46:45.716 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
01:46:45.716 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
01:46:45.717 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
01:46:45.717 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
01:46:45.718 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
01:46:45.718 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
01:46:45.718 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
01:46:45.719 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
01:46:45.719 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58670130'
01:46:45.720 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
01:46:45.720 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
01:46:45.720 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
01:46:45.722 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
01:46:45.722 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
01:46:45.723 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
01:46:45.723 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:46:45.724 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
01:46:45.725 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
01:46:45.726 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
01:46:45.726 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
01:46:45.728 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:46:45.729 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
01:46:45.730 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
01:46:45.730 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
01:46:45.730 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:46:45.731 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
01:46:45.731 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
01:46:45.740 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
01:46:45.741 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
01:46:45.741 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
01:46:45.745 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
01:46:45.745 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
01:46:45.746 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
01:46:45.747 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:46:45.749 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
01:46:45.750 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
01:46:45.752 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
01:46:45.753 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
01:46:45.753 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
01:46:45.753 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
01:46:45.753 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
01:46:45.757 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
01:46:45.757 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
01:46:45.758 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
01:46:45.763 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
01:46:45.763 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
01:46:45.763 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
01:46:45.764 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
01:46:45.764 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
01:46:45.764 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
01:46:45.766 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
01:46:45.767 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
01:46:45.767 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
01:46:45.778 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483646
01:46:45.778 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
01:46:45.807 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
01:46:45.808 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
01:46:45.808 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
01:46:45.808 [main] DEBUG o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
01:46:45.828 [main] DEBUG o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.h2.console.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.activation.MimeType' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' Parser.MorphemeAnalysis.MorphemeAnalysisApplication#MapperScannerRegistrar#0 (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



01:46:45.847 [main] INFO  P.M.MorphemeAnalysisApplication - Started MorphemeAnalysisApplication in 3.022 seconds (JVM running for 3.58)
01:46:45.849 [main] INFO  P.M.MorphemeAnalysisApplication - start MorphemeAnalysisApplication
01:46:45.849 [main] DEBUG P.M.MorphemeAnalysisApplication - log test
01:46:45.858 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
01:46:45.864 [main] DEBUG org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e424582] was not registered for synchronization because synchronization is not active
01:46:45.872 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
01:46:45.872 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................none
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............none
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................none
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none
01:46:45.874 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none
01:46:45.875 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................."org.postgresql.Driver"
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName......none
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://3.142.239.225:5432/barbell
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................10
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................none
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
01:46:45.876 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................"HikariPool-1"
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema..........................none
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................internal
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............default
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................"rssatom"
01:46:45.877 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............5000
01:46:45.877 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
01:46:47.898 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@336f49a1
01:46:47.899 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
01:46:47.902 [main] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1401212518 wrapping org.postgresql.jdbc.PgConnection@336f49a1] will not be managed by Spring
01:46:47.908 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - ==>  Preparing: SELECT * FROM feed where category = ''
01:46:47.924 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - ==> Parameters: 
01:46:48.001 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
01:46:49.301 [main] DEBUG P.M.m.FeedMapper.selectNotCategory - <==      Total: 48
01:46:49.308 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e424582]
01:46:49.475 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19e0babe
01:46:50.935 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@172757f2
01:46:51.002 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
01:46:51.002 [main] DEBUG org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a4332] was not registered for synchronization because synchronization is not active
01:46:51.002 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
01:46:51.180 [main] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@750667100 wrapping org.postgresql.jdbc.PgConnection@336f49a1] will not be managed by Spring
01:46:51.181 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - ==>  Preparing: UPDATE feed set category = ? where link = ?
01:46:51.182 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - ==> Parameters: 개발(String), https://meetup.toast.com/posts/266(String)
01:46:51.370 [main] DEBUG P.M.mapper.FeedMapper.updateCategory - <==    Updates: 1
01:46:51.370 [main] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2a4332]
01:46:51.370 [main] INFO  P.M.MorphemeAnalysisApplication - end MorphemeAnalysisApplication
01:46:52.394 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32454512
01:46:53.839 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3635a286
01:46:55.332 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65929866
01:46:56.774 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@313470cf
01:46:58.219 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2941ce2e
01:46:59.689 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@327b7812
01:47:01.146 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@435b8793
01:47:01.146 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
01:47:18.005 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:47:18.005 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:47:48.019 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:47:48.020 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:48:18.022 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:48:18.023 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:48:48.038 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:48:48.038 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:49:18.042 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:49:18.042 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:49:48.045 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:49:48.045 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:50:18.050 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:50:18.050 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:50:48.065 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:50:48.065 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:51:18.077 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:51:18.077 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:51:48.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:51:48.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:52:18.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:52:18.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:52:48.099 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:52:48.099 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:53:18.107 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:53:18.107 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:53:48.116 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:53:48.116 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
01:54:18.127 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
01:54:18.127 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
